[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "mixed_models_guide",
    "section": "",
    "text": "Preface\nThis is a defaulf file accompanying a quarto book.\nTo learn more about Quarto books visit https://quarto.org/docs/books."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "This guide is focused on frequentist implementations of mixed models in R. If someone wants to write a Bayesian guide, please go for it! I’m not experience sufficiently in Bayesian to do this.\nEach section contains the minimum to run a model, with more detail found at the later chapters. Unless I decide it makes more sense to include early materials.\nA Tidymodels framework is used whenever possible because that is a promising avenue for making the syntax easier to write across packages."
  },
  {
    "objectID": "glmm.html#hurdle-model",
    "href": "glmm.html#hurdle-model",
    "title": "3  Generalized Linear Mixed Models",
    "section": "3.1 Hurdle model",
    "text": "3.1 Hurdle model\n\ninsect_exp <- read.csv(\"data/insect_count_data_glmm.csv\")\n\nplot: a unique number referring to each experimental unit\ntreatment: pesticidal treatment (6 different products)\nrow: plot position for row\ncol: plot positions for column or range\nblock: the blocking unit\ninsect_counts: response variable\nsampling_date: dates when each experimental unit were evaluated for insect counts\n\nhead(insect_exp)\n\n  plot treatment row column block insect_counts sampling_date\n1  101         2   1      1     1             4       6/17/88\n2  102         5   1      2     1             1       6/17/88\n3  103         1   1      3     1             0       6/17/88\n4  104         6   1      4     1             0       6/17/88\n5  201         3   2      1     1             0       6/17/88\n6  202         4   2      2     1             0       6/17/88\n\n\nTwo new variables created:\ntreatment: original variable treatment converted to a factor\nblock: original variable block converted to a factor\nDate: factor version of sampling_date\n\nlibrary(dplyr)\n\ninsect_exp <- insect_exp %>% \n  mutate(block = as.factor(block), \n         treatment = as.character(treatment), \n         sampling_date = as.Date(sampling_date, format = \"%m/%d/%y\")) %>% \n  mutate(Date = as.factor(sampling_date))\n\nVisualise data\n\nlibrary(ggplot2) \n\ninsect_exp %>% group_by(sampling_date, treatment) %>% \n  summarise(mean_counts = mean(insect_counts)) %>% \n  ggplot(., aes(x = sampling_date, y = mean_counts, color = treatment)) +\n    geom_point(size = 2) +\n    geom_line() +\n    theme_classic()\n\n\n\nggplot(insect_exp, aes(x = sampling_date, y = insect_counts, color = treatment, group = plot)) +\n  geom_point(size = 2) +\n  geom_line() +\n  theme_classic()\n\n\n\n\nModel statement {[[[[ FIX THIS - it’s still written for alfalfa ]]]]}\n\\[y_{ijk} = \\mu + \\alpha_i+\\beta_j + \\gamma_k + a_l + b_m + c_n + \\epsilon_{}\\] where\n\\(\\mu\\) = overall mean/intercept \\(\\alpha_i\\) = effect of the \\(i^{th}\\) pesticide treatment \\(\\beta_j\\) = effect of the \\(j^{th}\\) block \\(\\gamma_k\\) = effect of the \\(k^{th}\\) sampling date\nTo make things easier, the interactions between the fixed effects are not shown.\n\nlibrary(glmmTMB)\n\nm1 = glmmTMB(\n  insect_counts ~ treatment + Date + ar1(Date + 0|plot) + (1|block),\n  ziformula = ~ treatment,\n  data = insect_exp, na.action = na.exclude, \n  family = nbinom2)\n\nspecial correlation structure for correlated error terms ar1() (autoregressive 1).\nThere are several other specialized covariance structures implmented by glmmTMB. In general, repeated measures syntax follow this convention: (time + 0 | grouping).\nWe can test other distributions\n\nm2 <- update(m1, family = poisson)\n\nWarning in fitTMB(TMBStruc): Model convergence problem; non-positive-definite\nHessian matrix. See vignette('troubleshooting')\n\n\nWarning in fitTMB(TMBStruc): Model convergence problem; false convergence (8).\nSee vignette('troubleshooting')\n\nm3 <- update(m1, family = nbinom1)\n\nWarning in (function (start, objective, gradient = NULL, hessian = NULL, : NA/\nNaN function evaluation\n\n\nWarning in fitTMB(TMBStruc): Model convergence problem; non-positive-definite\nHessian matrix. See vignette('troubleshooting')\n\n\nWarning in fitTMB(TMBStruc): Model convergence problem; false convergence (8).\nSee vignette('troubleshooting')\n\n\nFitting glmm is hard. Basic guidance on model fitting: https://glmmtmb.github.io/glmmTMB/articles/troubleshooting.html\n\ndiagnose(m2)\n\nUnusually large Z-statistics (|x|>5):\n\n    treatment3     treatment4     treatment5 Date1988-07-06 Date1988-07-13 \n     -6.616584     -15.016232     -10.313314       9.371860       6.381998 \nDate1988-08-03 zi~(Intercept)  zi~treatment4 \n     -5.415075     -22.156803      59.213969 \n\nLarge Z-statistics (estimate/std err) suggest a *possible* failure of\nthe Wald approximation - often also associated with parameters that are\nat or near the edge of their range (e.g. random-effects standard\ndeviations approaching 0).  (Alternately, they may simply represent\nvery well-estimated parameters; intercepts of non-centered models may\nfall in this category.) While the Wald p-values and standard errors\nlisted in summary() may be unreliable, profile confidence intervals\n(see ?confint.glmmTMB) and likelihood ratio test p-values derived by\ncomparing models (e.g. ?drop1) are probably still OK.  (Note that the\nLRT is conservative when the null value is on the boundary, e.g. a\nvariance or zero-inflation value of 0 (Self and Liang 1987; Stram and\nLee 1994; Goldman and Whelan 2000); in simple cases these p-values are\napproximately twice as large as they should be.)\n\n\nNon-positive definite (NPD) Hessian\n\nThe Hessian matrix represents the curvature of the log-likelihood\nsurface at the maximum likelihood estimate (MLE) of the parameters (its\ninverse is the estimate of the parameter covariance matrix).  A\nnon-positive-definite Hessian means that the likelihood surface is\napproximately flat (or upward-curving) at the MLE, which means the\nmodel is overfitted or poorly posed in some way. NPD Hessians are often\nassociated with extreme parameter estimates.\n\n\nparameters with non-finite standard deviations:\n(Intercept), Date1988-06-22, zi~treatment3, zi~treatment6,\ntheta_Date+0|plot.2, theta_1|block.1\n\n\n\nrecomputing Hessian via Richardson extrapolation. If this is too slow, consider setting check_hessian = FALSE \n\nHessian has complex eigenvalues\n\nWe would have used the smallest eigenvalues of the Hessian to determine\nwhich components were bad but instead we got complex eigenvalues. (Not\nreally sure what to do with this ...)\n\ndiagnose(m3)\n\nUnusually large coefficients (|x|>10):\n\nd~(Intercept) \n    -26.35181 \n\nLarge negative coefficients in zi (log-odds of zero-inflation),\ndispersion, or random effects (log-standard deviations) suggest\nunnecessary components (converging to zero on the constrained scale);\nlarge negative and/or positive components in binomial or Poisson\nconditional parameters suggest (quasi-)complete separation. Large\nvalues of nbinom2 dispersion suggest that you should use a Poisson\nmodel instead.\n\n\nUnusually large Z-statistics (|x|>5):\n\ntreatment5 \n -6.281128 \n\nLarge Z-statistics (estimate/std err) suggest a *possible* failure of\nthe Wald approximation - often also associated with parameters that are\nat or near the edge of their range (e.g. random-effects standard\ndeviations approaching 0).  (Alternately, they may simply represent\nvery well-estimated parameters; intercepts of non-centered models may\nfall in this category.) While the Wald p-values and standard errors\nlisted in summary() may be unreliable, profile confidence intervals\n(see ?confint.glmmTMB) and likelihood ratio test p-values derived by\ncomparing models (e.g. ?drop1) are probably still OK.  (Note that the\nLRT is conservative when the null value is on the boundary, e.g. a\nvariance or zero-inflation value of 0 (Self and Liang 1987; Stram and\nLee 1994; Goldman and Whelan 2000); in simple cases these p-values are\napproximately twice as large as they should be.)\n\n\nNon-positive definite (NPD) Hessian\n\nThe Hessian matrix represents the curvature of the log-likelihood\nsurface at the maximum likelihood estimate (MLE) of the parameters (its\ninverse is the estimate of the parameter covariance matrix).  A\nnon-positive-definite Hessian means that the likelihood surface is\napproximately flat (or upward-curving) at the MLE, which means the\nmodel is overfitted or poorly posed in some way. NPD Hessians are often\nassociated with extreme parameter estimates.\n\n\nparameters with non-finite standard deviations:\nd~(Intercept)\n\n\n\nrecomputing Hessian via Richardson extrapolation. If this is too slow, consider setting check_hessian = FALSE \n\nHessian has complex eigenvalues\n\nWe would have used the smallest eigenvalues of the Hessian to determine\nwhich components were bad but instead we got complex eigenvalues. (Not\nreally sure what to do with this ...)\n\n\nSummary info\n\nm1\n\nFormula:          \ninsect_counts ~ treatment + Date + ar1(Date + 0 | plot) + (1 |      block)\nZero inflation:                 ~treatment\nData: insect_exp\n      AIC       BIC    logLik  df.resid \n1298.7328 1385.0949 -625.3664       246 \nRandom-effects (co)variances:\n\nConditional model:\n Groups Name           Std.Dev. Corr      \n plot   Date1988-06-17 0.7748   0.49 (ar1)\n block  (Intercept)    0.3333             \n\nNumber of obs: 270 / Conditional model: plot, 30; block, 5\n\nDispersion parameter for nbinom2 family (): 1.76 \n\nFixed Effects:\n\nConditional model:\n   (Intercept)      treatment2      treatment3      treatment4      treatment5  \n       2.39231        -0.04978        -1.53159        -2.75395        -2.50652  \n    treatment6  Date1988-06-22  Date1988-06-27  Date1988-06-29  Date1988-07-06  \n      -1.48975         0.24054         0.26618         0.62692         1.17067  \nDate1988-07-13  Date1988-07-21  Date1988-07-27  Date1988-08-03  \n       0.83442         0.19962        -0.96749        -1.11938  \n\nZero-inflation model:\n(Intercept)   treatment2   treatment3   treatment4   treatment5   treatment6  \n     -2.608       -1.200        1.568        2.607        1.542        2.134  \n\n\nDiagnostics\nLook at residuals over space\n\ninsect_exp$model_resids <- residuals(m1)\n\nggplot(insect_exp, aes(x = row, y = column, fill = model_resids)) +\n  geom_tile() + \n  facet_wrap(facets = vars(Date), nrow = 3, ncol = 3) + \n  scale_fill_viridis_c(direction = -1) + \n  theme_minimal()\n\n\n\n\nuse DHARMa to conduct residual tests\n\nsimulated_resids <- simulateResiduals(m1)\ntestDispersion(simulated_resids)\n\n\n\n\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.23324, p-value = 0.336\nalternative hypothesis: two.sided\n\nplot(simulated_resids)\n\n\n\n\nANOVA\n\ncar::Anova(m1)\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: insect_counts\n           Chisq Df Pr(>Chisq)    \ntreatment 54.358  5  1.769e-10 ***\nDate      41.652  8  1.574e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nglmmTMB is compatible with emmeans and effects."
  },
  {
    "objectID": "special_conditions.html#split-plot-with-repeated-measures",
    "href": "special_conditions.html#split-plot-with-repeated-measures",
    "title": "4  Special Conditions",
    "section": "4.1 Split plot with repeated measures",
    "text": "4.1 Split plot with repeated measures\nMain plot is “irrigation” and split plot is “mix”.\n\nalfalfa_sp <- read.csv(\"data/alfalfa2021_data.csv\")\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\ncut: a cutting (harvest) of alfalfa within a single growing season. This is a temporal unit for repeated measures analysis. There were three cuttings in total for that year and field. The dates are not known, but we cannot assume they are evenly spaced apart.\nirrigation: irrigation treatment (“Full” or “Deficit”)\nplot: a unique number referring to each experimental unit\nblock: the blocking unit\nyield: response variable\nrow: plot position for row\ncol: plot positions for column or range\n\nhead(alfalfa_sp)\n\n    cut irrigation plot block     mix    yield row col\n1 First       Full 1101     1 50A+50O 221.0418   1   1\n2 First       Full 1102     1 75A+25O 288.7987   1   2\n3 First       Full 1103     1 50A+50F 466.7924   1   3\n4 First       Full 1104     1 75A+25M 556.9506   1   4\n5 First       Full 1105     1 50A+50M 422.9160   1   5\n6 First       Full 1106     1 75A+25F 289.8350   2   1\n\n\nTwo new variables created:\nrep: factor version of block (We should treat rep/block as a factor rather than an integer in modelling)\nCut: number version of cut where 1 is the first cutting. This is required by nlme::lme for specialized correlation structures.\n\nalfalfa_sp <- alfalfa_sp %>% \n  mutate(rep = as.factor(block)) %>% \n  mutate(Cut = case_when(\n    cut == \"First\" ~ 1L,\n    cut == \"Second\" ~ 2L,\n    cut == \"Third\" ~ 3L,\n    is.na(cut) ~ NA_integer_)) \n\nVisualise data\n\nlibrary(ggplot2); library(desplot)\n\nalfalfa_sp %>% filter(cut == \"First\") %>% \n  \nggplot(aes(x = col, y = row)) +\n  geom_raster(aes(fill = irrigation)) +\n  geom_tileborder(aes(group = 1, grp = rep), lwd = 1.5) + \n  theme_classic()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\nModel statement\n\\[y_{ijk} = \\mu + \\alpha_i+\\beta_j + \\gamma_k + a_l + b_m + c_n + \\epsilon_{}\\] where\n\\(\\mu\\) = overall mean/intercept\n\\(\\alpha_i\\) = effect of the \\(i^{th}\\) irrigation treatment\n\\(\\beta_j\\) = effect of the \\(j^{th}\\) planting mix treatment \\(\\gamma_k\\) = effect of the \\(k^{th}\\) cutting [[need all those interactions]]\n\nlibrary(nlme)\n\n\nAttaching package: 'nlme'\n\n\nThe following object is masked from 'package:dplyr':\n\n    collapse\n\nm1 <- lme(yield ~ mix*irrigation*cut,\n          random = ~ 1|rep/irrigation/plot,\n          data = alfalfa_sp)\n\nuse a special correlation structure for correlated error terms corCompSymm() is for compound symmetry. There are several other options in the nlm machinery (search “cor” for more options and details on the syntax). In general, repeated measures syntax follow this convention: form = ~ time|grouping. You can also use 1|group and the observation order for each group will be. The default starting value (value) is zero, and if fixed = FALSE (the current nlme default), this value will be allowed to change during the model fitting process.\n\ncorstr <- corCompSymm(value = 0.3, \n                      form = ~ cut|rep/irrigation/plot,\n                      fixed = FALSE)\n\nIt’s important that these two terms match after the “|” in the random and form arguments:\n\nm1 <- lme(yield ~ mix*irrigation*cut,\n          random = ~ 1|rep/irrigation/plot,\n          data = alfalfa_sp)\n\ncorstr <- corCompSymm(value = 0.3, \n                      form = ~ cut|rep/irrigation/plot,\n                      fixed = FALSE)\n\nUpdate the model:\n\nm2 <- update(m1, cor = corstr)\n\nThe usual next steps:\ncheck diagnostics\n\nplot(m2)\n\n\n\nqqnorm(m2, ~ resid(., type = \"p\"), abline = c(0, 1))\n\n\n\n\nLook at the variance components.\n\nVarCorr(m2)\n\n             Variance     StdDev    \nrep =        pdLogChol(1)           \n(Intercept)     83.17553    9.120062\nirrigation = pdLogChol(1)           \n(Intercept)    280.54819   16.749573\nplot =       pdLogChol(1)           \n(Intercept)    481.44292   21.941808\nResidual     16182.24438  127.209451\n\n\nRun ANOVA\n\nanova(m2)\n\n                   numDF denDF   F-value p-value\n(Intercept)            1   102 1432.6369  <.0001\nmix                    9   102   13.6932  <.0001\nirrigation             1     3    4.8770  0.1143\ncut                    2   102    6.0434  0.0033\nmix:irrigation         9   102    0.5256  0.8530\nmix:cut               18   102    0.8029  0.6927\nirrigation:cut         2   102   14.2649  <.0001\nmix:irrigation:cut    18   102    1.0226  0.4418\n\n\nalways check the degrees of freedom (denominator and numerator)!"
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "5  Summary",
    "section": "",
    "text": "In summary, mixed models are complicated."
  }
]