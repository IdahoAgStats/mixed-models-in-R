# Split Plot Design

```{r, include=FALSE, echo=FALSE}
source(here::here("settings.r"))
```

Split-plot design is frequently used for factorial experiments. Such design may incorporate one or more of the completely randomized (CRD), completely randomized block (RCBD), and Latin square designs. The main principle is that there are whole plots or whole units, to which the levels of one or more factors are applied. Thus each whole plot becomes a block for the subplot treatments.

## Details for Split Plot Designs

1.  Whole Plot Randomized as a completely randomized design

The statistical model structure this design:

$$y_{ijk} = \mu + \alpha_i + \beta_k + (\alpha_j\beta_k) + \epsilon_{ij} + \delta_{ijk} $$ Where:

$\mu$= overall experimental mean, $\alpha$ = main effect of whole plot (fixed), $\beta$ = main effect of subplot (fixed), $\alpha$$\tau$ = interaction between factors A and B, $\epsilon_{ij}$ = whole plot error, $\delta_{ijk}$ = subplot error.

$$ \epsilon \sim N(0, \sigma_\epsilon)$$

$$\ \delta  \sim N(0, \sigma_\delta)$$

Both the error and the rep effects are assumed to be normally distributed with a mean of zero and standard deviations of $\sigma_\epsilon$ and $\sigma_\delta$, respectively.

2.  Whole Plot Randomized as an RCBD

This is also referred as "Split-Block RCB" design. The statistical model structure for split plot design:

$$y_{ijk} = \mu + \rho_j +  \alpha_i + \beta_k + (\alpha_i\beta_k) + \epsilon_{ij} + \delta_{ijk}$$ Where:

$\mu$ = overall experimental mean, $\rho$ = block effect (random), $\alpha$ = main effect of whole plot (fixed), $\beta$ = main effect of subplot (fixed), $\alpha$$\beta$ = interaction between factors A and B, $\epsilon_{ij}$ = whole plot error, $\delta_{ijk}$ = subplot error.

$$ \epsilon \sim N(0, \sigma_\epsilon)$$

$$\ \delta  \sim N(0, \sigma_\delta)$$

Both the overall error and the rep effects are assumed to be normally distributed with a mean of zero and standard deviations of $\sigma$ and $\sigma_\delta$, respectively.

::: callout-note
#### 'iid' assumption for error terms
In these model, the error terms, $\epsilon$ are assumed to be "iid", that is, independently and identically distributed. This means they have constant variance and they each individual error term is independent from the others.
::: 

![Split Plot CRD Design](/img/split_plot_CRD.jpeg){fig-align="center" width="500"}

![Split Plot RCBD Design](/img/Split_plot_RCBD.jpeg){fig-align="center" width="500"}

## Analysis Examples
Load required libraries

::: panel-tabset
### lme4

```{r, message=FALSE, warning=FALSE}
library(lme4); library(lmerTest); library(emmeans)
library(dplyr); library(performance); library(ggplot2)
library(broom.mixed)
```

### nlme

```{r, message=FALSE, warning=FALSE}
library(nlme); library(performance); library(emmeans)
library(dplyr); library(ggplot2); library(broom.mixed)
```
:::


### Example model for CRD Split Plot Designs

Let's import height data. It is located [here](https://raw.githubusercontent.com/IdahoAgStats/mixed-models-in-R/main/data/aberdeen2015.csv) if you want to download it yourself (recommended). 

The data (Height data) for this example involves a CRD split plot designed experiment. Treatments are 4 Timings (times) and 8 managements (manage). The whole plots are times and management represents subplot and 3 replications.

```{r}
height_data <- readxl::read_excel(here::here("data", "height_data.xlsx"))
```
#### Data integrity checks

-   Run a cross tabulation using `table()` to check the arrangement of whole-plots and sub-plots.

```{r}
table(height_data$time, height_data$manage)
```
The levels of whole plots and subplots are balanced.

-   Look at structure of the data using `str()`, this will help in identifying class of the variable. In this data set, class of the whole-plot, sub-plot, and block should be factor/character and response variable (height) should be numeric.

```{r}
str(height_data)
```
The 'time', 'manage', and 'rep' are character and variable height is numeric. The structure of the data is in format as needed.
-   Check the number of missing values in each column.

```{r}
apply(height_data, 2, function(x) sum(is.na(x)))
```

-   Exploratory boxplot to look at the height observations at different times with variable managements.

```{r}
ggplot(data = height_data, aes(y = height, x = time)) +
  geom_boxplot(aes(fill = manage), alpha = 0.6)
```

#### Model building

::: column-margin
Recall the model:

$$y_{ijk} = \mu + \gamma_i +  \alpha_j + \beta_k + (\alpha_j\beta_k) + \epsilon_{ijk}$$

For this model, $\gamma$ = block/rep effect (random), $\alpha$ = main effect of whole plot (fixed), $\beta$ = main effect of subplot (fixed), $\alpha$$\beta$ = interaction between factors A and B (fixed).
:::

In order to test the main effects of the treatments as well as the interaction between two factors, we can specify that in model as: `time + manage + time:manage` or `time*manage`.

When dealing with split plot design across reps or blocks, the random effects needs to be nested hierarchically, from largest unit to smallest. For example, in this example the random effects will be designated as `(1 | rep/time)`. This implies that random intercepts vary with rep and time within rep.

::: panel-tabset
#### lme4

```{r}
model1 <- lmer(height ~ time*manage + (1|rep/time), data = height_data)
tidy(model1)
```

#### nlme

```{r}
model1 <-lme(height ~ time*manage,
             random = ~ 1|rep/time, data = height_data)

#summary(model1)
tidy(model1)
```
:::

##### Check Model Assumptions

Before interpreting the model we should investigate the assumptions of the model to ensure any conclusions we draw are valid. There are assumptions that we can check are 1. Homogeneity (equal variance) 2. normality of residuals 3. values with high leverage.

We will use `check_model()` function from 'performance' package. The plots generated using this code gives a visual check of various assumptions including normality of residuals, normality of random effects, heteroscedasticity, homogeneity of variance, and multicollinearity.

```{r, fig.height=9}
check_model(model1)
```

In this case the residuals fit the assumptions of the model well.

#### Inference

The `anova()` function prints the the rows of analysis of variance table for whole-plot, sub-plot, and their interactions. We observed a significant effect of manage factor only.

```{r}
# same syntax for lme4 & nlme
anova(model1, type = "marginal")
```

We can further compute estimated marginal means for each fixed effect and interaction effect can be obtained using `emmeans()`.

```{r}
m1 <- emmeans(model1, ~ time)
m1
```

Further, a pairwise comparison or contrasts can be analyzed using estimated means. In this model, 'time' factor has 4 levels. We can use `pairs()` function to evaluate pairwise comparison among different 'time' levels.

For example, if we want to compare difference in height at different time periods, this could be done using `pairs()` command from emmeans package.

```{r}
pairs(m1)
```


### Example model for RCBD Split Plot Designs

The oats data used in this example is from the MASS package. The design with RCBD split plot with 6 blocks, 3 main plots and 4 subplots. The primary outcome variable was oat yield.

Main plot = Variety (V), 3 levels

Subplot = Nitrogen (N), 4 levels

Number of blocks (B) = 6

Dependent variable = yield (Y)

The objective of this analysis is to study the impact of different varieties and nitrogen application rates on oat yields.

To fully examine the yield of oats due to varieties and nutrient levels in a split plots. We will need to statistically analyse and compare the effects of varieties (main plot), nutrient levels (subplot), their interaction.

```{r}
library(MASS)
data("oats")
head(oats,5)
```

#### Data integrity checks
Let's look at the structure of the data. The "B", "V", and "N" needs to be 'factor' and "Y" should be numeric.

```{r}
str(oats)
```

Next, run the table() command to verify the levels of main-plots and sub-plots.

```{r}
table(oats$V, oats$N)
```

#### Model Building the Model

We are evaluating the effect of V, N and their interaction on yield. The `1|B/V` implies that random intercepts vary with block and V within each block.

::: column-margin
Recall the model:

$$y_{ijk} = \mu + \rho_j +  \alpha_i + \beta_k + (\alpha_i\beta_k) + \epsilon_{ij} + \delta_{ijk}$$ Where:

$\mu$ = overall experimental mean, $\rho$ = block effect (random), $\alpha$ = main effect of whole plot (fixed), $\beta$ = main effect of subplot (fixed), $\alpha$$\beta$ = interaction between factors A and B, $\epsilon_{ij}$ = whole plot error, $\delta_{ijk}$ = subplot error.
:::

::: panel-tabset 
### lme4

```{r}
model2 <- lmer(Y ~  V + N + V:N + (1|B/V), 
                   data = oats, 
                   na.action = na.exclude)
tidy(model2)
```

### nlme

```{r}
model2 <- lme(Y ~  V + N + V:N ,
                  random = ~1|B/V,
                  data = oats, 
                  na.action = na.exclude)
summary(model2)
```

:::

#### Check Model Assumptions

We need to verifiy the normality of residuals and homogeneous variance. Here we are using the `check_model()` function from the performance package.

```{r,  fig.height=3}
check_model(model2, check = c('normality', 'linearity'))
```

#### Inference
We can evaluate the model for the analysis of variance, for V, N and their interaction effect.

```{r}
anova(model2, type = "marginal")
```

Next, we can estimate marignal means for V, N, or their interaction (V*N) effect.

```{r}
emm <- emmeans(model2, ~ V *N) 
emm
```



