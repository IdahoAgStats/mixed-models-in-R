# Split Plot Design

```{r, include=FALSE, echo=FALSE}
source(here::here("settings.r"))
```

## Background

Split plot designs are needed when we cannot randomly assign multiple levels of treatments in a completely randomized experiment. In split-plot design, the experimental units are called *split-plots*, and are nested within *whole plots*. The main principle is that there are whole plots, to which the levels of one or more factors of split-plots are assigned randomly.

```{r, echo=FALSE, eval=FALSE}
library(FielDHub)
library(dplyr)
spd <- split_plot(
  wp = c("A", "B", "C"),
  sp = c("1", "2", "3"),
  reps = 3, 
  type = 1, 
  plotNumber = 1, 
  l = 1,
  seed = 12
) 

dframe <- spd$fieldBook |> arrange(ID) |> 
  mutate(ROWS = rep(1:3, each = 9), COLUMNS = c(1:9, 9:1, 1:9))
write.csv(dframe, here::here("data", "_split_plot_crd.csv"), row.names=FALSE)


spd2 <- split_plot(
  wp = c("A", "B", "C"),
  sp = c("1", "2", "3"),
  reps = 3, 
  type = 2, 
  plotNumber = 1, 
  l = 1,
  seed = 12
) 

dframe2 <- spd2$fieldBook |> arrange(ID) |> 
  mutate(ROWS = c(rep(1:3, 3), rep(4:6, 3), rep(7:9, 3)), 
         COLUMNS = rep(rep(1:3, each = 3), 3))

write.csv(dframe2, here::here("data" "_split_plot_rcbd.csv"), row.names=FALSE)
```

```{r, fig.height=3.5,include=FALSE, eval=FALSE}
library(ggplot2); library(ggokabeito)
spd <- read.csv(here::here("data", "_split_plot_crd.csv"))

ggplot(spd, aes(x = COLUMNS, y = ROWS, fill = TRT_COMB)) +
  geom_tile() +
  scale_x_continuous(breaks = 1:9) +
  scale_y_continuous(breaks = 1:3) +
  geom_text(aes(label = TRT_COMB)) +
  guides(fill = "none") + 
  ggtitle("Split Plot Design (CRD) 3x9") +
  geom_hline(yintercept = 1.5, linewidth = 1.5) + 
  geom_hline(yintercept = 2.5, linewidth = 1.5) +
  geom_vline(xintercept = 3.5, linewidth = 1.5) + 
  geom_vline(xintercept = 6.5, linewidth = 1.5) +
  scale_x_continuous(expand = c(0, 0)) + # Remove x-axis expansion
  scale_y_continuous(expand = c(0, 0)) + # Remove y-axis expansion
  theme_classic() +
  scale_color_okabe_ito(alpha = 0.5, aesthetics = "fill") + 
  theme(axis.line = element_blank(),
        axis.ticks = element_blank()) 

```

```{r, fig.height=3.5}
#| echo: false
#| warning: false

library(ggplot2); library(ggokabeito)
spd2 <- read.csv(here::here("data", "_split_plot_rcbd.csv")) 

ggplot(spd2, aes(x = COLUMNS, y = ROWS, fill = TRT_COMB)) +
  geom_tile() +
  scale_x_continuous(breaks = 1:3, expand = c(0, 0)) +
  scale_y_continuous(breaks = 1:9, expand = c(0, 0)) +
  geom_text(aes(label = TRT_COMB)) +
  guides(fill = "none") + 
  ggtitle("Split Plot Design (RCBD) 9x3") +
  geom_hline(yintercept = 3.5, linewidth = 1.5) + 
  geom_hline(yintercept = 6.5, linewidth = 1.5) +
  theme_classic() +
  scale_color_okabe_ito(alpha = 0.5, aesthetics = "fill") + 
  theme(axis.line = element_blank(),
        axis.ticks = element_blank()) 

```

## Statistical Details

$$y_{ijk} = \mu + \alpha_i + \beta_j + (\alpha\beta)_{ij} + r_k + \epsilon_{ik} + \delta_{ijk}$$

Where:

$\mu$ = overall experimental mean

$\alpha$ = main effect of whole plot (fixed)

$\beta$ = main effect of split plot (fixed)

$\alpha\beta$ = interaction between factors A and B

$r$ = block effect (random)

$\epsilon_{ij}$ = whole plot error

$\delta_{ijk}$ = split plot error

Both the overall error and the rep effects are assumed to be normally distributed with a mean of zero and standard deviations of $\sigma$ (whole-plot) and $\sigma_{sp}$ (split-plot), respectively.

$$ \epsilon \sim N(0, \sigma)$$

$$\ \delta  \sim N(0, \sigma_{sp})$$

## Analysis Examples

Let's start analyzing by loading required libraries.

::: panel-tabset
### lme4

```{r, message=FALSE, warning=FALSE}
library(lme4); library(lmerTest); library(emmeans)
library(dplyr); library(performance); library(ggplot2)
library(broom.mixed)
```

### nlme

```{r, message=FALSE, warning=FALSE}
library(nlme); library(performance); library(emmeans)
library(dplyr); library(ggplot2); library(broom.mixed)
```
:::

### Example Model for RCBD Split Plot Designs

The oats data used in this example is from the **MASS** package. The design is RCBD split plot with 6 blocks, 3 levels for the main plots and 4 levels for the split plot. The primary outcome variable is yield.

|              |                          |
|--------------|--------------------------|
| block        | blocking unit            |
| Variety (V)  | Main plot with 3 levels  |
| Nitrogen (N) | Split-plot with 4 levels |
| yield (Y)    | yield (lbs per acre)     |

: Table of variables in the oat data set {tbl-rcbd_split-plot}

The objective of this analysis is to study the impact of different varieties and nitrogen application rates on oat yields.

To fully examine the response of oat yield with different varieties and nutrient levels in a split plots, we will need to statistically analyse and compare the effects of varieties (main plot), nutrient levels (split plot), their interaction.

Let's start this example analysis by first loading the 'oat' data from the **MASS** package.

```{r, message=FALSE}
data("oats", package = "MASS")
head(oats,5)
```

#### Data integrity checks

-   Check structure of the data

We will first examine the structure of the data. The "B", "V", and "N" needs to be a factor and "Y" should be numeric.

```{r}
str(oats)
```

-   Inspect the independent variables

Next, run the `table()` command to verify the levels of the main plot and the split plot.

```{r}
table(oats$V, oats$N)
```

-   Check the extent of missing data

```{r}
colSums(is.na(oats))
```

-   Inspect the dependent variable

Last, check the distribution of the dependent variable by plotting a histogram.

```{r, echo=FALSE}
#| label: fig-split-rcbd_hist
#| fig-cap: "Histogram of the dependent variable."
#| column: margin
par(mar=c(5.1, 5, 2.1, 2.1))
hist(oats$Y, main = NA, xlab = "yield", cex.lab = cex_lab, cex.axis = cex_axis, col = base_plot_color)
```

```{r, eval=FALSE}
hist(oats$Y, main = NA, xlab = "yield")
```

#### Model Building

We are evaluating the effect of V, N and their interaction on yield. The `1|B/V` means that random intercepts vary with block and V nested within each block.

::: column-margin
Recall the model:

$$y_{ijk} = \mu + \rho_j +  \alpha_i + \beta_k + (\alpha_i\beta_k) + \epsilon_{ij} + \delta_{ijk}$$ Where:

$\mu$ = overall experimental mean, $\rho$ = block effect (random), $\alpha$ = main effect of whole plot (fixed), $\beta$ = main effect of split plot (fixed), $\alpha$$\beta$ = interaction between factors A and B, $\epsilon_{ij}$ = whole plot error, $\delta_{ijk}$ = split plot error.
:::

::: panel-tabset
### lme4

```{r}
oats_lmer <- lmer(Y ~  V + N + V:N + (1|B/V),
                  data = oats, 
                  na.action = na.exclude)
tidy(oats_lmer)
```

### nlme

```{r}
oats_lme <- lme(Y ~  V + N + V:N,
                random = ~1|B/V,
                data = oats,
                na.action = na.exclude)
tidy(oats_lme)
```
:::

#### Check Model Assumptions

After fitting the model, we need to verify the normality of residuals and homogeneous variance. Here we are using the `check_model()` function from the **performance** package.

::: panel-tabset
### lme4

```{r, fig.height=6, fig.width=8}
check_model(oats_lmer, check = c('qq', 'linearity', 'reqq'), detrend=FALSE, alpha =0)
```

### nlme

```{r, fig.height=4, fig.width=7}
check_model(oats_lme,  check = c('qq', 'linearity'), detrend=FALSE, alpha=0)
```
:::

Residuals from the model follows normal distribution and no evidence of homoscedasticity.

#### Inference

After verifying the assumptions of the model, look at the analysis of variance, for V, N and their interaction effect.

::: panel-tabset
### lme4

```{r}
anova(oats_lmer, type = "III") 
car::Anova(oats_lmer, type = "3", test.statistics = "F")
```

### nlme

```{r}
anova(oats_lme, type = "marginal")
```
:::

Next, we can estimate marginal means for V, N, or their interaction (V\*N) effect.

::: panel-tabset
### lme4

```{r}
emm1 <- emmeans(oats_lmer, ~ V|N) 
emm1
```

### nlme

```{r}
emm1 <- emmeans(oats_lme, ~ V|N) 
emm1
```
:::

The estimated means for the variety 'Marvellous' were higher compared to other varieties across all N treatments.
