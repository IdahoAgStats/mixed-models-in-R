---
title: "lattice_design"
---

# Background

Yates (1936) proposed this method of arranging agricultural variety trials involving a large number of crop varieties. These types of arrangements were named a quasi-factorial or lattice designs. His paper contained numerical examples based on the results of a uniformity trial on orange trees. A special feature of lattice designs is that the number of treatments, t, is related to the block size, k, in one of three forms: t = k\^2, t = k3, or t = k(k +1).

Even though the number of possible treatments is limited, a lattice design may be an ideal design for field experiments with a large number of treatments.

https://kwstat.github.io/agridat/reference/cochran.lattice.html


Statistical model for lattice design:

$Yijk = \mu + \alpha_i + \gamma_j + \tau_t  + \beta_k + \epsilon_ijk$

where, $\mu$ is the experiment mean, ùõΩ is the row effect, ùõæ is the column effect, and ùúè is the treatment effect.

## Example Analysis

First, load the libraries for analysis and estimation:

::: panel-tabset
### lme4
```{r, message=FALSE, warning=FALSE}
library(lme4); library(lmerTest); library(emmeans); library(performance)
library(dplyr); library(broom.mixed); library(agridat); library(desplot)
```
### nlme
```{r, message=FALSE, warning=FALSE, eval=FALSE}
library(nlme); library(broom.mixed); library(emmeans); library(performance)
library(dplyr); library(agridat); library(desplot)
```
:::

Import data from agridat package and create columns for row and column as factor variables. This is a balanced experiment design

```{r}

data(burgueno.rowcol)
dat <- burgueno.rowcol

```

```{r}
# Two contiguous reps in 8 rows, 16 columns

desplot(dat, yield ~ col*row,
        out1=rep, # aspect unknown
        text=gen, shorten="none", cex=.75,
        main="burgueno.rowcol")

```

```{r}
#Random rep, row and col within rep
 m1 <- lmer(yield ~ gen + (1|rep) + (1|rep:row) + (1|rep:col), data=dat)
summary(m1) 
anova(m1)

```

```{r}
check_model(m1)
```

ANOVA

```{r}
anova(m1)
```

Estimated marginal means

```{r}
emmeans(m1, ~ gen)
```
