{
  "hash": "72751eaf90489aa11f38a6310e6f9ac1",
  "result": {
    "engine": "knitr",
    "markdown": "# Split Plot Design\n\n\n\n\n\n\n\n\n\n\nIn some multifactor factorial experiments, we may be unable to completely randomize the\norder of the treatments. This often results in a generalization of the factorial design called a\nsplit-plot design. Such design may incorporate one or more of the completely randomized (CRD), completely randomized block (RCBD). The main principle is that there are whole plots or whole units, to which the levels of one or more factors are applied. Thus each whole plot becomes a block for the subplot treatments.\n\n## Details for Split Plot Designs\n\n1.  Whole Plot Randomized as a completely randomized design\n\nThe statistical model structure this design:\n\n$$y_{ijk} = \\mu + \\alpha_i + \\beta_j + (\\alpha_i\\beta_j) + \\epsilon_{ij} + \\delta_{ijk} $$ Where:\n\n$\\mu$= overall experimental mean, $\\alpha$ = main effect of whole plot (fixed), $\\beta$ = main effect of subplot (fixed), $\\alpha$$\\beta$ = interaction between factors A and B, $\\epsilon_{ij}$ = whole plot error, $\\delta_{ijk}$ = subplot error.\n\n$$ \\epsilon \\sim N(0, \\sigma_\\epsilon)$$\n\n$$\\ \\delta  \\sim N(0, \\sigma_\\delta)$$\n\nBoth the error and replication effects are assumed to be normally distributed with a mean of zero and standard deviations of $\\sigma_\\epsilon$ and $\\sigma_\\delta$, respectively.\n\n2.  Whole Plot Randomized as an RCBD\n\nThis is also referred as \"Split-Block RCB\" design. The statistical model structure for split plot design:\n\n$$y_{ijk} = \\mu + \\rho_i +  \\alpha_j + \\beta_k + (\\alpha_j\\beta_k) + \\epsilon_{ij} + \\delta_{ijk}$$ Where:\n\n$\\mu$ = overall experimental mean, $\\rho$ = block effect (random), $\\alpha$ = main effect of whole plot (fixed), $\\beta$ = main effect of subplot (fixed), $\\alpha$$\\beta$ = interaction between factors A and B, $\\epsilon_{ij}$ = whole plot error, $\\delta_{ijk}$ = subplot error.\n\n$$ \\epsilon \\sim N(0, \\sigma_\\epsilon)$$\n\n$$\\ \\delta  \\sim N(0, \\sigma_\\delta)$$\n\nBoth the overall error and the rep effects are assumed to be normally distributed with a mean of zero and standard deviations of $\\sigma$ and $\\sigma_\\delta$, respectively.\n\n::: callout-note\n#### 'iid' assumption for error terms\n\nIn these model, the error terms, $\\epsilon$ are assumed to be \"iid\", that is, independently and identically distributed. This means they have constant variance and they each individual error term is independent from the others.\n:::\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](split-plot-design_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n![](split-plot-design_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n\n## Analysis Examples\n\nLet's start analyzing by loading required libraries.\n\n::: panel-tabset\n### lme4\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(performance); library(ggplot2)\nlibrary(broom.mixed)\n```\n:::\n\n\n\n### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nlme); library(performance); library(emmeans)\nlibrary(dplyr); library(ggplot2); library(broom.mixed)\n```\n:::\n\n\n\n:::\n\n### Example model for CRD Split Plot Designs\n\nLet's import height data. It is located [here](https://raw.githubusercontent.com/IdahoAgStats/mixed-models-in-R/main/data/aberdeen2015.csv) if you want to download it yourself (recommended).\n\nThe data (Height data) for this example involves a CRD split plot designed experiment. Treatments are 4 Timings (times) and 8 managements (manage). The whole plots are time and management represents subplot and 3 replications.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nheight_data <- readxl::read_excel(here::here(\"data\", \"height_data.xlsx\"))\n```\n:::\n\n\n\n\n|        |                                 |\n|--------|---------------------------------|\n| rep    | replication unit                |\n| time   | Main plot with 4 levels         |\n| Manage | Split-plot with 8 levels        |\n| sample | two sampling units per each rep |\n| height | yield (lbs per acre)            |\n\n: Table of variables in the oat data set {tbl-rcbd_split-plot}\n\n#### Data integrity checks\n\n-   Run a cross tabulation using `table()` to check the arrangement of whole-plots and sub-plots.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(height_data$time, height_data$manage)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    \n     M1 M2 M3 M4 M5 M6 M7 M8\n  T1  6  6  6  6  6  6  6  6\n  T2  6  6  6  6  6  6  6  6\n  T3  6  6  6  6  6  6  6  6\n  T4  6  6  6  6  6  6  6  6\n```\n\n\n:::\n:::\n\n\n\n\nThe levels of whole plots and subplots are balanced.\n\n-   Look at structure of the data using `str()`, this will help in identifying class of the variable. In this data set, class of the whole-plot, sub-plot, and block should be factor/character and response variable (height) should be numeric.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(height_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [192 × 5] (S3: tbl_df/tbl/data.frame)\n $ time  : chr [1:192] \"T1\" \"T1\" \"T1\" \"T1\" ...\n $ manage: chr [1:192] \"M1\" \"M2\" \"M3\" \"M4\" ...\n $ rep   : chr [1:192] \"R1\" \"R1\" \"R1\" \"R1\" ...\n $ sample: chr [1:192] \"S1\" \"S1\" \"S1\" \"S1\" ...\n $ height: num [1:192] 104.5 92.3 96.8 94.7 105.7 ...\n```\n\n\n:::\n:::\n\n\n\n\nThe 'time', 'manage', and 'rep' are character and variable height is numeric. The structure of the data is in format as needed. \n\n-   Check the number of missing values in each column.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(height_data, 2, function(x) sum(is.na(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  time manage    rep sample height \n     0      0      0      0      0 \n```\n\n\n:::\n:::\n\n\n\n\n-   Exploratory boxplot to look at the height observations at different times with variable managements. This helps in identifying any patterns in the dependent vraiable in response to differnt treatments.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = height_data, aes(y = height, x = time)) +\n  geom_boxplot(aes(fill = manage), alpha = 0.6)\n```\n\n::: {.cell-output-display}\n![](split-plot-design_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\nHere we observed any greater height with manage 'M1\" and comparatively less variability across all times compared to other management treatments.\n\nLast, check the dependent variable by plotting a histogram of height data. \n\n\n\n::: {.cell .column-margin}\n::: {.cell-output-display}\n![Histogram of the dependent variable.](split-plot-design_files/figure-html/fig-split_hist-1.png){#fig-split_hist width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(height_data$height, main = \"\", xlab = \"yield\")\n```\n:::\n\n\n\n\nThe distribution of height data looks close to normal.\n\n#### Model building\n\n::: column-margin\nRecall the model:\n\n$$y_{ijk} = \\mu + \\gamma_i +  \\alpha_j + \\beta_k + (\\alpha_j\\beta_k) + \\epsilon_{ijk}$$\n\nFor this model, $\\gamma$ = block/rep effect (random), $\\alpha$ = main effect of whole plot (fixed), $\\beta$ = main effect of subplot (fixed), $\\alpha$$\\beta$ = interaction between factors A and B (fixed).\n:::\n\nIn order to test the main effects of the treatments as well as the interaction between two factors, we can specify that in model as: `time + manage + time:manage` or `time*manage`.\n\nWhen dealing with split plot design across reps or blocks, the random effects needs to be nested hierarchically, from largest unit to smallest. For example, in this example the random effects will be designated as `(1 | rep/time)`. This implies that we use random intercept at each of the rep and time (whole-plot) level. \n\n::: panel-tabset\n#### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_lmer <- lmer(height ~ time*manage + (1|rep/time), data = height_data)\ntidy(model_lmer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 35 × 8\n   effect group term        estimate std.error statistic     df    p.value\n   <chr>  <chr> <chr>          <dbl>     <dbl>     <dbl>  <dbl>      <dbl>\n 1 fixed  <NA>  (Intercept)   108.        3.19    33.9     4.38 0.00000181\n 2 fixed  <NA>  timeT2          3.18      2.63     1.21  104.   0.229     \n 3 fixed  <NA>  timeT3         -2.25      2.63    -0.855 104.   0.394     \n 4 fixed  <NA>  timeT4          1.28      2.63     0.488 104.   0.627     \n 5 fixed  <NA>  manageM2       -4.45      2.55    -1.74  152.   0.0832    \n 6 fixed  <NA>  manageM3       -5.30      2.55    -2.08  152.   0.0395    \n 7 fixed  <NA>  manageM4       -6.18      2.55    -2.42  152.   0.0166    \n 8 fixed  <NA>  manageM5       -5.02      2.55    -1.97  152.   0.0511    \n 9 fixed  <NA>  manageM6       -3.42      2.55    -1.34  152.   0.183     \n10 fixed  <NA>  manageM7       -9.75      2.55    -3.82  152.   0.000193  \n# ℹ 25 more rows\n```\n\n\n:::\n:::\n\n\n\n\n#### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_lme <-lme(height ~ time*manage,\n             random = ~ 1|rep/time, data = height_data)\n\ntidy(model_lme)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in tidy.lme(model_lme): ran_pars not yet implemented for multiple\nlevels of nesting\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 32 × 7\n   effect term        estimate std.error    df statistic  p.value\n   <chr>  <chr>          <dbl>     <dbl> <dbl>     <dbl>    <dbl>\n 1 fixed  (Intercept)   108.        3.19   152    33.9   9.59e-73\n 2 fixed  timeT2          3.18      2.63     6     1.21  2.72e- 1\n 3 fixed  timeT3         -2.25      2.63     6    -0.855 4.25e- 1\n 4 fixed  timeT4          1.28      2.63     6     0.488 6.43e- 1\n 5 fixed  manageM2       -4.45      2.55   152    -1.74  8.32e- 2\n 6 fixed  manageM3       -5.30      2.55   152    -2.08  3.95e- 2\n 7 fixed  manageM4       -6.18      2.55   152    -2.42  1.66e- 2\n 8 fixed  manageM5       -5.02      2.55   152    -1.97  5.11e- 2\n 9 fixed  manageM6       -3.42      2.55   152    -1.34  1.83e- 1\n10 fixed  manageM7       -9.75      2.55   152    -3.82  1.93e- 4\n# ℹ 22 more rows\n```\n\n\n:::\n:::\n\n\n\n:::\n\n#### Check Model Assumptions\n\nBefore interpreting the model we should investigate the assumptions of the model to ensure any conclusions we draw are valid. The assumptions that we can check are: 1. Homogeneity (equal variance) 2. normality of residuals 3. values with high leverage.\n\nWe will use `check_model()` function from 'performance' package. The plots generated using this code gives a visual check of various assumptions including normality of residuals, normality of random effects, heteroscedasticity, homogeneity of variance, and multicollinearity.\n\n::: panel-tabset\n#### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model_lmer, check = c('normality', 'linearity'))\n```\n\n::: {.cell-output-display}\n![](split-plot-design_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n\n#### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model_lme, check = c('normality', 'linearity'))\n```\n\n::: {.cell-output-display}\n![](split-plot-design_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\nIn this case the residuals fit the assumptions of the model well.\n\n#### Inference\n\nThe `anova()` function prints the the rows of analysis of variance table for whole-plot, sub-plot, and their interactions. We observed a significant effect of manage factor only.\n\n::: panel-tabset\n#### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::Anova(model_lmer, type = 'III', test.statistics = \"F\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: height\n                Chisq Df Pr(>Chisq)    \n(Intercept) 1148.5658  1    < 2e-16 ***\ntime           4.5139  3    0.21105    \nmanage        15.9090  7    0.02596 *  \ntime:manage   24.3349 21    0.27711    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n#### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(model_lme, type = \"marginal\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            numDF denDF   F-value p-value\n(Intercept)     1   152 1148.6202  <.0001\ntime            3     6    1.5046  0.3061\nmanage          7   152    2.2727  0.0315\ntime:manage    21   152    1.1588  0.2955\n```\n\n\n:::\n:::\n\n\n\n:::\n\nWe can further compute estimated marginal means for each fixed effect and interaction effect using `emmeans()` from the emmeans package.\n\n::: panel-tabset\n#### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm1 <- emmeans(model_lmer, ~ time)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNOTE: Results may be misleading due to involvement in interactions\n```\n\n\n:::\n\n```{.r .cell-code}\nm1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n time emmean  SE   df lower.CL upper.CL\n T1      103 2.7 2.27     92.8      114\n T2      106 2.7 2.27     95.5      116\n T3      100 2.7 2.27     89.8      111\n T4      104 2.7 2.27     94.0      115\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n```\n\n\n:::\n:::\n\n\n\n\n#### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nm2 <- emmeans(model_lme, ~ time)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNOTE: Results may be misleading due to involvement in interactions\n```\n\n\n:::\n\n```{.r .cell-code}\nm2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n time emmean  SE df lower.CL upper.CL\n T1      103 2.7  2     91.6      115\n T2      106 2.7  2     94.2      118\n T3      100 2.7  2     88.6      112\n T4      104 2.7  2     92.8      116\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n```\n\n\n:::\n:::\n\n\n\n:::\n\nFurther, a pairwise comparison or contrasts can be made using estimated means. In this model, 'time' factor has 4 levels. We can use `pairs()` function to evaluate pairwise comparison among different 'time' levels.\n\nHere's a example using `pairs()` function to compare difference in height among different time points.\n\n::: panel-tabset\n#### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(m1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n contrast estimate   SE df t.ratio p.value\n T1 - T2     -2.68 1.11  6  -2.426  0.1719\n T1 - T3      2.95 1.11  6   2.665  0.1287\n T1 - T4     -1.21 1.11  6  -1.091  0.7072\n T2 - T3      5.63 1.11  6   5.091  0.0089\n T2 - T4      1.48 1.11  6   1.334  0.5767\n T3 - T4     -4.15 1.11  6  -3.756  0.0358\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: kenward-roger \nP value adjustment: tukey method for comparing a family of 4 estimates \n```\n\n\n:::\n:::\n\n\n\n\n#### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npairs(m2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n contrast estimate   SE df t.ratio p.value\n T1 - T2     -2.68 1.11  6  -2.426  0.1719\n T1 - T3      2.95 1.11  6   2.665  0.1287\n T1 - T4     -1.21 1.11  6  -1.091  0.7072\n T2 - T3      5.63 1.11  6   5.091  0.0089\n T2 - T4      1.48 1.11  6   1.334  0.5767\n T3 - T4     -4.15 1.11  6  -3.756  0.0358\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: containment \nP value adjustment: tukey method for comparing a family of 4 estimates \n```\n\n\n:::\n:::\n\n\n\n:::\n\n::: callout-note\n## `pairs()`\n\nThe default p-value adjustment in `pairs()` function is \"tukey\", other options include “holm”, “hochberg”, “BH”, “BY”, and “none”. In addition, it's okay to use this function when independent variable has few factors (2-4). For variable with multiple levels, it's better to use custom contrasts. For more information on custom contrasts please visit [**Chapter 12**](means-and-contrasts.qmd). \n:::\n\n### Example model for RCBD Split Plot Designs\n\nRecall, at the beginning of this chapter we discussed CRD and RCBD split plot design. \nNow we will demonstrate how to analyze data from the RCBD split plot experiment design. \nThe oats data used in this example is from the **MASS** package. The design is RCBD split plot with 6 blocks, 3 main plots and 4 subplots. The primary outcome variable was oat yield.\n\n|              |                          |\n|--------------|--------------------------|\n| block        | blocking unit            |\n| Variety (V)  | Main plot with 3 levels  |\n| Nitrogen (N) | Split-plot with 4 levels |\n| yield (Y)    | yield (lbs per acre)     |\n\n: Table of variables in the oat data set {tbl-rcbd_split-plot}\n\nThe objective of this analysis is to study the impact of different varieties and nitrogen application rates on oat yields.\n\nTo fully examine the response of oat yield with different varieties and nutrient levels in a split plots, we will need to statistically analyse and compare the effects of varieties (main plot), nutrient levels (subplot), their interaction.\n\nLet's start this example analysis by firstly loading the 'oat' data from the MASS package. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(MASS)\ndata(\"oats\")\nhead(oats,5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  B           V      N   Y\n1 I     Victory 0.0cwt 111\n2 I     Victory 0.2cwt 130\n3 I     Victory 0.4cwt 157\n4 I     Victory 0.6cwt 174\n5 I Golden.rain 0.0cwt 117\n```\n\n\n:::\n:::\n\n\n\n\n#### Data integrity checks\n\nAs shown in previous example, we will first examine the structure of the data. The \"B\", \"V\", and \"N\" needs to be a  factor and \"Y\" should be numeric.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(oats)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t72 obs. of  4 variables:\n $ B: Factor w/ 6 levels \"I\",\"II\",\"III\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ V: Factor w/ 3 levels \"Golden.rain\",..: 3 3 3 3 1 1 1 1 2 2 ...\n $ N: Factor w/ 4 levels \"0.0cwt\",\"0.2cwt\",..: 1 2 3 4 1 2 3 4 1 2 ...\n $ Y: int  111 130 157 174 117 114 161 141 105 140 ...\n```\n\n\n:::\n:::\n\n\n\n\n-   Next, run the `table()` command to verify the levels of main-plots and sub-plots.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(oats$V, oats$N)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             \n              0.0cwt 0.2cwt 0.4cwt 0.6cwt\n  Golden.rain      6      6      6      6\n  Marvellous       6      6      6      6\n  Victory          6      6      6      6\n```\n\n\n:::\n:::\n\n\n\n\n-   Check the number of missing values in each column.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(oats, 2, function(x) sum(is.na(x)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nB V N Y \n0 0 0 0 \n```\n\n\n:::\n:::\n\n\n\n\n-   Last, check the distribution of the dependent variable by plotting a histogram of yield data. \n\n\n\n::: {.cell .column-margin}\n::: {.cell-output-display}\n![Histogram of the dependent variable.](split-plot-design_files/figure-html/fig-split-rcbd_hist-1.png){#fig-split-rcbd_hist width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhist(oats$Y, main = \"\", xlab = \"yield\")\n```\n:::\n\n\n\n\n#### Model Building the Model\n\nWe are evaluating the effect of V, N and their interaction on yield. The `1|B/V` implies that random intercepts vary with block and V within each block.\n\n::: column-margin\nRecall the model:\n\n$$y_{ijk} = \\mu + \\rho_j +  \\alpha_i + \\beta_k + (\\alpha_i\\beta_k) + \\epsilon_{ij} + \\delta_{ijk}$$ Where:\n\n$\\mu$ = overall experimental mean, $\\rho$ = block effect (random), $\\alpha$ = main effect of whole plot (fixed), $\\beta$ = main effect of subplot (fixed), $\\alpha$$\\beta$ = interaction between factors A and B, $\\epsilon_{ij}$ = whole plot error, $\\delta_{ijk}$ = subplot error.\n:::\n\n::: panel-tabset\n### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel2_lmer <- lmer(Y ~  V + N + V:N + (1|B/V), \n                   data = oats, \n                   na.action = na.exclude)\ntidy(model2_lmer)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 15 × 8\n   effect   group    term            estimate std.error statistic    df  p.value\n   <chr>    <chr>    <chr>              <dbl>     <dbl>     <dbl> <dbl>    <dbl>\n 1 fixed    <NA>     (Intercept)       80.0        9.11    8.78    16.1  1.55e-7\n 2 fixed    <NA>     VMarvellous        6.67       9.72    0.686   30.2  4.98e-1\n 3 fixed    <NA>     VVictory          -8.50       9.72   -0.875   30.2  3.89e-1\n 4 fixed    <NA>     N0.2cwt           18.5        7.68    2.41    45.0  2.02e-2\n 5 fixed    <NA>     N0.4cwt           34.7        7.68    4.51    45.0  4.58e-5\n 6 fixed    <NA>     N0.6cwt           44.8        7.68    5.84    45.0  5.48e-7\n 7 fixed    <NA>     VMarvellous:N0…    3.33      10.9     0.307   45.0  7.60e-1\n 8 fixed    <NA>     VVictory:N0.2c…   -0.333     10.9    -0.0307  45.0  9.76e-1\n 9 fixed    <NA>     VMarvellous:N0…   -4.17      10.9    -0.383   45.0  7.03e-1\n10 fixed    <NA>     VVictory:N0.4c…    4.67      10.9     0.430   45.0  6.70e-1\n11 fixed    <NA>     VMarvellous:N0…   -4.67      10.9    -0.430   45.0  6.70e-1\n12 fixed    <NA>     VVictory:N0.6c…    2.17      10.9     0.199   45.0  8.43e-1\n13 ran_pars V:B      sd__(Intercept)   10.3       NA      NA       NA   NA      \n14 ran_pars B        sd__(Intercept)   14.6       NA      NA       NA   NA      \n15 ran_pars Residual sd__Observation   13.3       NA      NA       NA   NA      \n```\n\n\n:::\n:::\n\n\n\n\n### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel2_lme <- lme(Y ~  V + N + V:N ,\n                  random = ~1|B/V,\n                  data = oats, \n                  na.action = na.exclude)\ntidy(model2_lme)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in tidy.lme(model2_lme): ran_pars not yet implemented for multiple\nlevels of nesting\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 12 × 7\n   effect term                estimate std.error    df statistic  p.value\n   <chr>  <chr>                  <dbl>     <dbl> <dbl>     <dbl>    <dbl>\n 1 fixed  (Intercept)           80          9.11    45    8.78   2.56e-11\n 2 fixed  VMarvellous            6.67       9.72    10    0.686  5.08e- 1\n 3 fixed  VVictory              -8.50       9.72    10   -0.875  4.02e- 1\n 4 fixed  N0.2cwt               18.5        7.68    45    2.41   2.02e- 2\n 5 fixed  N0.4cwt               34.7        7.68    45    4.51   4.58e- 5\n 6 fixed  N0.6cwt               44.8        7.68    45    5.84   5.48e- 7\n 7 fixed  VMarvellous:N0.2cwt    3.33      10.9     45    0.307  7.60e- 1\n 8 fixed  VVictory:N0.2cwt      -0.333     10.9     45   -0.0307 9.76e- 1\n 9 fixed  VMarvellous:N0.4cwt   -4.17      10.9     45   -0.383  7.03e- 1\n10 fixed  VVictory:N0.4cwt       4.67      10.9     45    0.430  6.70e- 1\n11 fixed  VMarvellous:N0.6cwt   -4.67      10.9     45   -0.430  6.70e- 1\n12 fixed  VVictory:N0.6cwt       2.17      10.9     45    0.199  8.43e- 1\n```\n\n\n:::\n:::\n\n\n\n:::\n\n#### Check Model Assumptions\n\nAs shown in example 1, We need to verify the normality of residuals and homogeneous variance. Here we are using the `check_model()` function from the performance package.\n\n::: panel-tabset\n### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model2_lmer, check = c('normality', 'linearity'))\n```\n\n::: {.cell-output-display}\n![](split-plot-design_files/figure-html/unnamed-chunk-31-1.png){width=672}\n:::\n:::\n\n\n\n\n### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncheck_model(model2_lme, check = c('normality', 'linearity'))\n```\n\n::: {.cell-output-display}\n![](split-plot-design_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n\n:::\n\n#### Inference\n\nWe can evaluate the model for the analysis of variance, for V, N and their interaction effect.\n\n::: panel-tabset\n### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncar::Anova(model2_lmer, type = \"III\", test.statistics = \"F\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: Y\n              Chisq Df Pr(>Chisq)    \n(Intercept) 77.1664  1  < 2.2e-16 ***\nV            2.4491  2     0.2939    \nN           39.0683  3  1.679e-08 ***\nV:N          1.8169  6     0.9357    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanova(model2_lme, type = \"marginal\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            numDF denDF  F-value p-value\n(Intercept)     1    45 77.16729  <.0001\nV               2    10  1.22454  0.3344\nN               3    45 13.02273  <.0001\nV:N             6    45  0.30282  0.9322\n```\n\n\n:::\n:::\n\n\n\n:::\n\nNext, we can estimate marginal means for V, N, or their interaction (V\\*N) effect.\n\n::: panel-tabset\n### lme4\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemm1 <- emmeans(model2_lmer, ~ V *N) \nemm1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n V           N      emmean   SE   df lower.CL upper.CL\n Golden.rain 0.0cwt   80.0 9.11 16.1     60.7     99.3\n Marvellous  0.0cwt   86.7 9.11 16.1     67.4    106.0\n Victory     0.0cwt   71.5 9.11 16.1     52.2     90.8\n Golden.rain 0.2cwt   98.5 9.11 16.1     79.2    117.8\n Marvellous  0.2cwt  108.5 9.11 16.1     89.2    127.8\n Victory     0.2cwt   89.7 9.11 16.1     70.4    109.0\n Golden.rain 0.4cwt  114.7 9.11 16.1     95.4    134.0\n Marvellous  0.4cwt  117.2 9.11 16.1     97.9    136.5\n Victory     0.4cwt  110.8 9.11 16.1     91.5    130.1\n Golden.rain 0.6cwt  124.8 9.11 16.1    105.5    144.1\n Marvellous  0.6cwt  126.8 9.11 16.1    107.5    146.1\n Victory     0.6cwt  118.5 9.11 16.1     99.2    137.8\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n```\n\n\n:::\n:::\n\n\n\n\n### nlme\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nemm1 <- emmeans(model2_lme, ~ V *N) \nemm1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n V           N      emmean   SE df lower.CL upper.CL\n Golden.rain 0.0cwt   80.0 9.11  5     56.6    103.4\n Marvellous  0.0cwt   86.7 9.11  5     63.3    110.1\n Victory     0.0cwt   71.5 9.11  5     48.1     94.9\n Golden.rain 0.2cwt   98.5 9.11  5     75.1    121.9\n Marvellous  0.2cwt  108.5 9.11  5     85.1    131.9\n Victory     0.2cwt   89.7 9.11  5     66.3    113.1\n Golden.rain 0.4cwt  114.7 9.11  5     91.3    138.1\n Marvellous  0.4cwt  117.2 9.11  5     93.8    140.6\n Victory     0.4cwt  110.8 9.11  5     87.4    134.2\n Golden.rain 0.6cwt  124.8 9.11  5    101.4    148.2\n Marvellous  0.6cwt  126.8 9.11  5    103.4    150.2\n Victory     0.6cwt  118.5 9.11  5     95.1    141.9\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n```\n\n\n:::\n:::\n\n\n\n:::\n\nThe estimated means for Marvellous variety were higher compared to varieties across all N treatments.\n\nIn the next chapter, we will continue with extension of split plot design called split-split plot design.",
    "supporting": [
      "split-plot-design_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}