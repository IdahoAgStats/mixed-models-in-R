---
title: Marginal Means & Contrasts
---

## Background

To start off with, we need to define estimated marginal means. Estimated marginal means are defined as the marginal means of a variable across all levels of other variables in a model, essentially giving a "population-level" average.

The **emmeans** package is one of the most commonly used package in R for determining marginal means. This package provides methods for obtaining marginal means (also known as **least-squares means**). The emmeans package is one of several alternatives that facilitate the application post-hoc methods and contrast analysis. It is a relatively recent replacement for the lsmeans package with which some R users may be familiar. It is intended for use with a wide variety of ANOVA models, including repeated measures and nested designs (mixed models). This is a flexible package that comes with a set of detailed [**vignettes**](https://cran.r-project.org/web/packages/emmeans/vignettes/AQuickStart.html){.external target="_blank"} and works with a wide range of model objects. 

In this chapter, we will demonstrate the extended use of the **emmeans** package to calculate estimated marginal means and contrasts.

To demonstrate the use of the **emmeans** package. We will pull the model from split plot lesson ([**Chapter 7**](split-plot-design.qmd)), where we evaluated the effect of Nitrogen and Variety on Oat yield. This data contains 6 blocks, 3 main plots (Variety) and 4 subplots (Nitrogen). The primary outcome variable was oat yield.
To read more about the experiment layout details please read RCBD split-plot section in [**Chapter 7**](split-plot-design.qmd).


::: callout-note
#### Marginal means using lmer and nlme

For demonstration of the `emmeans` package, we are fitting model with `nlme` package. Please note that code below calculating marginal means works for both `lmer()` and `nlme()` models.
:::

## Analysis Examples
Let's start this example by loading the required libraries for fitting linear mixed models using **nlme** package.

```{r, warning=FALSE, message=FALSE}
library(nlme); library(performance); library(emmeans)
library(dplyr); library(broom.mixed); library(multcompView)
library(multcomp); library(ggplot2)
```

### Import data

Let's import oats data from the MASS package.

```{r}
data1 <- MASS::oats
```

::: column-margin
To read more about data and model fitting explanation please refer to [**Chapter 7**](split-plot-design.qmd).
:::

### Model fitting
```{r}
model1 <- lme(Y ~  V + N + V:N ,
                  random = ~1|B/V,
                  data = data1, 
                  na.action = na.exclude)
tidy(model1)
```

### Check Model Assumptions
```{r,  fig.height=3}
check_model(model1, check = c('qq', 'linearity'), detrend=FALSE, alpha = 0)
```

Residuals look good with a small hump in middle and normality curve looks reasonable.

### Model Inference

```{r}
anova(model1, type = "marginal")
```
The analysis of variance showed a significant N effect and no effect of V and V x N interaction effect on oat yield.

### Estimated Marginal Means

Now that we have fitted a linear mixed model (model1) and it meets the model assumptions. Let's use the `emmeans()` function to obtain estimated marginal means for main (variety and nitrogen) and interaction (variety x nitrogen) effects. 

#### Main effects

The main effects in model1 were V and N. We will start by looking at the estimated means of the V and N main effects.
```{r, warning=FALSE}
m1 <- emmeans(model1, ~V, level = 0.95)
m1
```

```{r, warning=FALSE}
m2 <- emmeans(model1, ~N)
m2
```
Make sure to read and interpret marginal means carefully. Here, when we calculated marginal means for main effects of V and N, these were averaged over the levels of other factor in experiment. For example, estimated means for each variety were averaged over it's N treatments, respectively.

#### Interaction effects

Now let's evaluate the marginal means for the interaction effect of V and N. These can be calculated either using `V*N` or `V|N`. 
```{r}
m3 <- emmeans(model1, ~V*N)
m3
```

```{r}
m4 <- emmeans(model1, ~V|N)
m4
```
The marginal means (m3 and m4) gives the results for V x N interaction effect but the calculated differently.

:::{.callout-note}
Here, note that we estimated marginal means in two ways: 
`V*N` estimates the marginal means for each combination, and when we do pairwise comparisons on these, all combinations are compared to one another simultaneously. 

`V|N` estimates the marginal means for each V at a given level of N. When we do pairwise comparison on this, V groups are compared with each other at a given level of N, not across all levels of N. 
:::

## Contrasts using emmeans

The `pairs()` function from the emmeans package can be used to evaluate pairwise comparisons among treatment factors. The emmean object (m1, m2) will be passed through the `pairs()` function, which will provide a p-value adjustment equivalent to the Tukey test.

```{r}
pairs(m1, adjust = "tukey")
```

```{r}
pairs(m2)
```
Here, if we look at the output from code chunk above, it's relatively easy to interpret the results from `pairs()` function in case of variety comparison because there were only 3 groups. But it's a little confusing in the case of Nitrogen treatments, where we had 4 groups. We can further simplify it by using custom contrasts.

::: callout-note
## `pairs()`

This function conducts all pairwise tests for the specified variable specified. The default p-value adjustment in the `pairs()` function is "tukey"; other options include “holm”, “hochberg”, “BH”, “BY”, and “none”. If you are conducting this on a variable with many levels, this adjustment can be severe, resulting in very few statistically significant results. To avoid this, consider other tests such as 'compare to a control' or custom contrasts. 
:::

### Custom contrasts 

First, run emmean object 'm2' for nitrogen treatments.

```{r}
m2
```
Now, let's create a vector for each nitrogen treatment in the same order as presented in output from m2. 
```{r}
A1 = c(1, 0, 0, 0)
A2 = c(0, 1, 0, 0)
A3 = c(0, 0, 1, 0)
A4 = c(0, 0, 0, 1)
```
These vectors (A1, A2, A3, A4) represent each nitrogen treatment in the order as presented in the m2 emmeans object. A1, A2, A3, and A4 vectors represent 0.0 cwt, 0.2 cwt, 0.4 cwt, and 0.6 cwt nitrogen treatments, respectively. 

The next step is to create custom contrasts for comparing '0.0cwt' (A1) treatment to  '0.2cwt' (A2), '0.4cwt' (A3), and '0.6cwt' (A4) treatments. 
These contrasts can be evaluated as shown below:

```{r}
contrast(m2, method = list(A1 - A2) )
contrast(m2, method = list(A1 - A3) )
contrast(m2, method = list(A1 - A4) )

```
The output shows the difference in mean yield between the control and 3 N treatments. The results shows that yield was significantly higher with nitrogen treatments compared to the control (0.0 cwt) irrespective of the oat variety.

::: {.callout-tip title="contrast() vs pairs()"}
Using custom 'contrast()' is strongly recommended instead of `pairs()` when you are comparing multiple treatment groups (>5).
:::


In addition to these custom contrast options, we can also use the built-in functions in the **emmeans** package to compare treatments as per our analysis objective. For example, comparing treatments to control or to compare one treatment level to all other groups.

We will start with running 'm1' emmeans object.
```{r}
m1
```
From the m1 object, let's suppose we want to compare all varieties with Marvellous. The code shown below estimates custom contrast for treatments vs control and here we are referring Marvellous variety as a control.
```{r}
contrast(m1, "trt.vs.ctrl", ref = "Marvellous")
```
Alternatively, we can refer control group by the appearance order of varieties in m1. In m1, order of Golden rain, Marvellous, and Victory are ordered as 1, 2, and 3 respenctively. 

Let's suppose we want to compare Golden rain to other varieties. We can do this by either using 'trt.vs.ctrl1'  code, or 'trt.vs.ctrlk' and referring to group 1. Both code options will generate the same results.

```{r}
contrast(m1, "trt.vs.ctrl1")
contrast(m1, "trt.vs.ctrlk", ref = 1)
```
We can further customize the contrasts by excluding specific treatment groups from the comparison.

we can demonstrate this by running m2 object first. 
```{r}
m2
```
We can conduct a pairwise comparison by excluding 0.2 cwt. 

```{r}
pairs(m2, exclude = 2)
```

Or we can also evaluate consecutive pairwise comparison as follows:
```{r}
contrast(m2, "consec")
```

## Compact letter displays
Compact letter display (CLDs) is the most widely used tool by researchers in various domains to display multiple comparisons among treatment means. However, the implementation of CLDs can be problematic depending on the analysis aim and experiment design. For example, using CLD when comparing multiple treatment groups can lead to the misinterpretation of the data. Thus, it's a good practice to carefully examine study goals and your data before implementing CLDs. 

The R package `multcompView` (Graves et al., [-@multcompView]) can be used in R for creating a display where any two means associated with same symbol are not statistically different.

The `cld()` function from the **multcomp** package is used to implement CLDs in the form of symbols or letters. 

Let's start evaluating CLDs for main effects. We will use emmean objects m1 (for variety) and m2 (for nitrogen) for this analysis. In the output below, groups sharing a letter in the $.group$ are not statistically different from each other.

```{r}
cld(m1, alpha=0.05, Letters=letters)
```

```{r}
cld(m2, alpha=0.05, Letters=letters)
```
Let's have a look at the CLDs for the interaction effect:

```{r}
cld3 <- cld(m3, alpha=0.05, Letters=letters)
cld3
```
Interpretation of these letters is: we have a significant difference in grain yield with varieties victory, with N treatments of 0.0 cwt, 0.2 cwt, 0.4 cwt, and 0.6 wt. Grain yield for Golden rain variety was significantly lower with 0.0 cwt N treatment compared to the 0.2 cwt, 0.4 cwt, and 0.6 wt treatments.

In the data set we used for demonstration here, we had equal number of observations in each group. However, this might not be a case every time as it is common to have missing values in the data set. In such cases, readers usually struggle to interpret significant differences among groups. For example, the estimated means of two groups are substantially different but they are not statistically different. This happens typically when SE of one group is large due to its small sample size, so it's hard for it to be statistically different from other groups. In such cases, we can use alternatives to CLDs as shown below.

## Alternatives to CLD

1. Equivalence test 

Let's assume, based on subject matter considerations, if the mean yield of two groups differ by less than 30 it can be considered equivalent. Let's conduct an equivalence test on the CLDs of nitrogen treatment emmeans (m2).
```{r}
cld(m2, delta = 30, adjust = "none")
```

Here, two treatment groups 0.0 cwt and 0.2 cwt,  0.4 cwt and  0.6 cwt can be considered equivalent.

2. Significance Sets 

Another alternative is to reverse all the boolean flags we used in constructing CLDs for m3 first time.

```{r}
cld(m2, signif = TRUE)
```

::: {.callout-caution}
## Cautionary Note about CLD

It's important to note that we cannot conclude that treatment levels with the same letter are equivalent. We can only conclude that they are not different. 

There is a separate branch of statistics, [equivalence testing](https://en.wikipedia.org/wiki/Equivalence_test){.external target="_blank"}, that is for ascertaining if things are sufficiently similar to conclude they are equivalent. 

See @sec-cld_warning for additional warnings about problems with using compact letter display. 
:::

## Export emmeans to excel sheet
The outputs from `emmeans()` or `cld()` objects can be exported by first converting them to a data frame and then using the writexlsx() function from the 'writexl' package to export the outputs.

```{r}
result_n <- as.data.frame(summary(m1))
```

```{r, eval=FALSE}
writexl::write_xlsx(result_n)
```

## Graphical display of emmeans 

The easiest option is to use default plotting functions that accompany the **emmeans** package. 

```{r}
plot(m1)
plot(m4)
pwpp(m1) # Harpreet: do we need to keep it?
```

Eventually, you will likely want to create a customized plot of model estimates. To do this, the means will have to be manually extracted and converted to a dataframe for usage by plotting libraries. The outputs from the cld3 object (yield of variety within each nitrogen level) can be visualized in ggplot, with variety on the x-axis and estimated means of yield on the y-axis. Different N treatments are presented using different colors.

```{r, warning = FALSE}
ggplot(cld3) +
  aes(x = V, y = emmean, color = N) +
  geom_point(position = position_dodge(width = 0.9)) +
  geom_errorbar(mapping = aes(ymin = lower.CL, ymax = upper.CL), 
                              position = position_dodge(width = 1),
                width = 0.1) +
  geom_text(mapping = aes(label = .group, y = upper.CL * 1.05), 
            position = position_dodge(width = 0.8), 
            show.legend = F)+
  theme_bw()+
  theme(axis.text= element_text(color = "black",
                                size =12))
```
Recall: groups that do not differ significantly from each other share the same letter. 

We can also use the `emmip()` function from the emmeans package to examine the trend in the interaction between variety and nitrogen factors.
```{r}
emmip(model1, N ~ V)
```

::: {.callout-note}
## More details on emmeans

If you want to read more about emmeans, please refer to vignettes on this [CRAN page](https://cran.r-project.org/web/packages/emmeans/index.html){.external target="_blank"}.
:::

## Conclusion
Be cautious with the terms “significant” and “non-significant”, and don’t interpret a “non-significant” result as there is no effect. Follow good statistical practices such as getting the model right first, and using adjusted P-values for appropriately chosen families of comparisons or contrasts.

::: {.callout-note}
## P values, “significance”, and recommendations

P values are often misinterpreted, and the term “statistical significance” can be misleading. Please refer to this [link](https://www.tandfonline.com/doi/full/10.1080/00031305.2016.1154108#d1e167){.external target="_blank"} to read more about basic principles outlined by the American Statistical Association when considering p-values.
:::
