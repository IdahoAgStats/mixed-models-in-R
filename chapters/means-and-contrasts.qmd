---
title: Marginal Means & Contrasts
execute: 
  eval: false
---

## Background


Estimated marginal means are defined as marginal means of a variable across all levels of other variables in a model, essentially giving a "population-level" average.
model predictions over the grid comprising all factor combinations – called the reference grid

In this chapter, we will demonstrate the extended use of the emmeans package to calculate estimated marginal means and contrasts.


To demonstrate the use of the emmeans() package. We will pull the model from split plot lesson ([**Chapter 6**](split-plot-design.qmd)), where we evaluated the effect of Nitrogen and Variety on Oat yield. This data contains 6 blocks, 3 main plots (Variety) and 4 subplots (Nitrogen). The primary outcome variable was oat yield.
To read more about the experiment layout details please read RCBD split-plot section in [**Chapter 6**](split-plot-design.qmd).


::: callout-note
#### Marginal means using lmer and nlme

For demonstration of the `emmeans` package, we are fitting model with `nlme` package. Please note that code below calculating marginal means works for both `lmer` and `nlme` models.
:::

Let's start the analysis by loading the required libraries for fitting linear mixed models using `nlme` package.

## Analysis Examples

```{r, warning=FALSE, message=FALSE}
library(nlme); library(performance); library(emmeans)
library(dplyr); library(broom.mixed)
```


### Import data
```{r}
data1 <- MASS::oats
```


### Model fitting
```{r}
model1 <- lme(Y ~  V + N + V:N ,
                  random = ~1|B/V,
                  data = data1, 
                  na.action = na.exclude)
tidy(model1)
```



### Check Model Assumptions

```{r,  fig.height=3}
check_model(model1, check = c('normality', 'linearity'))
```

### Model Inference

```{r}
anova(model1, type = "marginal")
```

### Estimated Marginal Means

Now that we have fitted a linear mixed model (model1) and it meets the model assumption. Let's use the `emmeans()` function to obtain estimated marginal means for main (variety and nitrogen) and interaction (variety x nitrogen) effects. 

#### Main effects

```{r}
m1 <- emmeans(model1, ~V, level = 0.95)
m1

m2 <- emmeans(model1, ~N)
m2
```


#### Interaction effects

```{r}
m3 <- emmeans(model1, ~V*N)
m3


m4 <- emmeans(model1, ~V|N)
m4

```




```{r, eval=FALSE}
One-way estimated marginal means and plot

library(multcomp)
library(emmeans)

marginal = emmeans(model,
                   ~ Location)

CLD = cld(marginal,
          alpha=0.05,
          Letters=letters,
          adjust="tukey")

CLD


Location        emmean        SE df  lower.CL upper.CL .group
 Olympia      8.333333 0.6718548 16  6.449596 10.21707  a   
 Northampton 11.833333 0.6718548 16  9.949596 13.71707   b  
 Ventura     13.333333 0.6718548 16 11.449596 15.21707   b  
 Burlington  21.833333 0.6718548 16 19.949596 23.71707    c 



### Order the levels for printing

CLD$Location = factor(CLD$Location,
                       levels=c("Olympia", "Ventura", "Northampton", "Burlington"))

###  Remove spaces in .group 

CLD$.group=gsub(" ", "", CLD$.group)


### Plot

library(ggplot2)

ggplot(CLD,
       aes(x     = Location,
           y     = emmean,
           label = .group)) +

    geom_point(shape  = 15,
               size   = 4) +

    geom_errorbar(aes(ymin  =  lower.CL,
                      ymax  =  upper.CL),
                      width =  0.2,
                      size  =  0.7) +

    theme_bw() +
    theme(axis.title   = element_text(face = "bold"),
          axis.text    = element_text(face = "bold"),
          plot.caption = element_text(hjust = 0)) +

    ylab("Estimated marginal mean\nmidichlorian count") +
    ggtitle ("Midichlorian counts",

             subtitle = "In four U.S. cities") +

            labs(caption  = paste0("\nMidichlorian counts for four locations. ",
                                   "Boxes indicate the EM mean. \n",
                                   "Error bars indicate the 95% ",
                                   "confidence interval of the EM mean. \n",
                                   "Means sharing a letter are not ",
                                   "significantly different (Tukey-adjusted \n",
                                   "comparisons)."),
                            hjust=0.5) +

  geom_text(nudge_x = c(0, 0, 0, 0),
            nudge_y = c(4, 4, 4, 4),
            color   = "black")
```


### Interactions using Emmeans

```{r}

```

```{r, eval=FALSE}
Interaction plot of estimated marginal means

library(multcomp)
library(emmeans)

marginal = emmeans(model,
                   ~ Tribe:Location)

CLD = cld(marginal,
          alpha=0.05,
          Letters=letters,
          adjust="tukey")

CLD


Tribe  Location       emmean        SE df  lower.CL upper.CL .group
 Sith  Olympia      4.333333 0.9501462 16  1.354477  7.31219  a   
 Jedi  Northampton  8.666667 0.9501462 16  5.687810 11.64552  ab  
 Sith  Ventura     10.666667 0.9501462 16  7.687810 13.64552   bc 
 Jedi  Olympia     12.333333 0.9501462 16  9.354477 15.31219   bcd
 Sith  Northampton 15.000000 0.9501462 16 12.021143 17.97886    cd
 Jedi  Ventura     16.000000 0.9501462 16 13.021143 18.97886     d
 Jedi  Burlington  20.666667 0.9501462 16 17.687810 23.64552      e
 Sith  Burlington  23.000000 0.9501462 16 20.021143 25.97886      e



### Order the levels for printing

CLD$Location = factor(CLD$Location,
                       levels=c("Olympia", "Ventura", "Northampton", "Burlington"))

CLD$Tribe = factor(CLD$Tribe,
                       levels=c("Jedi", "Sith"))

###  Remove spaces in .group 

CLD$.group=gsub(" ", "", CLD$.group)


CLD


### Plot

library(ggplot2)

pd = position_dodge(0.4)    ### How much to jitter the points on the plot

ggplot(CLD,
       aes(x     = Location,
           y     = emmean,
           color = Tribe,
           label = .group)) +

    geom_point(shape  = 15,
               size   = 4,
             position = pd) +

    geom_errorbar(aes(ymin  =  lower.CL,
                      ymax  =  upper.CL),
                      width =  0.2,
                      size  =  0.7,
                      position = pd) +

    theme_bw() +
    theme(axis.title   = element_text(face = "bold"),
          axis.text    = element_text(face = "bold"),
          plot.caption = element_text(hjust = 0)) +

    ylab("Estimated marginal mean\nmidichlorian count") +
     ggtitle ("Midichlorian counts for Jedi and Sith",
            subtitle = "In four U.S. cities") +
 
            labs(caption  = paste0("\nMidichlorian counts for two tribes across ",
                                   "four locations. Boxes indicate \n",
                                   "the EM mean. ",
                                   "Error bars indicate the 95% confidence ",
                                   "interval ",
                                    "of the EM \n",
                                   "mean. Means sharing a letter are ",
                                   "not significantly different \n",
                                   "(Tukey-adjusted comparisons)."),
                            hjust=0.5) +
 
  geom_text(nudge_x = c(0.1, -0.1, 0.1, -0.1, 0.1, -0.1, -0.1, 0.1),
            nudge_y = c(4.5,  4.5, 4.5,  4.5, 4.5 , 4.5,  4.5, 4.5),
            color   = "black") +
 
  scale_color_manual(values = c("blue", "red"))


```

### Contrasts using Emmeans
```{r, eval=FALSE}
(warp.emm <- emmeans(warp.lm, ~ tension | wool))

contrast(warp.emm, "poly")
```



```{r}

```





Compact letter display
```{r}
#library(multcomp); library(multcompView)
```

```{r}
#cld(m1, Letters= letters)
```


The letters indicating significant differences can be generated using cld() function from the 'multcomp' package". In the output below, groups sharing a letter in the .group are not statistically different from each other.



## using adjusted P-values

P values, “significance”, and recommendations : https://cran.r-project.org/web/packages/emmeans/vignettes/basics.html#emms

Summary of main points
  EMMs are derived from a model. A different model for the same data may lead to different EMMs.
  EMMs are based on a reference grid consisting of all combinations of factor levels, with each covariate set to its average (by default).
  For purposes of defining the reference grid, dimensions of a multivariate response are treated as levels of a factor.
  EMMs are then predictions on this reference grid, or marginal averages thereof (equally weighted by default).
  Reference grids may be modified using at or other arguments for ref_grid()
  Reference grids and emmeans() results may be plotted via plot() (for parallel confidence intervals) or emmip() (for an interaction-style plot).
  Be cautious with the terms “significant” and “nonsignificant”, and don’t ever interpret a “nonsignificant” result as saying that there is no effect.
  Follow good statistical practices such as getting the model right first, and using adjusted P values for appropriately chosen families of comparisons or contrasts.





::: {.callout-caution}
## Cautionary Note about CLD

It's important to note that we cannot conclude that treatment levels with the same letter are the same. We can only conclude that they are not different. 

There is a separate branch of statistics, "[equivalence testing](https://en.wikipedia.org/wiki/Equivalence_test)" that is for ascertaining if things are sufficiently similar to conclude they are equivalent. 

See @sec-cld_warning for additional warnings about problems with using compact letter display. 
:::


::: {.callout-note}
## More details on emmeans

If you want to read more about emmeans, please refer to vignettes on this [CRAN page](https://cran.r-project.org/web/packages/emmeans/index.html).
:::


