---
title: Marginal Means & Contrasts
---

## Background

To start off with, we need to define estimated marginal means (EMM). Estimated marginal means are defined as marginal means of a variable across all levels of other variables in a model, essentially giving a "population-level" average.

The emmeans package is one of the most commonly used package in R in determine EMMs. This package provides methods for obtaining EMMs (also known as **least-squares means**) for factor combinations in a variety of models. The emmeans package is one of several alternatives to facilitate post hoc methods application and contrast analysis. It is a relatively recent replacement for the lsmeans package that some R users may be familiar with. It is intended for use with a wide variety of ANOVA models, including repeated measures and nested designs(mixed models). This is a flexible package that comes with a set of detailed [**vignettes**](https://cran.r-project.org/web/packages/emmeans/vignettes/AQuickStart.html) and works with a lot of different model objects. 

In this chapter, we will demonstrate the extended use of the emmeans package to calculate estimated marginal means and contrasts.

To demonstrate the use of the emmeans() package. We will pull the model from split plot lesson ([**Chapter 6**](split-plot-design.qmd)), where we evaluated the effect of Nitrogen and Variety on Oat yield. This data contains 6 blocks, 3 main plots (Variety) and 4 subplots (Nitrogen). The primary outcome variable was oat yield.
To read more about the experiment layout details please read RCBD split-plot section in [**Chapter 6**](split-plot-design.qmd).


::: callout-note
#### Marginal means using lmer and nlme

For demonstration of the `emmeans` package, we are fitting model with `nlme` package. Please note that code below calculating marginal means works for both `lmer` and `nlme` models.
:::

Let's start the analysis by loading the required libraries for fitting linear mixed models using `nlme` package.

## Analysis Examples
```{r, warning=FALSE, message=FALSE}
library(nlme); library(performance); library(emmeans)
library(dplyr); library(broom.mixed); library(multcompView)
library(multcomp)
```
### Import data
Let's import oats data from the MASS package.

::: column-margin
To read more about data and model fitting explanation please refer to [**Chapter 6**](split-plot-design.qmd).
:::
```{r}
data1 <- MASS::oats
```
### Model fitting
```{r}
model1 <- lme(Y ~  V + N + V:N ,
                  random = ~1|B/V,
                  data = data1, 
                  na.action = na.exclude)
tidy(model1)
```
### Check Model Assumptions
```{r,  fig.height=3}
check_model(model1, check = c('normality', 'linearity'))
```
### Model Inference
```{r}
anova(model1, type = "marginal")
```

### Estimated Marginal Means

Now that we have a good model, let’s use the emmeans() function to obtain EMMs.

Now that we have fitted a linear mixed model (model1) and it meets the model assumption. Let's use the `emmeans()` function to obtain estimated marginal means for main (variety and nitrogen) and interaction (variety x nitrogen) effects. 

#### Main effects
```{r, warning=FALSE}
m1 <- emmeans(model1, ~V, level = 0.95)
m1
```

```{r, warning=FALSE}
m2 <- emmeans(model1, ~N)
m2
```
Make sure to read and interpret EMMs carefully. Here, when we calculated EMMs for main effects for V and N, these were averaged over the levels of other factor in experiment. For example, estimated means for each variety were averaged over it's N treatments, respectively.

#### Interaction effects
Now let's evaluate the interaction effect EMMs for V and N. These can be calculated either using `V*N` or `V|N`. 
```{r}
m3 <- emmeans(model1, ~V*N)
m3
```

```{r}
m4 <- emmeans(model1, ~V|N)
m4
```

## Contrasts using emmeans

Firstly, the `pairs()` function from emmeans package can be used to evaluate the pairwise comparison among treatment objects. The emmean object (m1, m2) will be passed through `pairs()` function which will provide a p-value adjustment equivalent to the Tukey test.

```{r}
pairs(m1, adjust = "tukey")
```
```{r}
pairs(m2)
```
Here if we look at the results from code chunk above, it's easy to interpret results from `pairs()` function in case of varietey comparison becuase there were only 3 groups. It's bit confusing in case of Nitrogen treatments where we had 4 groups. We can further simplify it by using custom contrasts.


::: {.callout-caution}
## `pairs()`
Remember!! 
The `pairs()` function can be used to calculate pairwise comparison when treatment groups are less than equal to 3. 
:::
### Custom contrasts 

Firstly, let's run emmean object 'm2' for nitrogen treatment comparison.

```{r}
m2
```
Now, lets a create a vector for each nitrogen treatment in the same order as presented in output from m2. 
```{r}
A1 = c(1, 0, 0, 0)
A2 = c(0, 1, 0, 0)
A3 = c(0, 0, 1, 0)
A4 = c(0, 0, 0, 1)
```
These vectors (A1, A2, A3, A4) represent each Nitrogen treatment in an order as presented in m2 emmeans object. A1, A2, and A3, A4 vectors represents 0.0cwt, 0.2cwt, 0.4cwt, and 0.6cwt treatments, respectively. 

Let's create custom contrasts for comparing '0.0cwt' (A1) treatment to  '0.2cwt' (A2), '0.4cwt' (A3), and '0.6cwt' (A4) treatments. 
This can be evaluated as shown below:
Here the output shows the difference in mean yield between these two varieties
```{r}
contrast(m2, method = list(A1 - A2) )
contrast(m2, method = list(A1 - A3) )
contrast(m2, method = list(A1 - A4) )

```
::: column-margin
Using custom contrasts is strongly recommended instead of `pairs()` when you are comparing multiple treatment groups (>5).
:::


## Compact letter displays
Compact letter displays (CLDs) are a popular way to display multiple comparisons when there are more than few group means to compare. However, they are problematic as they are more prone to misinterpretation. 
The R package `multcompView` (Graves et al., 2019) provides an implementation of CLDs creating a display where any two means associated with same symbol are not statistically different.

The `cld()` function from the multcomp package is used to implement CLDs in the form of symbols or letters. The `emmeans` package provides a emmGrid objects for cld() method. 

Let's start evaluating CLDs for main effects. We will use emmean objects m1 and m2 for this. 


```{r}
cld(m1, alpha=0.05, Letters=letters)
```
```{r}
cld(m2, alpha=0.05, Letters=letters)
```

Let's have a look at the CLDs for the interaction effect:

```{r}
cld(m3, alpha=0.05, Letters=letters)
```
Interpretation of these letters is: Here we have a significant difference in grain yield with varieties "victory", with N treatments of 0.0cwt, 0.2cwt, 0.4cwt, and 0.6wt. Grain yield for Golden.rain variety was significantly lower with 0.0cwt N treatment compared to the 0.2cwt, 0.4cwt, and 0.6wt treatments.

In the data set we used for demonstration here, we had equal number of observations in each group. However, this might not be a case every time as it is common to have missing values in the data set. In such cases, readers usually struggle to interpret significant differences among groups. For example, estimated means of two groups are substantially different but they are no statistically different. This normally happens when SE of one group is large due to its small sample size, so it's hard for it to be statistically different from other groups. In such cases, we can use alternatives to CLDs as shown below.

## Alternatives to CLD

1. Equivalence test 

Let's assume based on subject matter considerations, if mean yield of two groups differ by less than 30 can be considered equivalent. 
Let's try equivalence test on clds of nitrogen treatment emmeans (m2)
```{r}
cld(m2, delta = 30, adjust = "none")
```
Here, two treatment groups '0.0cwt' and '0.2cwt',  '0.4cwt' and  '0.6cwt' can be considered equivalent.

2. Significance Sets 

Another alternative is to simply reverse all the boolean flags we used in constructing CLDs for m3 first time.


```{r}
cld(m2, signif = TRUE)
```
## Export emmeans to excel sheet

The emmean objects can be directly exported 

### start from here 
```{r}
result_n <- as.data.frame(summary(m1))
```


```{r}
library(writexl)
write_xlsx(result_n)
```


```{r}

```



```{r, eval=FALSE, echo = FALSE}
One-way estimated marginal means and plot

library(multcomp)
library(emmeans)

marginal = emmeans(model, ~ Location)

CLD = cld(marginal,
          alpha=0.05,
          Letters=letters,
          adjust="tukey")

CLD


### Order the levels for printing

CLD$Location = factor(CLD$Location,
                       levels=c("Olympia", "Ventura", "Northampton", "Burlington"))

###  Remove spaces in .group 

CLD$.group=gsub(" ", "", CLD$.group)


### Plot

library(ggplot2)

ggplot(CLD,
       aes(x     = Location,
           y     = emmean,
           label = .group)) +

    geom_point(shape  = 15,
               size   = 4) +

    geom_errorbar(aes(ymin  =  lower.CL,
                      ymax  =  upper.CL),
                      width =  0.2,
                      size  =  0.7) +

    theme_bw() +
    theme(axis.title   = element_text(face = "bold"),
          axis.text    = element_text(face = "bold"),
          plot.caption = element_text(hjust = 0)) +

    ylab("Estimated marginal mean\nmidichlorian count") +
    ggtitle ("Midichlorian counts",

             subtitle = "In four U.S. cities") +

            labs(caption  = paste0("\nMidichlorian counts for four locations. ",
                                   "Boxes indicate the EM mean. \n",
                                   "Error bars indicate the 95% ",
                                   "confidence interval of the EM mean. \n",
                                   "Means sharing a letter are not ",
                                   "significantly different (Tukey-adjusted \n",
                                   "comparisons)."),
                            hjust=0.5) +

  geom_text(nudge_x = c(0, 0, 0, 0),
            nudge_y = c(4, 4, 4, 4),
            color   = "black")
```




## creating plots with emmeans



### Interactions using Emmeans

```{r, eval=FALSE, echo=FALSE}
Interaction plot of estimated marginal means

library(multcomp)
library(emmeans)

marginal = emmeans(model,
                   ~ Tribe:Location)

CLD = cld(marginal,
          alpha=0.05,
          Letters=letters,
          adjust="tukey")

CLD


Tribe  Location       emmean        SE df  lower.CL upper.CL .group
 Sith  Olympia      4.333333 0.9501462 16  1.354477  7.31219  a   
 Jedi  Northampton  8.666667 0.9501462 16  5.687810 11.64552  ab  
 Sith  Ventura     10.666667 0.9501462 16  7.687810 13.64552   bc 
 Jedi  Olympia     12.333333 0.9501462 16  9.354477 15.31219   bcd
 Sith  Northampton 15.000000 0.9501462 16 12.021143 17.97886    cd
 Jedi  Ventura     16.000000 0.9501462 16 13.021143 18.97886     d
 Jedi  Burlington  20.666667 0.9501462 16 17.687810 23.64552      e
 Sith  Burlington  23.000000 0.9501462 16 20.021143 25.97886      e



### Order the levels for printing

CLD$Location = factor(CLD$Location,
                       levels=c("Olympia", "Ventura", "Northampton", "Burlington"))

CLD$Tribe = factor(CLD$Tribe,
                       levels=c("Jedi", "Sith"))

###  Remove spaces in .group 

CLD$.group=gsub(" ", "", CLD$.group)


CLD


### Plot

library(ggplot2)

pd = position_dodge(0.4)    ### How much to jitter the points on the plot

ggplot(CLD,
       aes(x     = Location,
           y     = emmean,
           color = Tribe,
           label = .group)) +

    geom_point(shape  = 15,
               size   = 4,
             position = pd) +

    geom_errorbar(aes(ymin  =  lower.CL,
                      ymax  =  upper.CL),
                      width =  0.2,
                      size  =  0.7,
                      position = pd) +

    theme_bw() +
    theme(axis.title   = element_text(face = "bold"),
          axis.text    = element_text(face = "bold"),
          plot.caption = element_text(hjust = 0)) +

    ylab("Estimated marginal mean\nmidichlorian count") +
     ggtitle ("Midichlorian counts for Jedi and Sith",
            subtitle = "In four U.S. cities") +
 
            labs(caption  = paste0("\nMidichlorian counts for two tribes across ",
                                   "four locations. Boxes indicate \n",
                                   "the EM mean. ",
                                   "Error bars indicate the 95% confidence ",
                                   "interval ",
                                    "of the EM \n",
                                   "mean. Means sharing a letter are ",
                                   "not significantly different \n",
                                   "(Tukey-adjusted comparisons)."),
                            hjust=0.5) +
 
  geom_text(nudge_x = c(0.1, -0.1, 0.1, -0.1, 0.1, -0.1, -0.1, 0.1),
            nudge_y = c(4.5,  4.5, 4.5,  4.5, 4.5 , 4.5,  4.5, 4.5),
            color   = "black") +
 
  scale_color_manual(values = c("blue", "red"))


```

### Contrasts using Emmeans
```{r, eval=FALSE}
(warp.emm <- emmeans(warp.lm, ~ tension | wool))

contrast(warp.emm, "poly")
```



```{r}

```





Compact letter display
```{r}
#library(multcomp); library(multcompView)
```

```{r}
#cld(m1, Letters= letters)
```


The letters indicating significant differences can be generated using cld() function from the 'multcomp' package". In the output below, groups sharing a letter in the .group are not statistically different from each other.



## using adjusted P-values

P values, “significance”, and recommendations : https://cran.r-project.org/web/packages/emmeans/vignettes/basics.html#emms


Reference grids and emmeans() results may be plotted via plot() (for parallel confidence intervals) or emmip() (for an interaction-style plot). Be cautious with the terms “significant” and “nonsignificant”, and don’t ever interpret a “nonsignificant” result as saying that there is no effect. Follow good statistical practices such as getting the model right first, and using adjusted P values for appropriately chosen families of comparisons or contrasts.


::: {.callout-caution}
## Cautionary Note about CLD

It's important to note that we cannot conclude that treatment levels with the same letter are the same. We can only conclude that they are not different. 

There is a separate branch of statistics, "[equivalence testing](https://en.wikipedia.org/wiki/Equivalence_test)" that is for ascertaining if things are sufficiently similar to conclude they are equivalent. 

See @sec-cld_warning for additional warnings about problems with using compact letter display. 
:::


::: {.callout-note}
## More details on emmeans

If you want to read more about emmeans, please refer to vignettes on this [CRAN page](https://cran.r-project.org/web/packages/emmeans/index.html).
:::


