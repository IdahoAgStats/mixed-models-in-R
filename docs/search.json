[
  {
    "objectID": "chapters/split-plot-design.html",
    "href": "chapters/split-plot-design.html",
    "title": "6  Split Plot Design",
    "section": "",
    "text": "6.1 Details for Split Plot Designs\nThe statistical model structure this design:\n\\[y_{ijk} = \\mu + \\alpha_i + \\beta_k + (\\alpha_j\\beta_k) + \\epsilon_{ij} + \\delta_{ijk} \\] Where:\n\\(\\mu\\)= overall experimental mean, \\(\\alpha\\) = main effect of whole plot (fixed), \\(\\beta\\) = main effect of subplot (fixed), \\(\\alpha\\)\\(\\tau\\) = interaction between factors A and B, \\(\\epsilon_{ij}\\) = whole plot error, \\(\\delta_{ijk}\\) = subplot error.\n\\[ \\epsilon \\sim N(0, \\sigma_\\epsilon)\\]\n\\[\\ \\delta  \\sim N(0, \\sigma_\\delta)\\]\nBoth the error and the rep effects are assumed to be normally distributed with a mean of zero and standard deviations of \\(\\sigma_\\epsilon\\) and \\(\\sigma_\\delta\\), respectively.\nThis is also referred as “Split-Block RCB” design. The statistical model structure for split plot design:\n\\[y_{ijk} = \\mu + \\rho_j +  \\alpha_i + \\beta_k + (\\alpha_i\\beta_k) + \\epsilon_{ij} + \\delta_{ijk}\\] Where:\n\\(\\mu\\) = overall experimental mean, \\(\\rho\\) = block effect (random), \\(\\alpha\\) = main effect of whole plot (fixed), \\(\\beta\\) = main effect of subplot (fixed), \\(\\alpha\\)\\(\\beta\\) = interaction between factors A and B, \\(\\epsilon_{ij}\\) = whole plot error, \\(\\delta_{ijk}\\) = subplot error.\n\\[ \\epsilon \\sim N(0, \\sigma_\\epsilon)\\]\n\\[\\ \\delta  \\sim N(0, \\sigma_\\delta)\\]\nBoth the overall error and the rep effects are assumed to be normally distributed with a mean of zero and standard deviations of \\(\\sigma\\) and \\(\\sigma_\\delta\\), respectively.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/split-plot-design.html#details-for-split-plot-designs",
    "href": "chapters/split-plot-design.html#details-for-split-plot-designs",
    "title": "6  Split Plot Design",
    "section": "",
    "text": "Whole Plot Randomized as a completely randomized design\n\n\n\n\n\n\n\n\nWhole Plot Randomized as an RCBD\n\n\n\n\n\n\n\n\n\n\n\n\n\n‘iid’ assumption for error terms\n\n\n\nIn these model, the error terms, \\(\\epsilon\\) are assumed to be “iid”, that is, independently and identically distributed. This means they have constant variance and they each individual error term is independent from the others.\n\n\n\n\n\nSplit Plot CRD Design\n\n\n\n\n\nSplit Plot RCBD Design",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/split-plot-design.html#split-split-plot-design-in-r",
    "href": "chapters/split-plot-design.html#split-split-plot-design-in-r",
    "title": "6  Split Plot Design",
    "section": "6.3 Split-split plot design in R",
    "text": "6.3 Split-split plot design in R\nIn this example, we have a yield data of 3 different rice varieties grown under 3 management practices and 5 Nitrogen levels. In this split-split design:\nblocks = block (3 blocks),\nWhole plot factor = Nitrogen (5 levels)\nSub plot = management (3 levels)\nsub-subplot = variety (3 levels)\nStatistical model:\nadd model equation here\nHere, we are extracting the rice yield data from agricolae package.\n\nlibrary(agricolae)\nf &lt;- system.file(\"external/ssp.csv\", package=\"agricolae\")\nrice &lt;-read.csv(f)\n\nExploratory analysis\n\nstr(rice)\n\n'data.frame':   135 obs. of  5 variables:\n $ block     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ nitrogen  : int  0 0 0 50 50 50 80 80 80 110 ...\n $ management: chr  \"m1\" \"m2\" \"m3\" \"m1\" ...\n $ variety   : int  1 1 1 1 1 1 1 1 1 1 ...\n $ yield     : num  3.32 3.77 4.66 3.19 3.62 ...\n\n\nConvert block, nitrogen, variety, and management to factors.\n\nrice$block&lt;-factor(rice$block)\nrice$nitrogen&lt;-factor(rice$nitrogen)\nrice$management&lt;-factor(rice$management)\nrice$variety&lt;-factor(rice$variety)\n\nStatistical model:\nHere is the basic split-split plot analysis. We can use the nesting notation in the random part because nitrogen and management are nested in blocks. We can do blocks as fixed or random.\n\nmodel3 &lt;-lmer(yield ~  block + nitrogen*management*variety + (1|block/nitrogen/management),data=rice, na.action = na.exclude)\n\nboundary (singular) fit: see help('isSingular')\n\nsummary(model3)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: \nyield ~ block + nitrogen * management * variety + (1 | block/nitrogen/management)\n   Data: rice\n\nREML criterion at convergence: 234.8\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.61416 -0.54059 -0.04774  0.58135  2.01690 \n\nRandom effects:\n Groups                      Name        Variance Std.Dev.\n management:(nitrogen:block) (Intercept) 0.000000 0.00000 \n nitrogen:block              (Intercept) 0.013257 0.11514 \n block                       (Intercept) 0.001708 0.04132 \n Residual                                0.437110 0.66114 \nNumber of obs: 135, groups:  \nmanagement:(nitrogen:block), 45; nitrogen:block, 15; block, 3\n\nFixed effects:\n                                   Estimate Std. Error t value\n(Intercept)                        3.877430   0.400091   9.691\nblock2                             0.117933   0.167765   0.703\nblock3                            -0.059222   0.167765  -0.353\nnitrogen50                         0.335000   0.547946   0.611\nnitrogen80                         1.329000   0.547946   2.425\nnitrogen110                        0.753333   0.547946   1.375\nnitrogen140                        0.164667   0.547946   0.301\nmanagementm2                       0.420333   0.539821   0.779\nmanagementm3                       1.428000   0.539821   2.645\nvariety2                           1.449000   0.539821   2.684\nvariety3                           1.481333   0.539821   2.744\nnitrogen50:managementm2           -0.076000   0.763422  -0.100\nnitrogen80:managementm2            0.086000   0.763422   0.113\nnitrogen110:managementm2           0.376667   0.763422   0.493\nnitrogen140:managementm2           0.718000   0.763422   0.941\nnitrogen50:managementm3           -0.177333   0.763422  -0.232\nnitrogen80:managementm3           -0.107667   0.763422  -0.141\nnitrogen110:managementm3           0.158000   0.763422   0.207\nnitrogen140:managementm3           0.482000   0.763422   0.631\nnitrogen50:variety2                0.240667   0.763422   0.315\nnitrogen80:variety2               -0.695333   0.763422  -0.911\nnitrogen110:variety2               0.152667   0.763422   0.200\nnitrogen140:variety2               1.265000   0.763422   1.657\nnitrogen50:variety3                1.068000   0.763422   1.399\nnitrogen80:variety3                1.226000   0.763422   1.606\nnitrogen110:variety3               1.321000   0.763422   1.730\nnitrogen140:variety3               3.075000   0.763422   4.028\nmanagementm2:variety2             -1.054667   0.763422  -1.381\nmanagementm3:variety2             -1.343000   0.763422  -1.759\nmanagementm2:variety3              0.697333   0.763422   0.913\nmanagementm3:variety3              0.753667   0.763422   0.987\nnitrogen50:managementm2:variety2   0.603667   1.079642   0.559\nnitrogen80:managementm2:variety2   1.068667   1.079642   0.990\nnitrogen110:managementm2:variety2  1.009667   1.079642   0.935\nnitrogen140:managementm2:variety2  0.225000   1.079642   0.208\nnitrogen50:managementm3:variety2   0.482667   1.079642   0.447\nnitrogen80:managementm3:variety2   1.329000   1.079642   1.231\nnitrogen110:managementm3:variety2  1.022667   1.079642   0.947\nnitrogen140:managementm3:variety2  0.662667   1.079642   0.614\nnitrogen50:managementm2:variety3  -0.006333   1.079642  -0.006\nnitrogen80:managementm2:variety3  -0.569667   1.079642  -0.528\nnitrogen110:managementm2:variety3 -0.322333   1.079642  -0.299\nnitrogen140:managementm2:variety3 -1.054333   1.079642  -0.977\nnitrogen50:managementm3:variety3   0.259667   1.079642   0.241\nnitrogen80:managementm3:variety3  -0.816667   1.079642  -0.756\nnitrogen110:managementm3:variety3 -0.541000   1.079642  -0.501\nnitrogen140:managementm3:variety3 -1.292333   1.079642  -1.197\n\n\n\nCorrelation matrix not shown by default, as p = 47 &gt; 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n\n\nModel Diagnostics: we observed a constant variance and normality of residuals.\n\nplot(model3)\n\n\n\n\n\n\n\nqqnorm(residuals(model3)); qqline(residuals(model3))\n\n\n\n\n\n\n\nlibrary(see)\ncheck_model(model3)\n\n\n\n\n\n\n\n\nAnalysis of variance\n\nanova(model3)\n\nAnalysis of Variance Table\n                            npar  Sum Sq Mean Sq  F value\nblock                          2   0.505   0.253   0.5780\nnitrogen                       4  48.424  12.106  27.6953\nmanagement                     2  42.936  21.468  49.1136\nvariety                        2 206.013 103.007 235.6535\nnitrogen:management            8   1.103   0.138   0.3154\nnitrogen:variety               8  14.145   1.768   4.0449\nmanagement:variety             4   3.852   0.963   2.2030\nnitrogen:management:variety   16   3.699   0.231   0.5289\n\n\nPost-Hoc analysis\n\nemmeans(model3, ~ nitrogen)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n nitrogen emmean    SE df lower.CL upper.CL\n 0          5.38 0.156  0     -Inf      Inf\n 50         6.22 0.145  0     -Inf      Inf\n 80         7.00 0.145  0     -Inf      Inf\n 110        6.94 0.144  0     -Inf      Inf\n 140        7.23 0.144  0     -Inf      Inf\n\nResults are averaged over the levels of: block, management, variety \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\nemmeans(model3, ~ variety*management)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n variety management emmean    SE df lower.CL upper.CL\n 1       m1           4.41 0.164  0     -Inf      Inf\n 2       m1           6.05 0.175  0     -Inf      Inf\n 3       m1           7.23 0.176  0     -Inf      Inf\n 1       m2           5.05 0.176  0     -Inf      Inf\n 2       m2           6.22 0.174  0     -Inf      Inf\n 3       m2           8.18 0.173  0     -Inf      Inf\n 1       m3           5.91 0.177  0     -Inf      Inf\n 2       m3           6.91 0.174  0     -Inf      Inf\n 3       m3           9.01 0.174  0     -Inf      Inf\n\nResults are averaged over the levels of: block, nitrogen \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\nemm &lt;- emmeans(model3, ~ nitrogen*variety) \n\nNOTE: Results may be misleading due to involvement in interactions\n\ncomparison &lt;- cld(emm, Letters = LETTERS, reversed = T) \ncomparison\n\n nitrogen variety emmean    SE df lower.CL upper.CL .group     \n 140      3         9.34 0.231  0     -Inf      Inf  A         \n 80       3         8.56 0.231  0     -Inf      Inf  AB        \n 110      3         8.44 0.231  0     -Inf      Inf  ABC       \n 50       3         7.88 0.231  0     -Inf      Inf   BCD      \n 140      2         7.29 0.230  0     -Inf      Inf    CDE     \n 110      2         6.92 0.230  0     -Inf      Inf     DEF    \n 80       2         6.59 0.231  0     -Inf      Inf      EFG   \n 0        3         6.48 0.229  0     -Inf      Inf      EFG   \n 50       2         6.02 0.230  0     -Inf      Inf       FGH  \n 80       1         5.83 0.232  0     -Inf      Inf       FGHI \n 110      1         5.44 0.230  0     -Inf      Inf        GHIJ\n 0        2         5.16 0.232  0     -Inf      Inf         HIJ\n 140      1         5.08 0.231  0     -Inf      Inf         HIJ\n 50       1         4.76 0.233  0     -Inf      Inf          IJ\n 0        1         4.51 0.229  0     -Inf      Inf           J\n\nResults are averaged over the levels of: block, management \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 15 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html",
    "href": "chapters/intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "1.1 Terms\nPlease read this section and refer back to if when you forget what these terms mean.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#terms",
    "href": "chapters/intro.html#terms",
    "title": "1  Introduction",
    "section": "",
    "text": "Table 1.1: Terms definitions\n\n\n\n\n\n\n\n\n\nTerm\nDefinition\n\n\n\n\nRandom effect\nAn independent variable where the levels being estimated compose a random sample from a population whose variance will be estimated\n\n\nFixed effect\nAn independent variable with specific, predefined levels to estimate\n\n\nExperimental unit\nThe smallest unit being used for analysis. This could be an animal, a field plot, a person, a meat or muscle sample. The unit may be assessed multiple times or through multiple point in time. When the analysis is all said and done, the predictions occur at this level.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/intro.html#packages",
    "href": "chapters/intro.html#packages",
    "title": "1  Introduction",
    "section": "1.2 Packages",
    "text": "1.2 Packages\n\n1.2.1 Table of required packages for modelling\n\n\n\nTable 1.2: Table of required packages\n\n\n\n\n\nPackage\nPurpose\n\n\n\n\nlme4 (Bates et al. 2015)\nmain package for linear mixed models\n\n\nlmerTest (Kuznetsova, Brockhoff, and Christensen 2017)\nfor computing p-values when using lme4\n\n\nnlme (J. Pinheiro, Bates, and R Core Team 2023; J. C. Pinheiro and Bates 2000)\nmain package for linear mixed models and part of ‘base R’\n\n\nemmeans (Lenth 2022)\nfor estimating fixed effects, their confidence intervals and conducting contrasts\n\n\nbroom.mixed (Bolker and Robinson 2024)\npackage for presenting the model summary output into a tidy workflow.\n\n\nDHARMa (Hartig 2022)\nfor evaluating residuals (error terms) in generalized linear models\n\n\nperformance (Lüdecke et al. 2021)\nFor creating diagnostic plots or to compute fit measures\n\n\n\n\n\n\n\n\n1.2.2 Optional packages\n\n\n\nTable 1.3: Table of optional packages\n\n\n\n\n\nPackage Name\nFunction\n\n\nhere\nFor setting work directory\n\n\nggplot\nplotting\n\n\ndesplot\nplotting\n\n\nagridat\nto download example dataset\n\n\nagricolae\nto download example dataset\n\n\n\n\n\n\nThis entire guide will use the here package for loading data. If you can load your data fine without this package, please carry on. ‘here’ is certainly not required for running mixed models.\n\n\n\n\nBates, Douglas, Martin Mächler, Ben Bolker, and Steve Walker. 2015. “Fitting Linear Mixed-Effects Models Using lme4.” Journal of Statistical Software 67 (1): 1–48. https://doi.org/10.18637/jss.v067.i01.\n\n\nBolker, Ben, and David Robinson. 2024. Broom.mixed: Tidying Methods for Mixed Models. https://CRAN.R-project.org/package=broom.mixed.\n\n\nHartig, Florian. 2022. DHARMa: Residual Diagnostics for Hierarchical (Multi-Level / Mixed) Regression Models. https://CRAN.R-project.org/package=DHARMa.\n\n\nKuznetsova, Alexandra, Per B. Brockhoff, and Rune H. B. Christensen. 2017. “lmerTest Package: Tests in Linear Mixed Effects Models.” Journal of Statistical Software 82 (13): 1–26. https://doi.org/10.18637/jss.v082.i13.\n\n\nLenth, Russell V. 2022. Emmeans: Estimated Marginal Means, Aka Least-Squares Means. https://CRAN.R-project.org/package=emmeans.\n\n\nLüdecke, Daniel, Mattan S. Ben-Shachar, Indrajeet Patil, Philip Waggoner, and Dominique Makowski. 2021. “performance: An R Package for Assessment, Comparison and Testing of Statistical Models.” Journal of Open Source Software 6 (60): 3139. https://doi.org/10.21105/joss.03139.\n\n\nPinheiro, José C., and Douglas M. Bates. 2000. Mixed-Effects Models in s and s-PLUS. New York: Springer. https://doi.org/10.1007/b98882.\n\n\nPinheiro, José, Douglas Bates, and R Core Team. 2023. Nlme: Linear and Nonlinear Mixed Effects Models. https://CRAN.R-project.org/package=nlme.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "chapters/analysis-tips.html",
    "href": "chapters/analysis-tips.html",
    "title": "2  Tips on Analysis",
    "section": "",
    "text": "Below are some things our office frequently says to researchers.\n\n2.0.1 Think About Your Analytical Goals\nThroughout this guide, we have tried to explicitly state the goals of each analysis. This helps informs how to approach the analysis of an experiment. It can be difficult, especially for new scientists-in-training (i.e. graduate students), to understand what it is they want to estimate. You may have been handed a data set you had no role in generating and told to “analyze this” with no additional context. Or perhaps you may have conducted a large study that has some overall goals that are lofty, yet vague.\nIt can helpful to think about the exact results you are hoping to get. What does this look like exactly? Do you want to estimate the changes in plant diversity as the result of a herbicide spraying program? Do you want to find out if a fertilizer treatment changed protein content in a crop and by how much? Do you want to know about changes in human diet due to an intervention? What are quantifiable difference that you and/or experts in your domain would find meaningful?\nConsider what the results would look like for (1) the best case scenario when your wildest dreams come true, and (2) null results, when you find out that your treatment or invention had no effect. It’s very helpful to understand and recognize both situations.\nBy “consider”, we mean: imagine the final plot or table, or summary sentence you want to present, either in a peer-reviewed manuscript, or some output for stakeholders. From this, you work backwards to determine the analytical approach needed to arrive at that final output. Or you may determine that your data are unsuitable to generate the desired output, in which case, it’s best to determine that as soon as possible.\nBy “consider”, we also mean: imagine exactly what the spreadsheet of results would say - what columns are present and what data are in the cells. If you are planning an experiment, this can help ensure you plan it properly to actually test whatever it is you want to evaluate. If the experiment is done, this enables you to evaluate if you have the information present to test your hypothesis.\nBy taking the time to reflect on what it is you exactly want to analyze, this can save time and prevent you from doing unneeded analyzes that don’t serve this final goal. There is rarely (never?) one way to analyze an experiment or a data set, so use your limited time wisely and focus on what matters.\n\n\n2.0.2 Know That Data Cleaning is Time Consuming\n\n\n\n\n\n\n\n\n\nFigure 2.1: How you will spend your time\n\n\n\n\nThis has and will continue to occupy the majority of researcher’s time when conducting an analysis. Truly, we are sorry for this. But, please know it is not you, it is the nature of data. Please plan for and prepare yourself mentally to spend time cleaning and preparing your data for analysis.1 This will take way longer than the actual analysis! It is needed to ensure you can actually get correct results in an analysis, and hence data cleaning is worth the time it requires.\n1 For an excellent set of basic instructions on data preparation, please see: Broman, K. W., & Woo, K. H. (2018). Data Organization in Spreadsheets. The American Statistician, 72(1), 2–10.\n\n2.0.3 Interpret ANOVA and P-values with Caution\n\nInformally, a p-value is the probability under a specified statistical model that a statistical summary of the data (e.g., the sample mean difference between two compared groups) would be equal to or more extreme than its observed value.\n---American Statistical Association\n\nThe great majority of researched are deeply interested in p-values. This is not a bad thing per se, but sometimes the focus is so strong it comes at the expense of other valuable pieces of information, like treatment estimates! Russ Leanth, author of the emmeans package refers to this particular practice as “star gazing”.\nIt is important to evaluate why you want to do ANOVA, what extra information it will bring and what you plan to do with those results. Sometimes, researchers want to conduct an ANOVA even though the original goals of analysis were reached without it. Running an ANOVA may increase or decrease confidence in your other results. That is not at all what ANOVA is intended to do, nor is this what p-values can tell us. ANOVA compares across group variation to within group variation. It cannot tell us if anything is the ‘same’ (there’s a separate branch of analysis, ‘equivalence testing’, for that), and it cannot tell us specifically what is different, unless you are fortunate enough to only have 2 levels in your treatment structure. P-values provide no guarantee that something is truly different or not; it only quantifies the probability you could have observed these results by chance.\nThe American Statistics Association recommends that “Scientific conclusions and business or policy decisions should not be based only on whether a p-value passes a specific threshold.”2 That article also explains what p-values are telling us and how to avoid committing analytical errors and/or misinterpreting p-values. If you have time to read the full article, it will benefit your research!\n2 Wasserstein, R. L., & Lazar, N. A. (2016). The ASA Statement on p-Values: Context, Process, and Purpose. The American Statistician, 70(2), 129–133.The main problematic behavior I see is researchers using p-values as the sole criteria on whether to present results: “We wanted to test if x, y and z had an effect. We ran some model and found that that only x had a significant effect, and those results indicate…” (while results with a p-value &gt; 0.05 are ignored).\nA better option would be to discuss the the results of the analysis and how they addressed the research questions: how did the dependent variable change (or not change) as a result of the treatments/interventions/independent variables? What are the parameters or treatment predictions and what do they tell us with regard to the research goals? And to bolster those estimates, what are the confidence intervals on those estimates? What are the p-values for the statistical tests? P-values can support the results and conclusions, but the main results desired by a researcher are usually the estimates themselves - so lead with that!\nTo learn more about common pitfalls in interpreting p-values, check out our blog post on the subject and/or this paper3 on the subject.\n3 Greenland S, Senn SJ, Rothman KJ, Carlin JB, Poole C, Goodman SN, Altman DG. (2016) Statistical tests, P values, confidence intervals, and power: a guide to misinterpretations. Eur J Epidemiol. 31(4):337-50.\n\n2.0.4 Comments on Hypothesis Testing and Usage of Treatment Letters\nOften, I see researchers use compact letter display (e.g. “A”, “B”, “C”, ….) for indicating differences among treatments. This makes for concise presentation of results in tables and figures, but it can both kill statistical power and misses nuance in the results.\n\n\n\nImage from a paper published in 2024. Although this was a fully crossed factorial experiment, compact letter display was implemented across all treatment combinations, resulting in some nonsensical comparisons among some more informative contrasts.\nImplementing compact letter display can kill statistical power (the probability of detecting true differences) because it requires that all pairwise comparison being made. Doing this, especially when there are many treatment levels, has its perils. The biggest problem is that this creates a multiple testing problem. The RCBD example in this guide has 42 treatments, resulting in a total of 861 comparisons (\\(=42*(42-1)/2\\)), that are then adjusted for multiple tests. With that many tests, a severe adjustment is likely and hence things that are different are not detected. With so many tests, it could be that there is an overall effect due to treatment, but they all share the same letter!\nThe second problem is one of interpretation. Just because two treatments or varieties share a letter does not mean they are equivalent. It only means that they were not found to be different. A funny distinction, but alas. There is an entire branch of statistics, ‘equivalence testing’ devoted to just this topic - how to test if two things are actually the same. This involves the user declaring a maximum allowable numeric difference for a variable in order to determine if two items are statistically different or equivalent - something that these pairwise comparisons are not doing.]\nAnother problem is that doing all pairwise comparison may not align with experimental goals. In many circumstances, not every pairwise combination is of any interest or relevance to the study. Additionally, complex treatment structure may necessitate custom constrasts that highlight differences between the marginal estimate of multiple treatments versus another. For example, there may be 2 levels of ‘high’ nitrogen fertilizer treatment with two different sources (i.e. types of fertilizer). A researcher may want to contrast those two levels together against ‘low’ nitrogen treatment levels.\nOften, researchers have embedded additional structure in the treatments that is not fully reflected in the statistical model. For example, perhaps a study is looking at five different intercropping mixtures, two that incorporate a legume and 3 that do not. Conducting all pairwise comparisons with miss estimating the difference due to including a legume in an intercropping mix and not incorporating one. Soil fertility and other agronomic studies often have complex treatment structure. When it is not practical or financially feasible to have a full factorial experiment, embedding different treatment combinations in the main factor of analysis can accomplish this. This is a good study design approach, and we have statistical tools to analyze it.\n\n\n\n\nBroman, Karl W., and Kara H. Woo. 2018. “Data Organization in Spreadsheets.” The American Statistician 72 (1): 2–10. https://doi.org/10.1080/00031305.2017.1375989.\n\n\nGreenland, Sander, Stephen J. Senn, Kenneth J. Rothman, John B. Carlin, Charles Poole, Steven N. Goodman, and Douglas G. Altman. 2016. “Statistical Tests, P Values, Confidence Intervals, and Power: A Guide to Misinterpretations.” European Journal of Epidemiology 31 (4): 337–50. https://doi.org/10.1007/s10654-016-0149-3.\n\n\nWasserstein, Ronald L., and Nicole A. Lazar. 2016. “The ASA Statement on p-Values: Context, Process, and Purpose.” The American Statistician 70 (2): 129–33. https://doi.org/10.1080/00031305.2016.1154108.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tao of Analysis</span>"
    ]
  },
  {
    "objectID": "chapters/background.html",
    "href": "chapters/background.html",
    "title": "3  Mixed model theory and background",
    "section": "",
    "text": "3.1 Model\nRecall simple linear regression with intercept (\\(\\beta_0\\)) and slope (\\(\\beta_1\\)) effect for subject i. The slope and intercept are chosen in a way so that the residual sum of squares is minimized.\n\\[  Y = \\beta_0 + \\beta_1 X + \\epsilon \\]\nIf we consider this model in a mixed model framework, \\(\\beta_0\\) and \\(\\beta_0\\) are considered fixed effects (also known as the population-averaged values) and \\(b_i\\) is a random effect for subject i. The random effect can be thought of as each subject’s deviation from the fixed intercept parameter. The key assumption about \\(b_i\\) is that it is independent, identically and normally distributed with a mean of zero and associated variance. Random effects are especially useful when we have (1) lots of levels (e.g., many species or blocks), (2) relatively little data on each level (although we need multiple samples from most of the levels), and (3) uneven sampling across levels.\nFor example, if we let the intercept be a random effect, it takes the form:\n\\[  Y = \\beta_0 + b_i + \\beta_1 X + \\epsilon \\]\nIn this model, predictions would vary depending on each subject’s random intercept term, but slopes would be the same.\nIn second case, we can have a fixed intercept and a random slope. The model will be:\n\\[  Y = \\beta_0 + (\\beta_1 + b_i)(X) + \\epsilon\\]\nIn this model, the bi is a random effect for subject i applied to the slope. Predictions would vary with random slope term, but the intercept will be the same:\nThird case would be the mixed model with random slope and intercept:\n\\[  Y = (\\beta_0 + a_i) + (\\beta_1 + b_i)(X) + \\epsilon\\]\nIn this model, \\(a_i\\) and \\(b_i\\) are random effects for subject i applied to the intercept and slope, respectively. Predictions would vary depending on each subject’s slope and intercept terms:",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Mixed Model Background</span>"
    ]
  },
  {
    "objectID": "chapters/background.html#model",
    "href": "chapters/background.html#model",
    "title": "3  Mixed model theory and background",
    "section": "",
    "text": "Example mixed model with random intercepts but identical slopes.\n\n\n\n\n\n\n\n\n\n\nMixed model with random slopes but identical intercepts.\n\n\n\n\n\n\n\n\n\n\nMixed Model with random intercept and slope",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Mixed Model Background</span>"
    ]
  },
  {
    "objectID": "chapters/background.html#formula-notation",
    "href": "chapters/background.html#formula-notation",
    "title": "3  Mixed model theory and background",
    "section": "3.2 R Formula Syntax for Random and Fixed Effects",
    "text": "3.2 R Formula Syntax for Random and Fixed Effects\nFormula notation is often used in the R syntax for linear models. It looks like this: \\(Y ~ X\\), where Y is the dependent variable (the response) and X is/are the independent variable(s) (e.g. the experimental treatments).\n\nmy_formula &lt;- formula(Y ~ treatment1 + treatment2)\nclass(my_formula)\n\n[1] \"formula\"\n\n\nThe package ‘lme4’ has some additional conventions regarding the formula. Random effects are put in parentheses and a 1| is used to denote random intercepts (rather than random slopes). The table below provides several examples of random effects in mixed models. The names of grouping factors are denoted g, g1, and g2, and covariate as x.\n\n\n\n\n\n\n\n\nFormula\nAlternative\nMeaning\n\n\n\n\n(1 | g)\n1 + (1 | g)\nRandom intercept with a fixed mean\n\n\n(1 | g1/g2)\n(1 | g1) + (1 | g1:g2)\nIntercept varying among g1 and g2 within g1.\n\n\n(1 | g1) + (1 | g2)\n1 + (1 | g1) + (1| g2)\nIntercept varying among g1 and g2.\n\n\nx + (x | g)\n1 + x + (1 + x | g)\nCorrelated random intercept and slope\n\n\nx + (x || g)\n1 + x + (1 | g) + (0 + x | g)\nUncorrelated random intercept and slope.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Mixed Model Background</span>"
    ]
  },
  {
    "objectID": "chapters/rcbd.html",
    "href": "chapters/rcbd.html",
    "title": "4  Randomized Complete Block Design",
    "section": "",
    "text": "4.1 Background\nThe statistical model:\n\\[y_{ij} = \\mu + \\alpha_i + \\beta_j + \\epsilon_{ij}\\] Where:\n\\(\\mu\\) = overall experimental mean \\(\\alpha\\) = treatment effects (fixed) \\(\\beta\\) = block effects (random) \\(\\epsilon\\) = error terms\n\\[ \\epsilon \\sim N(0, \\sigma)\\]\n\\[ \\beta \\sim N(0, \\sigma_b)\\]\nBoth the overall error and the block effects are assumed to be normally distributed with a mean of zero and standard deviations of \\(\\sigma\\) and \\(sigma_B\\), respectively.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Randomized Complete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/rcbd.html#background",
    "href": "chapters/rcbd.html#background",
    "title": "4  Randomized Complete Block Design",
    "section": "",
    "text": "‘iid’ assumption for error terms\n\n\n\nIn this model, the error terms, \\(\\epsilon\\) are assumed to be “iid”, that is, independently and identically distributed. This means they have constant variance and they each individual error term is independent from the others.\nThis guide will later address examples when this assumption is violated and how to handle it.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Randomized Complete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/rcbd.html#example-analysis",
    "href": "chapters/rcbd.html#example-analysis",
    "title": "4  Randomized Complete Block Design",
    "section": "4.2 Example Analysis",
    "text": "4.2 Example Analysis\nFirst, load the libraries for analysis and estimation:\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(performance)\n\n\n\n\nlibrary(nlme); library(performance); library(emmeans)\nlibrary(dplyr)\n\n\n\n\nNext, let’s load some data. It is located here if you want to download it yourself (recommended).\nThis data set is for a single wheat variety trial conducted in Aberdeen, Idaho in 2015. The trial includes 4 blocks and 42 different treatments (wheat varieties in this case). This experiment consists of a series of plots (the experimental unit) laid out in a rectangular grid in a farm field. The goal of this analysis is the estimate the yield and test weight of each variety and the determine the rankings of each variety with regard to yield.\n\nvar_trial &lt;- read.csv(here::here(\"data\", \"aberdeen2015.csv\"))\n\n\nTable of variables in the data set\n\n\n\n\n\n\nblock\nblocking unit\n\n\nrange\ncolumn position for each plot\n\n\nrow\nrow position for each plot\n\n\nvariety\ncrop variety (the treatment) being evaluated\n\n\nstand_pct\npercentage of the plot with actual plants growing in them\n\n\ndays_to_heading_julian\nJulian days (starting January 1st) until plot “headed” (first spike emerged)\n\n\nlodging\npercentage of plants in the plot that fell down and hence could not be harvested\n\n\nyield_bu_a\nyield (bushels per acre)\n\n\n\nThere are several variables present that are not useful for this analysis. The only thing we are concerned about is block, variety, yield_bu_a, and test_weight.\n\n4.2.1 Data integrity checks\nThe first thing is to make sure the data is what we expect. There are two steps:\n\nmake sure data are the expected data type\ncheck the extent of missing data\ninspect the independent variables and make sure the expected levels are present in the data\ninspect the dependent variable to ensure its distribution is following expectations\n\n\nstr(var_trial)\n\n'data.frame':   168 obs. of  10 variables:\n $ block                 : int  4 4 4 4 4 4 4 4 4 4 ...\n $ range                 : int  1 1 1 1 1 1 1 1 1 1 ...\n $ row                   : int  1 2 3 4 5 6 7 8 9 10 ...\n $ variety               : chr  \"DAS004\" \"Kaseberg\" \"Bruneau\" \"OR2090473\" ...\n $ stand_pct             : int  100 98 96 100 98 100 100 100 99 100 ...\n $ days_to_heading_julian: int  149 146 149 146 146 151 145 145 146 146 ...\n $ height                : int  39 35 33 31 33 44 30 36 36 29 ...\n $ lodging               : int  0 0 0 0 0 0 0 0 0 0 ...\n $ yield_bu_a            : num  128 130 119 115 141 ...\n $ test_weight           : num  56.4 55 55.3 54.1 54.1 56.4 54.7 57.5 56.1 53.8 ...\n\n\nThese look okay except for block, which is currently coded as integer (numeric). We don’t want run a regression of block, where block 1 has twice the effect of block 2, and so on. So, converting it to a character will fix that. It can also be converted to a factor, but I find character easier to work with, and ultimately, equivalent to factor conversion\n\nvar_trial$block &lt;- as.character(var_trial$block)\n\nNext, check the independent variables. Running a cross tabulations is often sufficient to ascertain this.\n\ntable(var_trial$variety, var_trial$block)\n\n                        \n                         1 2 3 4\n  06-03303B              1 1 1 1\n  Bobtail                1 1 1 1\n  Brundage               1 1 1 1\n  Bruneau                1 1 1 1\n  DAS003                 1 1 1 1\n  DAS004                 1 1 1 1\n  Eltan                  1 1 1 1\n  IDN-01-10704A          1 1 1 1\n  IDN-02-29001A          1 1 1 1\n  IDO1004                1 1 1 1\n  IDO1005                1 1 1 1\n  Jasper                 1 1 1 1\n  Kaseberg               1 1 1 1\n  LCS Artdeco            1 1 1 1\n  LCS Biancor            1 1 1 1\n  LCS Drive              1 1 1 1\n  LOR-833                1 1 1 1\n  LOR-913                1 1 1 1\n  LOR-978                1 1 1 1\n  Madsen                 1 1 1 1\n  Madsen / Eltan (50/50) 1 1 1 1\n  Mary                   1 1 1 1\n  Norwest Duet           1 1 1 1\n  Norwest Tandem         1 1 1 1\n  OR2080637              1 1 1 1\n  OR2080641              1 1 1 1\n  OR2090473              1 1 1 1\n  OR2100940              1 1 1 1\n  Rosalyn                1 1 1 1\n  Stephens               1 1 1 1\n  SY  Ovation            1 1 1 1\n  SY 107                 1 1 1 1\n  SY Assure              1 1 1 1\n  UI-WSU Huffman         1 1 1 1\n  UI Castle CLP          1 1 1 1\n  UI Magic CLP           1 1 1 1\n  UI Palouse             1 1 1 1\n  UI Sparrow             1 1 1 1\n  WB 456                 1 1 1 1\n  WB 528                 1 1 1 1\n  WB1376 CLP             1 1 1 1\n  WB1529                 1 1 1 1\n\n\nThere are 42 varieties and there appears to be no misspellings among them that might confuse R into thinking varieties are different when they are actually the same. R is sensitive to case and white space, which can make it easy to create near duplicate treatments, such as “eltan” and “Eltan” and “Eltan”. There is no evidence of that in this data set. Additionally, it is perfectly balanced, with exactly one observation per treatment per rep. Please note that this does not tell us anything about the extent of missing data.\n\n\n\n\n\n\nMissing Data\n\n\n\nHere is a quick check to count the number of missing data in each column. This is not neededfor the data sets in this tutorial that have already been comprehensively examined, but it is helpful to check that the level of missingness displayed in an R session is what you expect.\n\napply(var_trial, 2, function(x) sum(is.na(x)))\n\n                 block                  range                    row \n                     0                      0                      0 \n               variety              stand_pct days_to_heading_julian \n                     0                      0                      0 \n                height                lodging             yield_bu_a \n                     0                      0                      0 \n           test_weight \n                     0 \n\n\nAlas, no missing data!\n\n\nIf there were independent variables with a continuous distribution (a covariate), I would plot those data.\nLast, check the dependent variable. A histogram is often quite sufficient to accomplish this. This is designed to be a quick check, so no need to spend time making the plot look good.\n\n\n\n\n\n\n\n\n\nFigure 4.1: Histogram of the dependent variable.\n\n\n\n\n\nhist(var_trial$yield_bu_a, main = \"\", xlab = \"yield\")\n\nThe range is roughly falling into the range we expect. I know this from talking with the person who generated the data, not through my own intuition. I do not see any large spikes of points at a single value (indicating something odd), nor do I see any extreme values (low or high) that might indicate some larger problems.\nData are not expected to be normally distributed at this point, so don’t bother running any Shapiro-Wilk tests. This histogram is a check to ensure the the data are entered correctly and they appear valid. It requires a mixture of domain knowledge and statistical training to know this, but over time, if you look at these plots with regularity, you will gain a feel for what your data should look like at this stage.\nThese are not complicated checks. They are designed to be done quickly and should be done for every analysis if you not previously already inspected the data as thus. We do this before every analysis and often discover surprising things! Best to discover these things early, since they are likely to impact the final analysis.\nThis data set is ready for analysis!\n\n\n4.2.2 Model Building\n\n\nRecall the model:\n\\[y_{ij} = \\mu + \\alpha_i + \\beta_j + \\epsilon_{ij}\\]\nFor this model, \\(\\alpha_i\\) is the variety effect (fixed) and \\(\\beta_j\\) is the block effect (random).\nHere is the R syntax for the RCBD statistical model:\n\nlme4nlme\n\n\n\nmodel_rcbd_lmer &lt;- lmer(yield_bu_a ~ variety + (1|block),\n                   data = var_trial, \n                   na.action = na.exclude)\n\n\n\n\nmodel_rcbd_lme &lt;- lme(yield_bu_a ~ variety,\n                  random = ~ 1|block,\n                  data = var_trial, \n                  na.action = na.exclude)\n\n\n\n\nThe parentheses are used to indicate that ‘block’ is a random effect, and this particular notation (1|block) indicates that a ‘random intercept’ model is being fit. This is the most common approach. It means there is one overall effect fit for each block. I use the argument na.action = na.exclude as instruction for how to handle missing data: conduct the analysis, adjusting as needed for the missing data, and when prediction or residuals are output, please pad them in the appropriate places for missing data so they can be easily merged into the main data set if need be.\n\n\n4.2.3 Check Model Assumptions\n\n\nR syntax for checking model assumptions is the same for lme4 and nlme.\nRemember those iid assumptions? Let’s make sure we actually met them.\n\n4.2.3.1 Old Way\nThere are special plotting function written for lme4 and nlme objects (ie.plot(lmer_object)) for checking the homoscedasticity (constant variance).\n\n\n\n\n\n\n\n\n\nFigure 4.2: Plot of residuals versus fitted values\n\n\n\n\n\nplot(model_rcbd_lmer, resid(., scaled=TRUE) ~ fitted(.), \n     xlab = \"fitted values\", ylab = \"studentized residuals\")\n\nWe are looking for a random and uniform distribution of points. This looks good!\nChecking normality requiring first extracting the model residuals with resid() and then generating a qq-plot and line.\n\n\n\n\n\n\n\n\n\nFigure 4.3: QQ-plot of residuals\n\n\n\n\n\nqqnorm(resid(model_rcbd_lmer), main = NULL); qqline(resid(model_rcbd_lmer))\n\nThis is reasonably good. Things do tend to fall apart at the tails.\n\n\n4.2.3.2 New Way\nNowadays, we can take advantage of the performance package, which provides a comprehensive suite of diagnostic plots.\n\n\nPlease look for check_model() in help tab to find what other checks you can perform using this function. If you would like to check all assumptions you can use check = “all”.\n\ncheck_model(model_rcbd_lmer, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\n4.2.4 Inference\n\n\nR syntax for esimating model marginal means is the same for lme4 and nlme.\nEstimates for each treatment level can be obtained with the ‘emmeans’ package.\n\nrcbd_emm &lt;- emmeans(model_rcbd_lmer, ~ variety)\nas.data.frame(rcbd_emm) %&gt;% arrange(desc(emmean))\n\n variety                  emmean       SE    df  lower.CL upper.CL\n Rosalyn                155.2703 7.212203 77.85 140.91149 169.6292\n IDO1005                153.5919 7.212203 77.85 139.23310 167.9508\n OR2080641              152.6942 7.212203 77.85 138.33536 167.0530\n Bobtail                151.6403 7.212203 77.85 137.28149 165.9992\n UI Sparrow             151.6013 7.212203 77.85 137.24245 165.9601\n Kaseberg               150.9768 7.212203 77.85 136.61794 165.3356\n IDN-01-10704A          148.9861 7.212203 77.85 134.62729 163.3450\n 06-03303B              148.8300 7.212203 77.85 134.47116 163.1888\n WB1529                 148.2445 7.212203 77.85 133.88568 162.6034\n DAS003                 145.2000 7.212203 77.85 130.84116 159.5588\n IDN-02-29001A          144.5755 7.212203 77.85 130.21665 158.9343\n Bruneau                143.9900 7.212203 77.85 129.63116 158.3488\n SY 107                 143.6387 7.212203 77.85 129.27987 157.9975\n WB 528                 142.9752 7.212203 77.85 128.61633 157.3340\n OR2080637              141.7652 7.212203 77.85 127.40633 156.1240\n Jasper                 141.2968 7.212203 77.85 126.93794 155.6556\n UI Magic CLP           139.5403 7.212203 77.85 125.18149 153.8992\n Madsen                 139.2671 7.212203 77.85 124.90826 153.6259\n LCS Biancor            139.1110 7.212203 77.85 124.75213 153.4698\n SY  Ovation            138.6426 7.212203 77.85 124.28375 153.0014\n OR2090473              137.8229 7.212203 77.85 123.46407 152.1817\n Madsen / Eltan (50/50) 136.9642 7.212203 77.85 122.60536 151.3230\n UI-WSU Huffman         135.4810 7.212203 77.85 121.12213 149.8398\n Mary                   134.8564 7.212203 77.85 120.49762 149.2153\n Norwest Tandem         134.3490 7.212203 77.85 119.99020 148.7079\n Brundage               134.0758 7.212203 77.85 119.71697 148.4346\n IDO1004                132.5145 7.212203 77.85 118.15568 146.8733\n DAS004                 132.2413 7.212203 77.85 117.88245 146.6001\n Norwest Duet           132.0852 7.212203 77.85 117.72633 146.4440\n Eltan                  131.4606 7.212203 77.85 117.10181 145.8195\n LCS Artdeco            130.8361 7.212203 77.85 116.47729 145.1950\n UI Palouse             130.4848 7.212203 77.85 116.12600 144.8437\n LOR-978                130.4458 7.212203 77.85 116.08697 144.8046\n LCS Drive              128.7674 7.212203 77.85 114.40858 143.1262\n Stephens               127.1671 7.212203 77.85 112.80826 141.5259\n OR2100940              126.1523 7.212203 77.85 111.79342 140.5111\n UI Castle CLP          125.5277 7.212203 77.85 111.16891 139.8866\n WB1376 CLP             123.6932 7.212203 77.85 109.33439 138.0521\n LOR-833                122.7565 7.212203 77.85 108.39762 137.1153\n LOR-913                118.7752 7.212203 77.85 104.41633 133.1340\n WB 456                 118.4629 7.212203 77.85 104.10407 132.8217\n SY Assure              111.0468 7.212203 77.85  96.68794 125.4056\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\nThis table indicates the estimated marginal means (“emmeans”, sometimes called “least squares means”), the standard error (“SE”) of those means, the degrees of freedom and the upper and lower bounds of the 95% confidence interval. As an additional step, the emmeans were sorted from largest to smallest.\nAt this point, the analysis goals have been met: we know the estimated means for each treatment and their rankings.\nIf you want to run ANOVA, it can be done quite easily. By default, the Kenward-Rogers method of degrees of freedom approximation is used.\n\n\nThe Type I method is sometimes referred to as the “sequential” sum of squares, because it involves a process of adding terms to the model one at a time. Type I sum of squares is the default hypothesis testing method used by the anova() function.\n\nlme4nlme\n\n\n\nanova(model_rcbd_lmer, type = \"1\")\n\nType I Analysis of Variance Table with Satterthwaite's method\n        Sum Sq Mean Sq NumDF DenDF F value    Pr(&gt;F)    \nvariety  18354  447.65    41   123  2.4528 8.017e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(model_rcbd_lme, type = \"sequential\")\n\n            numDF denDF   F-value p-value\n(Intercept)     1   123 2514.1283  &lt;.0001\nvariety        41   123    2.4528   1e-04\n\n\n\n\n\n\n\n\n\n\n\nna.action = na.exclude\n\n\n\nYou may have noticed the final argument for na.action in the model statement:\nmodel_rcbd_lmer &lt;- lmer(yield_bu_a ~ variety + (1|block),\n                   data = var_trial, \n                   na.action = na.exclude)\nThe argument na.action = na.exclude provides instructions for how to handle missing data. na.exclude removes the missing data points before proceeding with the analysis. When any obervation-levels model outputs is generated (e.g. predictions, residuals), they are padded in the appropriate place to account for missing data. This is handy because it makes it easier to add those results to the original data set if so desired.\nSince there are no missing data, this step was not strictly necessary, but it’s a good habit to be in.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Randomized Complete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/factorial-design.html",
    "href": "chapters/factorial-design.html",
    "title": "5  RCBD Design with Several Crossed Factors",
    "section": "",
    "text": "5.1 Background\nFactorial design involves studying the impact of multiple factors simultaneously. Each factor can have multiple levels, and combinations of these levels form the experimental conditions. This design allows us to understand the main effects of individual factors and their interactions on the response variable. The statistical model for factorial design is: \\[y_{ij} = \\mu +  \\tau_i+ \\beta_j + \\tau_i\\beta_j + \\epsilon_{ij}\\] Where: \\(\\mu\\) = experiment mean, \\(\\tau\\) = effect of factor A, \\(\\beta\\) = effect of factor B, and \\(\\tau\\beta\\) = interaction effect of factor A and B.\nAssumptions of this model includes: independent and identically distributed error terms with a constant variance.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Factorial RCBD Design</span>"
    ]
  },
  {
    "objectID": "chapters/factorial-design.html#background",
    "href": "chapters/factorial-design.html#background",
    "title": "6  Factorial Design",
    "section": "",
    "text": "A note",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Factorial Design</span>"
    ]
  },
  {
    "objectID": "chapters/factorial-design.html#example-analysis",
    "href": "chapters/factorial-design.html#example-analysis",
    "title": "5  RCBD Design with Several Crossed Factors",
    "section": "5.2 Example Analysis",
    "text": "5.2 Example Analysis\nFirst step is to load the libraries required for the analysis:\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(broom.mixed); library(performance)\n\n\n\n\nlibrary(nlme); library(broom.mixed); library(emmeans)\nlibrary(dplyr); library(performance)\n\n\n\n\nNext, we will load the dataset named ‘cochran.factorial’ from the ‘agridat’ package. This data comprises a yield response of beans to different levels of manure (d), nitrogen (n), phosphorus The goal of this analysis is the estimate the effect on d, n, p, k, and their interactions on bean yield.\nNote, while importing the data, d, n, p, and k were converted into factor variables using the mutate() function from dplyr package. This helps in reducing the extra steps of converting each single variable to factor manually.\n\nlibrary(agridat)\ndata1 &lt;- agridat::cochran.factorial %&gt;% \n  mutate(d = as.factor(d),\n         n = as.factor(n),\n         p = as.factor(p),\n         k = as.factor(k))\n\n\nTable of variables in the data set\n\n\nblock\nblocking unit\n\n\nrep\nreplication unit\n\n\ntrt\ntreatment factor, 16 levels\n\n\nd\ndung treatment, 2 levels\n\n\nn\nnitrogen treatment, 2 levels\n\n\np\nphosphorus treatment, 2 levels\n\n\nk\npotassium treatment, 2 levels\n\n\nyield\nyield (lbs)\n\n\n\nThe objective of this example is evaluate the individual and interactive effect of “d”, “n”, “p”, and “k” treatments on yield.\n\n5.2.1 Data Integrity Checks\nVerify the class of variables, where rep, block, d, n, p, and k are supposed to be a factor/character and yield should be numeric/integer.\n\nstr(data1)\n\n'data.frame':   32 obs. of  8 variables:\n $ rep  : Factor w/ 2 levels \"R1\",\"R2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ block: Factor w/ 2 levels \"B1\",\"B2\": 1 1 1 1 1 1 1 1 2 2 ...\n $ trt  : Factor w/ 16 levels \"(1)\",\"d\",\"dk\",..: 15 10 2 14 5 6 9 11 8 12 ...\n $ yield: int  45 55 53 36 41 48 55 42 50 44 ...\n $ d    : Factor w/ 2 levels \"0\",\"1\": 2 2 1 2 1 1 1 2 1 2 ...\n $ n    : Factor w/ 2 levels \"0\",\"1\": 2 2 2 1 1 1 2 1 2 1 ...\n $ p    : Factor w/ 2 levels \"0\",\"1\": 1 2 2 1 2 1 1 2 1 2 ...\n $ k    : Factor w/ 2 levels \"0\",\"1\": 2 1 2 1 1 2 1 2 2 1 ...\n\n\nThis looks good.\nNext step is to inspect the independent variables and make sure the expected levels are present in the data.\n\ntable(data1$d, data1$n, data1$p, data1$k)\n\n, ,  = 0,  = 0\n\n   \n    0 1\n  0 2 2\n  1 2 2\n\n, ,  = 1,  = 0\n\n   \n    0 1\n  0 2 2\n  1 2 2\n\n, ,  = 0,  = 1\n\n   \n    0 1\n  0 2 2\n  1 2 2\n\n, ,  = 1,  = 1\n\n   \n    0 1\n  0 2 2\n  1 2 2\n\n\nThe design looks well balanced.\nLast step is to inspect the dependent variable to ensure its distribution follows the bell-shaped curve and no skewness is there.\n\n\n\n\n\n\n\n\n\nFigure 5.1: Histogram of the dependent variable.\n\n\n\n\n\nhist(data1$yield)\n\nThe range is roughly falling into the expected range. I didn’t observe any extreme observations (too high/low), indicating no issues with data. don’t see\n\n\n5.2.2 Model fitting\nModel fitting with R is exactly the same as shown in previous chapters: we need to include all effect, as well as the interaction, which is represented by using the colon indicator ‘:’. Therefore, model syntax is:\nyield ~ d + n + p + k + d:n + d:p + d:k + n:p + n:k + p:k + d:n:p:k\nwhich can be abbreviated as:\nyield ~ d*n*p*k\n\nlme4nlme\n\n\n\nmodel1_lmer &lt;- lmer(yield ~ d*n*p*k + (1|block),\n                   data = data1, \n                   na.action = na.exclude)\ntidy(model1_lmer)\n\n# A tibble: 18 × 8\n   effect   group    term           estimate std.error statistic    df   p.value\n   &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 fixed    &lt;NA&gt;     (Intercept)      49          3.70   13.2     16.0  4.91e-10\n 2 fixed    &lt;NA&gt;     d1               -9.5        5.24   -1.81    16.0  8.84e- 2\n 3 fixed    &lt;NA&gt;     n1                0.500      5.24    0.0955  16.0  9.25e- 1\n 4 fixed    &lt;NA&gt;     p1              -11.5        5.24   -2.20    16.0  4.31e- 2\n 5 fixed    &lt;NA&gt;     k1                1.00       5.24    0.191   16.0  8.51e- 1\n 6 fixed    &lt;NA&gt;     d1:n1            13.5        7.82    1.73    16.0  1.03e- 1\n 7 fixed    &lt;NA&gt;     d1:p1            15.5        7.82    1.98    16.0  6.49e- 2\n 8 fixed    &lt;NA&gt;     n1:p1             9.50       7.82    1.22    16.0  2.42e- 1\n 9 fixed    &lt;NA&gt;     d1:k1             4.00       7.82    0.512   16.0  6.16e- 1\n10 fixed    &lt;NA&gt;     n1:k1             0.500      7.82    0.0639  16.0  9.50e- 1\n11 fixed    &lt;NA&gt;     p1:k1             3.00       7.82    0.384   16.0  7.06e- 1\n12 fixed    &lt;NA&gt;     d1:n1:p1        -14.5       12.1    -1.19    16.0  2.50e- 1\n13 fixed    &lt;NA&gt;     d1:n1:k1        -17.0       12.1    -1.40    16.0  1.81e- 1\n14 fixed    &lt;NA&gt;     d1:p1:k1         -7.00      12.1    -0.576   16.0  5.72e- 1\n15 fixed    &lt;NA&gt;     n1:p1:k1         -4.50      12.1    -0.370   16.0  7.16e- 1\n16 fixed    &lt;NA&gt;     d1:n1:p1:k1      25.0       19.9     1.26    16.0  2.27e- 1\n17 ran_pars block    sd__(Intercep…    1.26      NA      NA       NA   NA       \n18 ran_pars Residual sd__Observati…    4.92      NA      NA       NA   NA       \n\n\n\n\n\nmodel2_lme &lt;- lme(yield ~ d*n*p*k,\n              random = ~ 1|block,\n              data = data1, \n              na.action = na.exclude)\ntidy(model2_lme)\n\n# A tibble: 18 × 8\n   effect   group    term           estimate std.error    df statistic   p.value\n   &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 fixed    &lt;NA&gt;     (Intercept)      49          4.79    15   10.2      3.66e-8\n 2 fixed    &lt;NA&gt;     d1               -9.5        6.77    15   -1.40     1.81e-1\n 3 fixed    &lt;NA&gt;     n1                0.500      6.77    15    0.0739   9.42e-1\n 4 fixed    &lt;NA&gt;     p1              -11.5        6.77    15   -1.70     1.10e-1\n 5 fixed    &lt;NA&gt;     k1                1.00       6.77    15    0.148    8.85e-1\n 6 fixed    &lt;NA&gt;     d1:n1            13.5       11.6     15    1.16     2.63e-1\n 7 fixed    &lt;NA&gt;     d1:p1            15.5       11.6     15    1.34     2.02e-1\n 8 fixed    &lt;NA&gt;     n1:p1             9.50      11.6     15    0.818    4.26e-1\n 9 fixed    &lt;NA&gt;     d1:k1             4.00      11.6     15    0.345    7.35e-1\n10 fixed    &lt;NA&gt;     n1:k1             0.500     11.6     15    0.0431   9.66e-1\n11 fixed    &lt;NA&gt;     p1:k1             3.00      11.6     15    0.258    8.00e-1\n12 fixed    &lt;NA&gt;     d1:n1:p1        -14.5       21.0     15   -0.690    5.01e-1\n13 fixed    &lt;NA&gt;     d1:n1:k1        -17.0       21.0     15   -0.809    4.31e-1\n14 fixed    &lt;NA&gt;     d1:p1:k1         -7.00      21.0     15   -0.333    7.44e-1\n15 fixed    &lt;NA&gt;     n1:p1:k1         -4.50      21.0     15   -0.214    8.33e-1\n16 fixed    &lt;NA&gt;     d1:n1:p1:k1      25.0       39.7     15    0.630    5.38e-1\n17 ran_pars block    sd_(Intercept)    3.28      NA       NA   NA       NA      \n18 ran_pars Residual sd_Observation    4.92      NA       NA   NA       NA      \n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nInstead of summary() function, we used tidy() function from ‘broom.mixed’ package to get a short summary output of the model.\n\n\n\n\n5.2.3 Check Model Assumptions\n\nlme4nlme\n\n\n\ncheck_model(model1_lmer, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\ncheck_model(model2_lme, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\nThe linearity and homogeneity of variance plots show no trend. The normal Q-Q plots for the overall residuals and for the random effects all fall nearly on a straight line so we can be satisfied with that.\n\n\n5.2.4 Inference\nWe can get an ANOVA table for the linear mixed model using the function anova(), which works for both lmer() and lme() models..\n\nlme4nlme\n\n\n\ncar::Anova(model1_lmer, type = 'III', test.statistic=\"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: yield\n                   F Df Df.res    Pr(&gt;F)    \n(Intercept) 175.2030  1 20.439 1.729e-11 ***\nd             3.2928  1 20.439   0.08429 .  \nn             0.0091  1 20.439   0.92484    \np             4.8252  1 20.439   0.03974 *  \nk             0.0365  1 20.439   0.85040    \nd:n           2.9812  1 25.421   0.09637 .  \nd:p           3.9300  1 25.421   0.05834 .  \nn:p           1.4763  1 25.421   0.23552    \nd:k           0.2617  1 25.421   0.61335    \nn:k           0.0041  1 25.421   0.94951    \np:k           0.1472  1 25.421   0.70440    \nd:n:p         1.4251  1 37.012   0.24016    \nd:n:k         1.9589  1 37.012   0.16996    \nd:p:k         0.3321  1 37.012   0.56789    \nn:p:k         0.1373  1 37.012   0.71313    \nd:n:p:k       1.5778  1 66.709   0.21346    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(model2_lme, type = \"marginal\")\n\n            numDF denDF   F-value p-value\n(Intercept)     1    15 104.83445  &lt;.0001\nd               1    15   1.97029  0.1808\nn               1    15   0.00546  0.9421\np               1    15   2.88720  0.1099\nk               1    15   0.02183  0.8845\nd:n             1    15   1.35278  0.2630\nd:p             1    15   1.78330  0.2017\nn:p             1    15   0.66990  0.4259\nd:k             1    15   0.11876  0.7352\nn:k             1    15   0.00186  0.9662\np:k             1    15   0.06680  0.7996\nd:n:p           1    15   0.47580  0.5009\nd:n:k           1    15   0.65401  0.4313\nd:p:k           1    15   0.11089  0.7437\nn:p:k           1    15   0.04583  0.8334\nd:n:p:k         1    15   0.39719  0.5380\n\n\n\n\n\nLet’s find estimates for some of the factors such as n, p, and n:k interaction. We will try the random intercept model first.\n\nlme4nlme\n\n\n\nemmeans(model1_lmer, specs = ~ n)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n n emmean   SE df lower.CL upper.CL\n 0   43.8 1.52 37     40.7     46.8\n 1   50.1 1.52 37     47.0     53.2\n\nResults are averaged over the levels of: d, p, k \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\nemmeans(model1_lmer, specs = ~ p)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n p emmean   SE df lower.CL upper.CL\n 0   47.4 1.52 37     44.3     50.5\n 1   46.5 1.52 37     43.4     49.6\n\nResults are averaged over the levels of: d, n, k \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\nemmeans(model1_lmer, specs = ~ n:k)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n n k emmean   SE   df lower.CL upper.CL\n 0 0   42.4 1.95 25.4     38.4     46.4\n 1 0   50.8 1.95 25.4     46.7     54.8\n 0 1   45.1 1.95 25.4     41.1     49.1\n 1 1   49.5 1.95 25.4     45.5     53.5\n\nResults are averaged over the levels of: d, p \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\nemmeans(model2_lme, specs = ~ n)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n n emmean   SE df lower.CL upper.CL\n 0   43.8 2.63  1     10.4     77.1\n 1   50.1 2.63  1     16.7     83.5\n\nResults are averaged over the levels of: d, p, k \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nemmeans(model2_lme, specs = ~ p)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n p emmean   SE df lower.CL upper.CL\n 0   47.4 2.63  1     14.0     80.8\n 1   46.5 2.63  1     13.1     79.9\n\nResults are averaged over the levels of: d, n, k \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nemmeans(model2_lme, specs = ~ n:k)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n n k emmean  SE df lower.CL upper.CL\n 0 0   42.4 2.9  1     5.50     79.2\n 1 0   50.8 2.9  1    13.88     87.6\n 0 1   45.1 2.9  1     8.25     82.0\n 1 1   49.5 2.9  1    12.63     86.4\n\nResults are averaged over the levels of: d, p \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\n\nUnbalanced factorial design",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Factorial RCBD Design</span>"
    ]
  },
  {
    "objectID": "chapters/factorial-design.html#model-fitting",
    "href": "chapters/factorial-design.html#model-fitting",
    "title": "6  Factorial Design",
    "section": "6.3 Model fitting",
    "text": "6.3 Model fitting\nModel fitting with R is exactly the same as shown in previous chapters: we need to include all effect, as well as the interaction, which is represented by using the colon indicator ‘:’. Therefore, model syntax is:\nyield ~ d + n + p + k + d:n + d:p + d:k + n:p + n:k + p:k + d:n:p:k\nwhich can be abbreviated as:\nyield ~ d*n*p*k\n\nlme4nlme\n\n\n\nmodel1 &lt;- lmer(yield ~ d*n*p*k + (1|block),\n                   data = data1, \n                   na.action = na.exclude)\n\nWarning in as_lmerModLT(model, devfun): Model may not have converged with 1\neigenvalue close to zero: 4.0e-09\n\nsummary(model1)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: yield ~ d * n * p * k + (1 | block)\n   Data: data1\n\nREML criterion at convergence: 107.5\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.1169 -0.5331  0.0000  0.5331  1.1169 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n block    (Intercept)  1.579   1.257   \n Residual             24.250   4.924   \nNumber of obs: 32, groups:  block, 2\n\nFixed effects:\n            Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)   49.000      3.702  16.000  13.236 4.91e-10 ***\nd1            -9.500      5.235  16.000  -1.815   0.0884 .  \nn1             0.500      5.235  16.000   0.096   0.9251    \np1           -11.500      5.235  16.000  -2.197   0.0431 *  \nk1             1.000      5.235  16.000   0.191   0.8509    \nd1:n1         13.500      7.819  16.000   1.727   0.1035    \nd1:p1         15.500      7.819  16.000   1.982   0.0649 .  \nn1:p1          9.500      7.819  16.000   1.215   0.2420    \nd1:k1          4.000      7.819  16.000   0.512   0.6159    \nn1:k1          0.500      7.819  16.000   0.064   0.9498    \np1:k1          3.000      7.819  16.000   0.384   0.7063    \nd1:n1:p1     -14.500     12.146  16.000  -1.194   0.2500    \nd1:n1:k1     -17.000     12.146  16.000  -1.400   0.1807    \nd1:p1:k1      -7.000     12.146  16.000  -0.576   0.5724    \nn1:p1:k1      -4.500     12.146  16.000  -0.370   0.7159    \nd1:n1:p1:k1   25.000     19.903  16.000   1.256   0.2271    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 16 &gt; 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\n\n\n\nmodel1 &lt;- lme(yield ~ d*n*p*k,\n                  random = ~ 1|block,\n                  data = data1, \n                  na.action = na.exclude)\nsummary(model1)\n\n\n\n\n\n6.3.1 Check Model Assumptions\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModel fit using lme()\n\n\n\nThis same model can be fitted by using lme() from the ‘nlme’ package as well.\n\nmodel2 &lt;- lme(yield ~ d*n*p*k,\n              random = ~1|block,\n                   data = data1, \n                   na.action = na.exclude)\n\nmodel2 \nanova(model2)\n\nThe results are same from both models with lmer() or lme().\n\n\n\nanova(model1)\n\nType III Analysis of Variance Table with Satterthwaite's method\n        Sum Sq Mean Sq NumDF DenDF F value   Pr(&gt;F)   \nd         2.00    2.00     1    16  0.0825 0.777658   \nn       325.12  325.12     1    16 13.4072 0.002107 **\np         6.12    6.12     1    16  0.2526 0.622113   \nk         4.50    4.50     1    16  0.1856 0.672379   \nd:n      32.00   32.00     1    16  1.3196 0.267550   \nd:p     242.00  242.00     1    16  9.9794 0.006079 **\nn:p      78.12   78.12     1    16  3.2216 0.091583 . \nd:k       6.12    6.12     1    16  0.2526 0.622113   \nn:k      32.00   32.00     1    16  1.3196 0.267550   \np:k      24.50   24.50     1    16  1.0103 0.329789   \nd:n:p     2.00    2.00     1    16  0.0825 0.777658   \nd:n:k    10.13   10.13     1    16  0.4175 0.527334   \nd:p:k    15.13   15.13     1    16  0.6237 0.441219   \nn:p:k    32.00   32.00     1    16  1.3196 0.267550   \nd:n:p:k  38.26   38.26     1    16  1.5778 0.227113   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n6.3.2 Check Model Assumptions\nthe residuals seem to fit the assumption required for normality.\n\ncheck_model(model1)\n\n\n\n\n\n\n\n\n\n\n6.3.3 Inference\n\nm1 &lt;- emmeans(model1, specs = ~ d|k)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nm1\n\nk = 0:\n d emmean   SE   df lower.CL upper.CL\n 0   45.9 1.95 25.4     41.9     49.9\n 1   47.2 1.95 25.4     43.2     51.3\n\nk = 1:\n d emmean   SE   df lower.CL upper.CL\n 0   47.5 1.95 25.4     43.5     51.5\n 1   47.1 1.95 25.4     43.1     51.1\n\nResults are averaged over the levels of: n, p \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\npairs(m1)\n\nk = 0:\n contrast estimate   SE df t.ratio p.value\n d0 - d1    -1.375 2.46 16  -0.558  0.5843\n\nk = 1:\n contrast estimate   SE df t.ratio p.value\n d0 - d1     0.375 2.46 16   0.152  0.8809\n\nResults are averaged over the levels of: n, p \nDegrees-of-freedom method: kenward-roger \n\n\n\nm2 &lt;- emmeans(model1, specs = ~ n)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nm2\n\n n emmean   SE df lower.CL upper.CL\n 0   43.8 1.52 37     40.7     46.8\n 1   50.1 1.52 37     47.0     53.2\n\nResults are averaged over the levels of: d, p, k \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\npairs(m2)\n\n contrast estimate   SE df t.ratio p.value\n n0 - n1     -6.38 1.74 16  -3.662  0.0021\n\nResults are averaged over the levels of: d, p, k \nDegrees-of-freedom method: kenward-roger \n\n\n\nUnbalanced factorial design\n\n\n\n6.3.4 Data integrity checks\n\n\n6.3.5 Model Building\n\n\nRecall the model:\n\\[                \\]\nHere is the R syntax for that statistical model:\n\nlme4nlme\n\n\n\n\n\n\n\n\n\n\n\n6.3.6 Flotsam & Jetsam",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Factorial Design</span>"
    ]
  },
  {
    "objectID": "chapters/split-plot-design.html#analysis-examples",
    "href": "chapters/split-plot-design.html#analysis-examples",
    "title": "6  Split Plot Design",
    "section": "6.2 Analysis Examples",
    "text": "6.2 Analysis Examples\nLoad required libraries\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(performance); library(ggplot2)\nlibrary(broom.mixed)\n\n\n\n\nlibrary(nlme); library(performance); library(emmeans)\nlibrary(dplyr); library(ggplot2); library(broom.mixed)\n\n\n\n\n\n6.2.1 Example model for CRD Split Plot Designs\nLet’s import height data. It is located here if you want to download it yourself (recommended).\nThe data (Height data) for this example involves a CRD split plot designed experiment. Treatments are 4 Timings (times) and 8 managements (manage). The whole plots are times and management represents subplot and 3 replications.\n\nheight_data &lt;- readxl::read_excel(here::here(\"data\", \"height_data.xlsx\"))\n\n\nTable of variables in the oat data set\n\n\nrep\nreplication unit\n\n\ntime\nMain plot with 4 levels\n\n\nManage\nSplit-plot with 8 levels\n\n\nsample\ntwo sampling units per each rep\n\n\nheight\nyield (lbs per acre)\n\n\n\n\n6.2.1.1 Data integrity checks\n\nRun a cross tabulation using table() to check the arrangement of whole-plots and sub-plots.\n\n\ntable(height_data$time, height_data$manage)\n\n    \n     M1 M2 M3 M4 M5 M6 M7 M8\n  T1  6  6  6  6  6  6  6  6\n  T2  6  6  6  6  6  6  6  6\n  T3  6  6  6  6  6  6  6  6\n  T4  6  6  6  6  6  6  6  6\n\n\nThe levels of whole plots and subplots are balanced.\n\nLook at structure of the data using str(), this will help in identifying class of the variable. In this data set, class of the whole-plot, sub-plot, and block should be factor/character and response variable (height) should be numeric.\n\n\nstr(height_data)\n\ntibble [192 × 5] (S3: tbl_df/tbl/data.frame)\n $ time  : chr [1:192] \"T1\" \"T1\" \"T1\" \"T1\" ...\n $ manage: chr [1:192] \"M1\" \"M2\" \"M3\" \"M4\" ...\n $ rep   : chr [1:192] \"R1\" \"R1\" \"R1\" \"R1\" ...\n $ sample: chr [1:192] \"S1\" \"S1\" \"S1\" \"S1\" ...\n $ height: num [1:192] 104.5 92.3 96.8 94.7 105.7 ...\n\n\nThe ‘time’, ‘manage’, and ‘rep’ are character and variable height is numeric. The structure of the data is in format as needed. - Check the number of missing values in each column.\n\napply(height_data, 2, function(x) sum(is.na(x)))\n\n  time manage    rep sample height \n     0      0      0      0      0 \n\n\n\nExploratory boxplot to look at the height observations at different times with variable managements.\n\n\nggplot(data = height_data, aes(y = height, x = time)) +\n  geom_boxplot(aes(fill = manage), alpha = 0.6)\n\n\n\n\n\n\n\n\n\n\n6.2.1.2 Model building\n\n\nRecall the model:\n\\[y_{ijk} = \\mu + \\gamma_i +  \\alpha_j + \\beta_k + (\\alpha_j\\beta_k) + \\epsilon_{ijk}\\]\nFor this model, \\(\\gamma\\) = block/rep effect (random), \\(\\alpha\\) = main effect of whole plot (fixed), \\(\\beta\\) = main effect of subplot (fixed), \\(\\alpha\\)\\(\\beta\\) = interaction between factors A and B (fixed).\nIn order to test the main effects of the treatments as well as the interaction between two factors, we can specify that in model as: time + manage + time:manage or time*manage.\nWhen dealing with split plot design across reps or blocks, the random effects needs to be nested hierarchically, from largest unit to smallest. For example, in this example the random effects will be designated as (1 | rep/time). This implies that random intercepts vary with rep and time within rep.\n\nlme4nlme\n\n\n\nmodel_lmer &lt;- lmer(height ~ time*manage + (1|rep/time), data = height_data)\ntidy(model_lmer)\n\n# A tibble: 35 × 8\n   effect group term        estimate std.error statistic     df    p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;  &lt;dbl&gt;      &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)   108.        3.19    33.9     4.38 0.00000181\n 2 fixed  &lt;NA&gt;  timeT2          3.18      2.63     1.21  104.   0.229     \n 3 fixed  &lt;NA&gt;  timeT3         -2.25      2.63    -0.855 104.   0.394     \n 4 fixed  &lt;NA&gt;  timeT4          1.28      2.63     0.488 104.   0.627     \n 5 fixed  &lt;NA&gt;  manageM2       -4.45      2.55    -1.74  152.   0.0832    \n 6 fixed  &lt;NA&gt;  manageM3       -5.30      2.55    -2.08  152.   0.0395    \n 7 fixed  &lt;NA&gt;  manageM4       -6.18      2.55    -2.42  152.   0.0166    \n 8 fixed  &lt;NA&gt;  manageM5       -5.02      2.55    -1.97  152.   0.0511    \n 9 fixed  &lt;NA&gt;  manageM6       -3.42      2.55    -1.34  152.   0.183     \n10 fixed  &lt;NA&gt;  manageM7       -9.75      2.55    -3.82  152.   0.000193  \n# ℹ 25 more rows\n\n\n\n\n\nmodel_lme &lt;-lme(height ~ time*manage,\n             random = ~ 1|rep/time, data = height_data)\n\ntidy(model_lme)\n\nWarning in tidy.lme(model_lme): ran_pars not yet implemented for multiple\nlevels of nesting\n\n\n# A tibble: 32 × 7\n   effect term        estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  (Intercept)   108.        3.19   152    33.9   9.59e-73\n 2 fixed  timeT2          3.18      2.63     6     1.21  2.72e- 1\n 3 fixed  timeT3         -2.25      2.63     6    -0.855 4.25e- 1\n 4 fixed  timeT4          1.28      2.63     6     0.488 6.43e- 1\n 5 fixed  manageM2       -4.45      2.55   152    -1.74  8.32e- 2\n 6 fixed  manageM3       -5.30      2.55   152    -2.08  3.95e- 2\n 7 fixed  manageM4       -6.18      2.55   152    -2.42  1.66e- 2\n 8 fixed  manageM5       -5.02      2.55   152    -1.97  5.11e- 2\n 9 fixed  manageM6       -3.42      2.55   152    -1.34  1.83e- 1\n10 fixed  manageM7       -9.75      2.55   152    -3.82  1.93e- 4\n# ℹ 22 more rows\n\n\n\n\n\n\n\n6.2.1.3 Check Model Assumptions\nBefore interpreting the model we should investigate the assumptions of the model to ensure any conclusions we draw are valid. There are assumptions that we can check are 1. Homogeneity (equal variance) 2. normality of residuals 3. values with high leverage.\nWe will use check_model() function from ‘performance’ package. The plots generated using this code gives a visual check of various assumptions including normality of residuals, normality of random effects, heteroscedasticity, homogeneity of variance, and multicollinearity.\n\nlme4nlme\n\n\n\ncheck_model(model_lmer, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\ncheck_model(model_lme, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\nIn this case the residuals fit the assumptions of the model well.\n\n\n6.2.1.4 Inference\nThe anova() function prints the the rows of analysis of variance table for whole-plot, sub-plot, and their interactions. We observed a significant effect of manage factor only.\n\nlme4nlme\n\n\n\ncar::Anova(model_lmer, type = 'III', test.statistics = \"F\")\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: height\n                Chisq Df Pr(&gt;Chisq)    \n(Intercept) 1148.5658  1    &lt; 2e-16 ***\ntime           4.5139  3    0.21105    \nmanage        15.9090  7    0.02596 *  \ntime:manage   24.3349 21    0.27711    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(model_lme, type = \"marginal\")\n\n            numDF denDF   F-value p-value\n(Intercept)     1   152 1148.6202  &lt;.0001\ntime            3     6    1.5046  0.3061\nmanage          7   152    2.2727  0.0315\ntime:manage    21   152    1.1588  0.2955\n\n\n\n\n\nWe can further compute estimated marginal means for each fixed effect and interaction effect can be obtained using emmeans().\n\nlme4nlme\n\n\n\nm1 &lt;- emmeans(model_lmer, ~ time)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nm1\n\n time emmean  SE   df lower.CL upper.CL\n T1      103 2.7 2.27     92.8      114\n T2      106 2.7 2.27     95.5      116\n T3      100 2.7 2.27     89.8      111\n T4      104 2.7 2.27     94.0      115\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\nm2 &lt;- emmeans(model_lme, ~ time)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nm2\n\n time emmean  SE df lower.CL upper.CL\n T1      103 2.7  2     91.6      115\n T2      106 2.7  2     94.2      118\n T3      100 2.7  2     88.6      112\n T4      104 2.7  2     92.8      116\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\nFurther, a pairwise comparison or contrasts can be analyzed using estimated means. In this model, ‘time’ factor has 4 levels. We can use pairs() function to evaluate pairwise comparison among different ‘time’ levels.\nHere’s a example using pairs() function to compare difference in height among different time points.\n\nlme4nlme\n\n\n\npairs(m1)\n\n contrast estimate   SE df t.ratio p.value\n T1 - T2     -2.68 1.11  6  -2.426  0.1719\n T1 - T3      2.95 1.11  6   2.665  0.1287\n T1 - T4     -1.21 1.11  6  -1.091  0.7072\n T2 - T3      5.63 1.11  6   5.091  0.0089\n T2 - T4      1.48 1.11  6   1.334  0.5767\n T3 - T4     -4.15 1.11  6  -3.756  0.0358\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: kenward-roger \nP value adjustment: tukey method for comparing a family of 4 estimates \n\n\n\n\n\npairs(m2)\n\n contrast estimate   SE df t.ratio p.value\n T1 - T2     -2.68 1.11  6  -2.426  0.1719\n T1 - T3      2.95 1.11  6   2.665  0.1287\n T1 - T4     -1.21 1.11  6  -1.091  0.7072\n T2 - T3      5.63 1.11  6   5.091  0.0089\n T2 - T4      1.48 1.11  6   1.334  0.5767\n T3 - T4     -4.15 1.11  6  -3.756  0.0358\n\nResults are averaged over the levels of: manage \nDegrees-of-freedom method: containment \nP value adjustment: tukey method for comparing a family of 4 estimates \n\n\n\n\n\n\n\n\n\n\n\npairs()\n\n\n\nThe default p-value adjustment in pairs() function is “tukey”, other options include “holm”, “hochberg”, “BH”, “BY”, and “none”. In addition, it’s okay to use this function when independent variable has few factors (2-4). For variable with multiple levels, it’s better to use custom contrasts. For more information on custom contrasts please check this link.\n\n\n\n\n\n6.2.2 Example model for RCBD Split Plot Designs\nThe oats data used in this example is from the MASS package. The design is RCBD split plot with 6 blocks, 3 main plots and 4 subplots. The primary outcome variable was oat yield.\n\nTable of variables in the oat data set\n\n\nblock\nblocking unit\n\n\nVariety (V)\nMain plot with 3 levels\n\n\nNitrogen (N)\nSplit-plot with 4 levels\n\n\nyield (Y)\nyield (lbs per acre)\n\n\n\nThe objective of this analysis is to study the impact of different varieties and nitrogen application rates on oat yields.\nTo fully examine the yield of oats due to varieties and nutrient levels in a split plots. We will need to statistically analyse and compare the effects of varieties (main plot), nutrient levels (subplot), their interaction.\n\nlibrary(MASS)\ndata(\"oats\")\nhead(oats,5)\n\n  B           V      N   Y\n1 I     Victory 0.0cwt 111\n2 I     Victory 0.2cwt 130\n3 I     Victory 0.4cwt 157\n4 I     Victory 0.6cwt 174\n5 I Golden.rain 0.0cwt 117\n\n\n\n6.2.2.1 Data integrity checks\nLet’s look at the structure of the data. The “B”, “V”, and “N” needs to be ‘factor’ and “Y” should be numeric.\n\nstr(oats)\n\n'data.frame':   72 obs. of  4 variables:\n $ B: Factor w/ 6 levels \"I\",\"II\",\"III\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ V: Factor w/ 3 levels \"Golden.rain\",..: 3 3 3 3 1 1 1 1 2 2 ...\n $ N: Factor w/ 4 levels \"0.0cwt\",\"0.2cwt\",..: 1 2 3 4 1 2 3 4 1 2 ...\n $ Y: int  111 130 157 174 117 114 161 141 105 140 ...\n\n\nNext, run the table() command to verify the levels of main-plots and sub-plots.\n\ntable(oats$V, oats$N)\n\n             \n              0.0cwt 0.2cwt 0.4cwt 0.6cwt\n  Golden.rain      6      6      6      6\n  Marvellous       6      6      6      6\n  Victory          6      6      6      6\n\n\n\n\n6.2.2.2 Model Building the Model\nWe are evaluating the effect of V, N and their interaction on yield. The 1|B/V implies that random intercepts vary with block and V within each block.\n\n\nRecall the model:\n\\[y_{ijk} = \\mu + \\rho_j +  \\alpha_i + \\beta_k + (\\alpha_i\\beta_k) + \\epsilon_{ij} + \\delta_{ijk}\\] Where:\n\\(\\mu\\) = overall experimental mean, \\(\\rho\\) = block effect (random), \\(\\alpha\\) = main effect of whole plot (fixed), \\(\\beta\\) = main effect of subplot (fixed), \\(\\alpha\\)\\(\\beta\\) = interaction between factors A and B, \\(\\epsilon_{ij}\\) = whole plot error, \\(\\delta_{ijk}\\) = subplot error.\n\nlme4nlme\n\n\n\nmodel2_lmer &lt;- lmer(Y ~  V + N + V:N + (1|B/V), \n                   data = oats, \n                   na.action = na.exclude)\ntidy(model2_lmer)\n\n# A tibble: 15 × 8\n   effect   group    term            estimate std.error statistic    df  p.value\n   &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed    &lt;NA&gt;     (Intercept)       80.0        9.11    8.78    16.1  1.55e-7\n 2 fixed    &lt;NA&gt;     VMarvellous        6.67       9.72    0.686   30.2  4.98e-1\n 3 fixed    &lt;NA&gt;     VVictory          -8.50       9.72   -0.875   30.2  3.89e-1\n 4 fixed    &lt;NA&gt;     N0.2cwt           18.5        7.68    2.41    45.0  2.02e-2\n 5 fixed    &lt;NA&gt;     N0.4cwt           34.7        7.68    4.51    45.0  4.58e-5\n 6 fixed    &lt;NA&gt;     N0.6cwt           44.8        7.68    5.84    45.0  5.48e-7\n 7 fixed    &lt;NA&gt;     VMarvellous:N0…    3.33      10.9     0.307   45.0  7.60e-1\n 8 fixed    &lt;NA&gt;     VVictory:N0.2c…   -0.333     10.9    -0.0307  45.0  9.76e-1\n 9 fixed    &lt;NA&gt;     VMarvellous:N0…   -4.17      10.9    -0.383   45.0  7.03e-1\n10 fixed    &lt;NA&gt;     VVictory:N0.4c…    4.67      10.9     0.430   45.0  6.70e-1\n11 fixed    &lt;NA&gt;     VMarvellous:N0…   -4.67      10.9    -0.430   45.0  6.70e-1\n12 fixed    &lt;NA&gt;     VVictory:N0.6c…    2.17      10.9     0.199   45.0  8.43e-1\n13 ran_pars V:B      sd__(Intercept)   10.3       NA      NA       NA   NA      \n14 ran_pars B        sd__(Intercept)   14.6       NA      NA       NA   NA      \n15 ran_pars Residual sd__Observation   13.3       NA      NA       NA   NA      \n\n\n\n\n\nmodel2_lme &lt;- lme(Y ~  V + N + V:N ,\n                  random = ~1|B/V,\n                  data = oats, \n                  na.action = na.exclude)\ntidy(model2_lme)\n\nWarning in tidy.lme(model2_lme): ran_pars not yet implemented for multiple\nlevels of nesting\n\n\n# A tibble: 12 × 7\n   effect term                estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt;                  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  (Intercept)           80          9.11    45    8.78   2.56e-11\n 2 fixed  VMarvellous            6.67       9.72    10    0.686  5.08e- 1\n 3 fixed  VVictory              -8.50       9.72    10   -0.875  4.02e- 1\n 4 fixed  N0.2cwt               18.5        7.68    45    2.41   2.02e- 2\n 5 fixed  N0.4cwt               34.7        7.68    45    4.51   4.58e- 5\n 6 fixed  N0.6cwt               44.8        7.68    45    5.84   5.48e- 7\n 7 fixed  VMarvellous:N0.2cwt    3.33      10.9     45    0.307  7.60e- 1\n 8 fixed  VVictory:N0.2cwt      -0.333     10.9     45   -0.0307 9.76e- 1\n 9 fixed  VMarvellous:N0.4cwt   -4.17      10.9     45   -0.383  7.03e- 1\n10 fixed  VVictory:N0.4cwt       4.67      10.9     45    0.430  6.70e- 1\n11 fixed  VMarvellous:N0.6cwt   -4.67      10.9     45   -0.430  6.70e- 1\n12 fixed  VVictory:N0.6cwt       2.17      10.9     45    0.199  8.43e- 1\n\n\n\n\n\n\n\n6.2.2.3 Check Model Assumptions\nAs shown in example 1, We need to verify the normality of residuals and homogeneous variance. Here we are using the check_model() function from the performance package.\n\nlme4nlme\n\n\n\ncheck_model(model2_lmer, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\ncheck_model(model2_lme, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\n\n\n6.2.2.4 Inference\nWe can evaluate the model for the analysis of variance, for V, N and their interaction effect.\n\nlme4nlme\n\n\n\ncar::Anova(model2_lmer, type = \"III\", test.statistics = \"F\")\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: Y\n              Chisq Df Pr(&gt;Chisq)    \n(Intercept) 77.1664  1  &lt; 2.2e-16 ***\nV            2.4491  2     0.2939    \nN           39.0683  3  1.679e-08 ***\nV:N          1.8169  6     0.9357    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(model2_lme, type = \"marginal\")\n\n            numDF denDF  F-value p-value\n(Intercept)     1    45 77.16729  &lt;.0001\nV               2    10  1.22454  0.3344\nN               3    45 13.02273  &lt;.0001\nV:N             6    45  0.30282  0.9322\n\n\n\n\n\nNext, we can estimate marginal means for V, N, or their interaction (V*N) effect.\n\nlme4nlme\n\n\n\nemm1 &lt;- emmeans(model2_lmer, ~ V *N) \nemm1\n\n V           N      emmean   SE   df lower.CL upper.CL\n Golden.rain 0.0cwt   80.0 9.11 16.1     60.7     99.3\n Marvellous  0.0cwt   86.7 9.11 16.1     67.4    106.0\n Victory     0.0cwt   71.5 9.11 16.1     52.2     90.8\n Golden.rain 0.2cwt   98.5 9.11 16.1     79.2    117.8\n Marvellous  0.2cwt  108.5 9.11 16.1     89.2    127.8\n Victory     0.2cwt   89.7 9.11 16.1     70.4    109.0\n Golden.rain 0.4cwt  114.7 9.11 16.1     95.4    134.0\n Marvellous  0.4cwt  117.2 9.11 16.1     97.9    136.5\n Victory     0.4cwt  110.8 9.11 16.1     91.5    130.1\n Golden.rain 0.6cwt  124.8 9.11 16.1    105.5    144.1\n Marvellous  0.6cwt  126.8 9.11 16.1    107.5    146.1\n Victory     0.6cwt  118.5 9.11 16.1     99.2    137.8\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\nemm1 &lt;- emmeans(model2_lme, ~ V *N) \nemm1\n\n V           N      emmean   SE df lower.CL upper.CL\n Golden.rain 0.0cwt   80.0 9.11  5     56.6    103.4\n Marvellous  0.0cwt   86.7 9.11  5     63.3    110.1\n Victory     0.0cwt   71.5 9.11  5     48.1     94.9\n Golden.rain 0.2cwt   98.5 9.11  5     75.1    121.9\n Marvellous  0.2cwt  108.5 9.11  5     85.1    131.9\n Victory     0.2cwt   89.7 9.11  5     66.3    113.1\n Golden.rain 0.4cwt  114.7 9.11  5     91.3    138.1\n Marvellous  0.4cwt  117.2 9.11  5     93.8    140.6\n Victory     0.4cwt  110.8 9.11  5     87.4    134.2\n Golden.rain 0.6cwt  124.8 9.11  5    101.4    148.2\n Marvellous  0.6cwt  126.8 9.11  5    103.4    150.2\n Victory     0.6cwt  118.5 9.11  5     95.1    141.9\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\nIn the next chapter we will continue with extension of split plot design called split-split plot design.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html",
    "href": "chapters/incomplete-block-design.html",
    "title": "9  Incomplete Block Design",
    "section": "",
    "text": "9.1 Background\nThe block design in Chapter 4 was complete, meaning that every block contained all the treatments. In practice, it may not be possible to have too many treatments in each block. Sometimes, there are also situations where it is advised to not have many treatments in each block.\nIn such cases, incomplete block designs are used where we have to decide what subset of treatments to be used in an individual block. This will work well if we enough blocks. However, if we only have small number of blocks, there would be the risk that certain quantities are not estimable anymore.\nIncomplete block designs are grouped into balanced lattice design and partially balanced (or alpha-lattice) designs.\nTo avoid having a disconnected design, a balanced incomplete block design can be used\nThe statistical model for balanced incomplete block design is:\n\\[y_{ij} = \\mu + \\alpha_i + \\beta_j + \\epsilon_{ij}\\] Where:\n\\(\\mu\\) = overall experimental mean \\(\\alpha\\) = treatment effects (fixed) \\(\\beta\\) = block effects (random) \\(\\epsilon\\) = error terms\n\\[ \\epsilon \\sim N(0, \\sigma)\\]\n\\[ \\beta \\sim N(0, \\sigma_b)\\] There are few key points that we need to keep in mind while designing incomplete block designs:\nAn excellent description of incomplete block design is provided in ANOVA and Mixed Models by Lukas Meier.\nThe balanced incomplete block designs are guided by strict principles and guidelines including: the number of treatments must be a perfect square (e.g. 25, 36, and so on); number of replicates must be equal to no. of blocks +1;",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html#background",
    "href": "chapters/incomplete-block-design.html#background",
    "title": "9  Incomplete Block Design",
    "section": "",
    "text": "A drawback of this design is that block effect and treatment effects are confounded.\nTo eliminate the block effects, better compare treatments within a block.\nNo treatment should appear twice in any block as they contributes nothing to within block comparisons.\n\n\n\n\n\n\n\n\n\nA note\n\n\n\nBecause the blocks are incomplete, the Type I and Type III sums of squares will be different. That is, the missing treatments in each block represent missing observations (but not missing ‘at random’).",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html#example-analysis",
    "href": "chapters/incomplete-block-design.html#example-analysis",
    "title": "9  Incomplete Block Design",
    "section": "9.2 Example Analysis",
    "text": "9.2 Example Analysis\nWe will demonstrate an example data set designed in a balanced incomplete block design. First, load the libraries required for analysis and estimation.\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(broom.mixed); library(performance)\n\n\n\n\nlibrary(nlme); library(broom.mixed); library(emmeans)\nlibrary(dplyr); library(performance)\n\n\n\n\nThe data used for this example analysis was extracted from the agridat package. This example is comprised of soybean balanced incomplete block experiment.\n\ndat &lt;- agridat::weiss.incblock\n\n\nTable of variables in the data set\n\n\nblock\nblocking unit\n\n\ngen\ngenotype (variety) factor\n\n\nrow\nrow position for each plot\n\n\ncol\ncolumn position for each plot\n\n\nyield\ngrain yield in bu/ac\n\n\n\n\n\n\n\n\n\n\n\n\n\n9.2.1 Data integrity checks\nWe will start inspecting the data set firstly by looking at the class of variables:\n\nstr(dat)\n\n'data.frame':   186 obs. of  5 variables:\n $ block: Factor w/ 31 levels \"B01\",\"B02\",\"B03\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ gen  : Factor w/ 31 levels \"G01\",\"G02\",\"G03\",..: 24 15 20 18 20 5 22 1 9 14 ...\n $ yield: num  29.8 24.2 30.5 20 35.2 25 23.6 23.6 29.3 25.5 ...\n $ row  : int  42 36 30 24 18 12 6 42 36 30 ...\n $ col  : int  1 1 1 1 1 1 1 2 2 2 ...\n\n\nThe variables we need for the model are block, gen and yield. The block and gen are classified as factor variables and yield is numeric. Therefore, we don’t need to change class of any of the required variables.\nNext, let’s check the independent variables. We can look at this by running a cross tabulations among block and gen factors.\n\ntable(dat$gen, dat$block)\n\n     \n      B01 B02 B03 B04 B05 B06 B07 B08 B09 B10 B11 B12 B13 B14 B15 B16 B17 B18\n  G01   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   0   1   1\n  G02   0   0   0   0   0   0   1   1   0   0   0   0   0   0   0   1   0   0\n  G03   0   0   1   0   0   0   0   1   1   1   0   0   1   0   0   0   0   0\n  G04   0   0   0   1   0   0   0   1   0   0   1   0   0   0   0   0   0   0\n  G05   0   0   0   0   1   1   0   1   0   0   0   0   0   1   1   0   0   0\n  G06   0   0   0   0   0   0   0   0   0   1   0   0   0   1   0   0   0   0\n  G07   0   0   1   1   0   0   1   0   0   0   0   0   0   0   0   0   0   0\n  G08   0   0   0   0   0   1   0   0   0   0   0   0   1   0   0   0   1   0\n  G09   0   0   0   0   0   0   0   0   1   0   0   0   0   0   1   0   0   0\n  G10   0   0   0   0   1   0   0   0   0   0   1   0   0   0   0   1   0   1\n  G11   0   1   1   0   0   1   0   0   0   0   1   0   0   0   0   0   0   0\n  G12   0   1   0   0   0   0   1   0   0   0   0   0   0   1   0   0   0   0\n  G13   0   1   0   0   0   0   0   0   0   0   0   0   1   0   1   1   0   0\n  G14   0   1   0   0   0   0   0   0   0   1   0   0   0   0   0   0   0   1\n  G15   0   1   0   1   1   0   0   0   1   0   0   0   0   0   0   0   1   0\n  G16   0   0   0   0   0   0   0   0   1   0   0   1   0   0   0   1   0   0\n  G17   0   0   0   0   0   0   1   0   0   1   1   1   0   0   1   0   1   0\n  G18   0   0   0   1   0   0   0   0   0   0   0   1   1   1   0   0   0   1\n  G19   0   0   0   0   0   1   0   0   0   0   0   1   0   0   0   0   0   0\n  G20   0   0   1   0   1   0   0   0   0   0   0   1   0   0   0   0   0   0\n  G21   1   0   0   1   0   0   0   0   0   0   0   0   0   0   1   0   0   0\n  G22   1   0   0   0   0   1   1   0   1   0   0   0   0   0   0   0   0   1\n  G23   1   0   0   0   0   0   0   0   0   0   1   0   1   0   0   0   0   0\n  G24   1   0   1   0   0   0   0   0   0   0   0   0   0   1   0   1   1   0\n  G25   1   0   0   0   1   0   0   0   0   1   0   0   0   0   0   0   0   0\n  G26   1   1   0   0   0   0   0   1   0   0   0   1   0   0   0   0   0   0\n  G27   0   0   0   0   1   0   1   0   0   0   0   0   1   0   0   0   0   0\n  G28   0   0   1   0   0   0   0   0   0   0   0   0   0   0   1   0   0   1\n  G29   0   0   0   1   0   1   0   0   0   1   0   0   0   0   0   1   0   0\n  G30   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   0\n  G31   0   0   0   0   0   0   0   0   1   0   1   0   0   1   0   0   0   0\n     \n      B19 B20 B21 B22 B23 B24 B25 B26 B27 B28 B29 B30 B31\n  G01   1   0   0   0   0   0   0   0   0   0   1   1   0\n  G02   0   1   0   0   0   0   0   0   1   1   0   0   0\n  G03   0   0   0   0   1   0   0   0   0   0   0   0   0\n  G04   0   0   1   0   0   0   1   0   0   0   0   0   1\n  G05   0   0   0   0   0   1   0   0   0   0   0   0   0\n  G06   1   1   0   1   0   0   0   0   0   0   0   0   1\n  G07   0   0   0   1   0   1   0   0   0   0   1   0   0\n  G08   0   0   1   1   0   0   0   0   0   1   0   0   0\n  G09   0   0   0   1   0   0   1   0   1   0   0   1   0\n  G10   0   0   0   1   1   0   0   0   0   0   0   0   0\n  G11   1   0   0   0   0   0   0   0   1   0   0   0   0\n  G12   0   0   1   0   1   0   0   0   0   0   0   1   0\n  G13   0   0   0   0   0   0   0   0   0   0   1   0   1\n  G14   0   0   0   0   0   1   1   0   0   1   0   0   0\n  G15   0   1   0   0   0   0   0   0   0   0   0   0   0\n  G16   1   0   1   0   0   1   0   0   0   0   0   0   0\n  G17   0   0   0   0   0   0   0   0   0   0   0   0   0\n  G18   0   0   0   0   0   0   0   0   1   0   0   0   0\n  G19   0   1   0   0   1   0   1   0   0   0   1   0   0\n  G20   0   0   0   0   0   0   0   0   0   1   0   1   1\n  G21   1   0   0   0   1   0   0   0   0   1   0   0   0\n  G22   0   0   0   0   0   0   0   0   0   0   0   0   1\n  G23   0   1   0   0   0   1   0   0   0   0   0   1   0\n  G24   0   0   0   0   0   0   1   0   0   0   0   0   0\n  G25   0   0   1   0   0   0   0   0   1   0   1   0   0\n  G26   0   0   0   1   0   0   0   1   0   0   0   0   0\n  G27   1   0   0   0   0   0   1   1   0   0   0   0   0\n  G28   0   1   1   0   0   0   0   1   0   0   0   0   0\n  G29   0   0   0   0   0   0   0   1   0   0   0   1   0\n  G30   0   0   0   0   1   1   0   1   1   0   0   0   1\n  G31   0   0   0   0   0   0   0   1   0   1   1   0   0\n\n\nThere are 31 varieties (gen) and it is perfectly balanced, with exactly one observation per treatment per block.\nWe can calculate the sum of missing values in variables in this data set to evaluate the extent of missing values in different variables\n\napply(dat, 2, function(x) sum(is.na(x)))\n\nblock   gen yield   row   col \n    0     0     0     0     0 \n\n\nWe observed no missing data!\nLast, let’s plot a histogram of the dependent variable. This is a quick check before analysis to see if there is any strong deviation in values.\n\n\n\n\n\n\n\n\n\nFigure 9.1: Histogram of the dependent variable.\n\n\n\n\n\nhist(dat$yield, main = \"\", xlab = \"yield\")\n\nResponse variable values fall within expected range, with few extreme values on right tail. This data set is ready for analysis!\n\n\n9.2.2 Model Building\nWe will be evaluating the response of yield as affected by gen (fixed effect) and block (random effect).\n\n\nPlease note that incomplete block effect can be analyzed as a fixed (intra-block analysis) or a random (inter-block analysis) effect. When we consider block as a random effect, the mean values of a block also contain information about the treatment effects.\n\nlme4nlme\n\n\n\nmodel_icbd &lt;- lmer(log(yield) ~ gen + (1|block),\n                   data = dat, \n                   na.action = na.exclude)\ntidy(model_icbd)\n\n# A tibble: 33 × 8\n   effect group term        estimate std.error statistic    df   p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)  3.20       0.0335    95.5    153. 3.36e-138\n 2 fixed  &lt;NA&gt;  genG02       0.0908     0.0424     2.14   129. 3.40e-  2\n 3 fixed  &lt;NA&gt;  genG03       0.281      0.0424     6.63   129. 8.29e- 10\n 4 fixed  &lt;NA&gt;  genG04       0.0924     0.0424     2.18   129. 3.12e-  2\n 5 fixed  &lt;NA&gt;  genG05       0.0651     0.0424     1.54   129. 1.27e-  1\n 6 fixed  &lt;NA&gt;  genG06       0.260      0.0424     6.14   129. 9.57e-  9\n 7 fixed  &lt;NA&gt;  genG07      -0.0252     0.0424    -0.593  129. 5.54e-  1\n 8 fixed  &lt;NA&gt;  genG08       0.115      0.0424     2.71   129. 7.60e-  3\n 9 fixed  &lt;NA&gt;  genG09       0.171      0.0424     4.04   129. 9.06e-  5\n10 fixed  &lt;NA&gt;  genG10      -0.00444    0.0424    -0.105  129. 9.17e-  1\n# ℹ 23 more rows\n\n\n\n\n\nmodel_icbd1 &lt;- lme(yield ~ gen,\n                  random = ~ 1|block,\n                  data = dat, \n                  na.action = na.exclude)\ntidy(model_icbd1)\n\n# A tibble: 33 × 8\n   effect group term        estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)  24.6        0.922   125   26.7    2.10e-53\n 2 fixed  &lt;NA&gt;  genG02        2.40       1.17    125    2.06   4.18e- 2\n 3 fixed  &lt;NA&gt;  genG03        8.04       1.17    125    6.88   2.54e-10\n 4 fixed  &lt;NA&gt;  genG04        2.37       1.17    125    2.03   4.43e- 2\n 5 fixed  &lt;NA&gt;  genG05        1.60       1.17    125    1.37   1.73e- 1\n 6 fixed  &lt;NA&gt;  genG06        7.39       1.17    125    6.32   4.11e- 9\n 7 fixed  &lt;NA&gt;  genG07       -0.419      1.17    125   -0.359  7.20e- 1\n 8 fixed  &lt;NA&gt;  genG08        3.04       1.17    125    2.60   1.04e- 2\n 9 fixed  &lt;NA&gt;  genG09        4.84       1.17    125    4.14   6.33e- 5\n10 fixed  &lt;NA&gt;  genG10       -0.0429     1.17    125   -0.0367 9.71e- 1\n# ℹ 23 more rows\n\n\n\n\n\n\n\n9.2.3 Check Model Assumptions\nLet’s verify the assumption of linear mixed models including normal distribution and constant variance of residuals.\n\nlme4nlme\n\n\n\ncheck_model(model_icbd, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\ncheck_model(model_icbd1, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere we observed a right skewness in residuals, this can be resolved by using data transformation e.g. log transformation of response variable. Please refer to chapter to read more about data transformation.\n\n\n9.2.4 Inference\nWe can extract information about ANOVA using anova() from lmer and lme models, respectively. ::: panel-tabset #### lme4\n\nanova(model_icbd, type = \"1\")\n\nType I Analysis of Variance Table with Satterthwaite's method\n    Sum Sq  Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ngen 2.5488 0.084959    30 129.02  17.995 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n9.2.4.1 nlme\n\nanova(model_icbd1, type = \"sequential\")\n\n            numDF denDF  F-value p-value\n(Intercept)     1   125 4042.016  &lt;.0001\ngen            30   125   17.675  &lt;.0001\n\n\n:::\nLet’s look at the estimated marginal means of yield for each variety (gen). ::: panel-tabset #### lme4\n\nemmeans(model_icbd, ~ gen)\n\n gen emmean     SE  df lower.CL upper.CL\n G01   3.20 0.0335 153     3.13     3.27\n G02   3.29 0.0335 153     3.22     3.36\n G03   3.48 0.0335 153     3.41     3.55\n G04   3.29 0.0335 153     3.23     3.36\n G05   3.26 0.0335 153     3.20     3.33\n G06   3.46 0.0335 153     3.39     3.53\n G07   3.17 0.0335 153     3.11     3.24\n G08   3.31 0.0335 153     3.25     3.38\n G09   3.37 0.0335 153     3.30     3.44\n G10   3.20 0.0335 153     3.13     3.26\n G11   3.29 0.0335 153     3.22     3.35\n G12   3.37 0.0335 153     3.30     3.44\n G13   3.39 0.0335 153     3.32     3.46\n G14   3.19 0.0335 153     3.12     3.25\n G15   3.25 0.0335 153     3.19     3.32\n G16   3.24 0.0335 153     3.17     3.31\n G17   2.95 0.0335 153     2.89     3.02\n G18   3.23 0.0335 153     3.17     3.30\n G19   3.37 0.0335 153     3.30     3.43\n G20   3.50 0.0335 153     3.44     3.57\n G21   3.44 0.0335 153     3.37     3.50\n G22   3.22 0.0335 153     3.15     3.29\n G23   3.39 0.0335 153     3.32     3.46\n G24   3.52 0.0335 153     3.45     3.58\n G25   3.29 0.0335 153     3.22     3.36\n G26   3.30 0.0335 153     3.23     3.36\n G27   3.17 0.0335 153     3.10     3.23\n G28   3.27 0.0335 153     3.20     3.33\n G29   3.20 0.0335 153     3.13     3.27\n G30   3.57 0.0335 153     3.51     3.64\n G31   3.29 0.0335 153     3.23     3.36\n\nDegrees-of-freedom method: kenward-roger \nResults are given on the log (not the response) scale. \nConfidence level used: 0.95 \n\n\n\n\n9.2.4.2 nlme\n\nemmeans(model_icbd1, ~ gen)\n\n gen emmean    SE df lower.CL upper.CL\n G01   24.6 0.922 30     22.7     26.5\n G02   27.0 0.922 30     25.1     28.9\n G03   32.6 0.922 30     30.7     34.5\n G04   26.9 0.922 30     25.1     28.8\n G05   26.2 0.922 30     24.3     28.1\n G06   32.0 0.922 30     30.1     33.8\n G07   24.2 0.922 30     22.3     26.0\n G08   27.6 0.922 30     25.7     29.5\n G09   29.4 0.922 30     27.5     31.3\n G10   24.5 0.922 30     22.6     26.4\n G11   27.1 0.922 30     25.2     28.9\n G12   29.3 0.922 30     27.4     31.1\n G13   29.9 0.922 30     28.1     31.8\n G14   24.2 0.922 30     22.4     26.1\n G15   26.1 0.922 30     24.2     28.0\n G16   25.9 0.922 30     24.0     27.8\n G17   19.7 0.922 30     17.8     21.6\n G18   25.7 0.922 30     23.8     27.6\n G19   29.0 0.922 30     27.2     30.9\n G20   33.2 0.922 30     31.3     35.0\n G21   31.1 0.922 30     29.2     33.0\n G22   25.2 0.922 30     23.3     27.1\n G23   29.8 0.922 30     27.9     31.7\n G24   33.6 0.922 30     31.8     35.5\n G25   27.0 0.922 30     25.1     28.9\n G26   27.1 0.922 30     25.3     29.0\n G27   23.8 0.922 30     21.9     25.7\n G28   26.5 0.922 30     24.6     28.4\n G29   24.8 0.922 30     22.9     26.6\n G30   36.2 0.922 30     34.3     38.1\n G31   27.1 0.922 30     25.2     29.0\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n:::",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/lattice-design.html",
    "href": "chapters/lattice-design.html",
    "title": "10  Latin Design",
    "section": "",
    "text": "10.1 Background\nLatin square design\nLatin designs are a well-known type of resolvable incomplete block design. Lattice designs are convenient for when there is a large number of treatments so that the block size is too big to control for spatial variation effectively. These lattice designs were first developed by Yates (1936) and later, alpha lattice designs were developed as an extension (Patterson and Williams 1976). A special feature of lattice designs is that the number of treatments, t, is related to the block size, k, in one of three forms: t = k2, t = k3, or t = k(k + 1).\nEven though the number of possible treatments is limited, a lattice design may be an ideal design for field experiments with a large number of treatments.\nStatistical model for latin square design:\n\\(Y_{ijk} = \\mu + \\alpha_i + \\beta_j +  \\gamma_k + \\epsilon_{ijk}\\)\nwhere, \\(\\mu\\) is the experiment mean, \\(\\alpha_i's\\) are treatment effects, \\(\\beta\\) and \\(\\gamma\\) are the row- and column specific block effects.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Latin Design</span>"
    ]
  },
  {
    "objectID": "chapters/glmm.html",
    "href": "chapters/glmm.html",
    "title": "11  Generalized Linear Mixed Models",
    "section": "",
    "text": "11.1 Zero-inflated & hurdle models\nWhen data have a large number of zeros, that can skew the results very dramatically and are most certainly violating standard assumptions of linear models (constant variance, normality, iid). What is a large number? That depends (of course) but I suggest 15% to 60% of the total data being zeros is high. Anything more than 60% starts to be too high - and it begs the question if statistics are really needed to understand what is going on.\nAdditionally, the occurence of zero’s does matter. If there are all occurring for a particular treatment (e.g. a negative control), estimation is impossible for that treatment level and running a conditional analysis may be a better choice. This mean filtering the data set to the treatments that are not completely all zero’s and running the analysis as a condition of a limited number of treatments.\nZero-inflated models are currently best developed for count variable and less ammenable (although not impossible) for continuous variable. I find these models helpful for studies in plant pathology, entomology, etc when pathogen/disease/pest occurence is spotty.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Generalized Linear Mixed Models</span>"
    ]
  },
  {
    "objectID": "chapters/glmm.html#zero-inflated-hurdle-models",
    "href": "chapters/glmm.html#zero-inflated-hurdle-models",
    "title": "11  Generalized Linear Mixed Models",
    "section": "",
    "text": "11.1.0.1 Zero-inflated versus hurdle models\nKeeping with this tutorial self-imposed rule, I will not go into theory, but really, you ought to read up on these models because they are complicated. The Wikipedia entries for zero-inflated and hurdle models are a good source for an introductory overview.\n\n\n11.1.1 Data import & preparation\n\ninsect_exp &lt;- read.csv(here::here(\"data\", \"insect_count_data_glmm.csv\")) %&gt;% \n  mutate(sampling_date = as.Date(sampling_date, format = \"%m/%d/%y\")) %&gt;% \n  mutate(Date = as.character(sampling_date), \n         block = as.character(block),\n         treatment = as.character(treatment))\n\n|———-|—————————————-|\n|plot | a unique number referring to each experimental unit |\n|treatment | 6 pesticide treatments (converted to a ) |\n|row | plot position for row |\n|col | plot positions for column or range |\n|block | the blocking unit (converted to character) |\n| insect_counts | response variable, number of insects counted |\n|sampling_date | dates when each experimental unit were evaluated for insect counts |\n|Date | sampling date converted to a character variable |\n\n\n11.1.2 Data integrity checks\nData types:\n\nstr(insect_exp)\n\n'data.frame':   270 obs. of  8 variables:\n $ plot         : int  101 102 103 104 201 202 203 204 301 302 ...\n $ treatment    : chr  \"2\" \"5\" \"1\" \"6\" ...\n $ row          : int  1 1 1 1 2 2 2 2 3 3 ...\n $ column       : int  1 2 3 4 1 2 3 4 1 2 ...\n $ block        : chr  \"1\" \"1\" \"1\" \"1\" ...\n $ insect_counts: int  4 1 0 0 0 0 2 1 2 1 ...\n $ sampling_date: Date, format: \"1988-06-17\" \"1988-06-17\" ...\n $ Date         : chr  \"1988-06-17\" \"1988-06-17\" \"1988-06-17\" \"1988-06-17\" ...\n\n\nData balance:\n\ntable(insect_exp$sampling_date, insect_exp$treatment)\n\n            \n             1 2 3 4 5 6\n  1988-06-17 5 5 5 5 5 5\n  1988-06-22 5 5 5 5 5 5\n  1988-06-27 5 5 5 5 5 5\n  1988-06-29 5 5 5 5 5 5\n  1988-07-06 5 5 5 5 5 5\n  1988-07-13 5 5 5 5 5 5\n  1988-07-21 5 5 5 5 5 5\n  1988-07-27 5 5 5 5 5 5\n  1988-08-03 5 5 5 5 5 5\n\n\nMissingness:\n\napply(insect_exp, 2, function(x) sum(is.na(x)))\n\n         plot     treatment           row        column         block \n            0             0             0             0             0 \ninsect_counts sampling_date          Date \n            0             0             0 \n\n\nData visualization:\nHistograms are often not helpful for zero-inflated data since the zero’s dominate the distribution. Stem-and-leaf plots can be better. It’s also helpful to count the total number of zero’s.\n\nstem(insect_exp$insect_counts)\n\n\n  The decimal point is 1 digit(s) to the right of the |\n\n   0 | 00000000000000000000000000000000000000000000000000000000000000000000+137\n   1 | 01222333455566779\n   2 | 001122234577789\n   3 | 00013568\n   4 | 48\n   5 | 13\n   6 | 0125\n   7 | 6\n   8 | 45\n   9 | 4\n  10 | \n  11 | \n  12 | \n  13 | 5\n\nsum(insect_exp$insect_counts == 0)/nrow(insect_exp)\n\n[1] 0.4185185\n\n\nRoughly 42% of the data are zero’s. The remaining non-zero data look like it might folow a Poisson or negative binomial distribution.\n\n# all data\nggplot(insect_exp, aes(x = sampling_date, y = insect_counts, color = treatment, group = plot)) +\n  geom_point(size = 2) +\n  geom_line() +\n  ggtitle(\"all data\") + \n  theme_classic()\n\n\n\n\n\n\n\n# mean of each treatment\ninsect_exp %&gt;% group_by(sampling_date, treatment) %&gt;% \n  summarise(mean_counts = mean(insect_counts)) %&gt;% \n  ggplot(., aes(x = sampling_date, y = mean_counts, color = treatment)) +\n    geom_point(size = 2) +\n    geom_line() +\n    ggtitle(\"mean data\") + \n    theme_classic()\n\n\n\n\n\n\n\n\n\n\n11.1.3 Statistical modelling\nModel statement:\n\\[y_{ijk} = \\mu + \\alpha_i + \\beta_j + \\gamma_k + \\delta_i + \\epsilon_{ijk}\\]\nwhere:\n\\(\\mu\\) = overall mean \\(\\alpha_i\\) = effect of the \\(i^{th}\\) pesticide treatment\n\\(\\beta_j\\) = effect of the \\(j^{th}\\) block \\(\\gamma_k\\) = effect of the \\(k^{th}\\) sampling date \\(\\delta_i\\) = effect of the \\(i^{th}\\) pesticide treatment on becoming non-zero\nand\n\n11.1.3.1 Model fitting\nAs mentioned, this is hard and often takes many tries.\n\nm1 = glmmTMB(\n  insect_counts ~ treatment + Date + ar1(Date + 0|plot) + (1|block),\n  ziformula = ~ treatment,\n  data = insect_exp, \n  na.action = na.exclude, \n  family = nbinom2)\n\nThis model is using the correlation structure for autoregressive correlated error terms, ar1(). There are several other specialized covariance structures implmented by glmmTMB. In general, repeated measures syntax follow this convention: (time + 0 | grouping).\nFitting glmm is hard. The glmmTMB writers have written some guidance on model fitting.\n\nm1\n\nFormula:          \ninsect_counts ~ treatment + Date + ar1(Date + 0 | plot) + (1 |      block)\nZero inflation:                 ~treatment\nData: insect_exp\n      AIC       BIC    logLik  df.resid \n1298.7328 1385.0949 -625.3664       246 \nRandom-effects (co)variances:\n\nConditional model:\n Groups Name           Std.Dev. Corr      \n plot   Date1988-06-17 0.7748   0.49 (ar1)\n block  (Intercept)    0.3333             \n\nNumber of obs: 270 / Conditional model: plot, 30; block, 5\n\nDispersion parameter for nbinom2 family (): 1.76 \n\nFixed Effects:\n\nConditional model:\n   (Intercept)      treatment2      treatment3      treatment4      treatment5  \n       2.39231        -0.04978        -1.53159        -2.75395        -2.50652  \n    treatment6  Date1988-06-22  Date1988-06-27  Date1988-06-29  Date1988-07-06  \n      -1.48975         0.24054         0.26618         0.62692         1.17067  \nDate1988-07-13  Date1988-07-21  Date1988-07-27  Date1988-08-03  \n       0.83442         0.19962        -0.96749        -1.11938  \n\nZero-inflation model:\n(Intercept)   treatment2   treatment3   treatment4   treatment5   treatment6  \n     -2.608       -1.200        1.568        2.607        1.542        2.134  \n\n\n\n\n11.1.3.2 Model diagnostics\nLook at residuals over space\n\ninsect_exp$model_resids &lt;- residuals(m1)\n\nggplot(insect_exp, aes(x = row, y = column, fill = model_resids)) +\n  geom_tile() + \n  facet_wrap(facets = vars(Date), nrow = 3, ncol = 3) + \n  scale_fill_viridis_c(direction = -1) + \n  theme_minimal()\n\n\n\n\n\n\n\n\nUse DHARMa to conduct residual tests\n\nsimulated_resids &lt;- simulateResiduals(m1)\ntestDispersion(simulated_resids)\n\n\n\n\n\n\n\n\n\n    DHARMa nonparametric dispersion test via sd of residuals fitted vs.\n    simulated\n\ndata:  simulationOutput\ndispersion = 0.23324, p-value = 0.336\nalternative hypothesis: two.sided\n\nplot(simulated_resids)\n\n\n\n\n\n\n\n\n\n\n11.1.3.3 Inference\nANOVA\nThe package car is needed to conduct ANOVA tests on glmmTMB object. It conducts a chi-square test rather than an F-test. These tend to be more sensitive than F-tests, resulting in lower p-values.\n\ncar::Anova(m1)\n\nWarning in printHypothesis(L, rhs, names(b)): one or more coefficients in the hypothesis include\n     arithmetic operators in their names;\n  the printed representation of the hypothesis will be omitted\n\n\nAnalysis of Deviance Table (Type II Wald chisquare tests)\n\nResponse: insect_counts\n           Chisq Df Pr(&gt;Chisq)    \ntreatment 54.358  5  1.769e-10 ***\nDate      41.652  8  1.574e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nEstimates.\nglmmTMB is compatible with emmeans and effects.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Generalized Linear Mixed Models</span>"
    ]
  },
  {
    "objectID": "chapters/special-conditions.html",
    "href": "chapters/special-conditions.html",
    "title": "11  Combining Scenarios",
    "section": "",
    "text": "11.1 Split plot with repeated measures\nNormally-distributed data",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Combining Scenarios</span>"
    ]
  },
  {
    "objectID": "chapters/special-conditions.html#split-plot-with-repeated-measures",
    "href": "chapters/special-conditions.html#split-plot-with-repeated-measures",
    "title": "11  Combining Scenarios",
    "section": "",
    "text": "11.1.0.1 Load data\nThis is an alfalfa study consisting of two treatments: irrigation level and planting mix with four reps. Each plot (the experimental unit) was harvested three times and the yield was measured.\n\nalfalfa &lt;- read.csv(here::here(\"data\", \"alfalfa_intercropping.csv\"))\n\n|———-|—————————————-| | cut | a cutting (harvest) of alfalfa within a single growing season. This is a temporal unit for repeated measures analysis. There were three cuttings in total for that year and field. The dates are not known, so we cannot assume they are evenly spaced apart |\n|irrigation | main plot, irrigation treatment (“Full” or “Deficit”) |\n|plot | a number referring to each experimental unit |\n|block | the blocking unit |\n|yield | alfalfa yield (the response variable) |\n|row | plot position for row |\n|col | plot positions for column or range. |\nTwo new variables need to be created:\n\nblock: character version of the original ‘block’\ncut_num: integer version of ‘cut’. This is required by nlme::lme for specialized correlation structures. The numeric order of this variable matches the cut order.\n\n\nalfalfa_sp &lt;- alfalfa %&gt;% \n  mutate(block = as.character(block)) %&gt;% \n  mutate(cut_num = case_when(\n    cut == \"First\" ~ 1L,\n    cut == \"Second\" ~ 2L,\n    cut == \"Third\" ~ 3L,\n    is.na(cut) ~ NA_integer_)) \n\n\n\n11.1.0.2 Data integrity checks\nData type check:\n\nstr(alfalfa_sp)\n\n'data.frame':   240 obs. of  9 variables:\n $ cut       : chr  \"First\" \"First\" \"First\" \"First\" ...\n $ irrigation: chr  \"Full\" \"Full\" \"Full\" \"Full\" ...\n $ plot      : int  1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 ...\n $ block     : chr  \"1\" \"1\" \"1\" \"1\" ...\n $ mix       : chr  \"50A+50O\" \"75A+25O\" \"50A+50F\" \"75A+25M\" ...\n $ yield     : num  221 289 467 557 423 ...\n $ row       : int  1 1 1 1 1 2 2 2 2 2 ...\n $ col       : int  1 2 3 4 5 1 2 3 4 5 ...\n $ cut_num   : int  1 1 1 1 1 1 1 1 1 1 ...\n\n\nData balance check:\n\ntable(alfalfa_sp$irrigation, alfalfa_sp$mix, alfalfa_sp$cut)\n\n, ,  = First\n\n         \n          100A 50A+50F 50A+50F_AR 50A+50M 50A+50M_AR 50A+50O 50A+50O_AR 75A+25F\n  Deficit    4       4          4       4          4       4          4       4\n  Full       4       4          4       4          4       4          4       4\n         \n          75A+25M 75A+25O\n  Deficit       4       4\n  Full          4       4\n\n, ,  = Second\n\n         \n          100A 50A+50F 50A+50F_AR 50A+50M 50A+50M_AR 50A+50O 50A+50O_AR 75A+25F\n  Deficit    4       4          4       4          4       4          4       4\n  Full       4       4          4       4          4       4          4       4\n         \n          75A+25M 75A+25O\n  Deficit       4       4\n  Full          4       4\n\n, ,  = Third\n\n         \n          100A 50A+50F 50A+50F_AR 50A+50M 50A+50M_AR 50A+50O 50A+50O_AR 75A+25F\n  Deficit    4       4          4       4          4       4          4       4\n  Full       4       4          4       4          4       4          4       4\n         \n          75A+25M 75A+25O\n  Deficit       4       4\n  Full          4       4\n\n\nCheck missingness:\n\napply(alfalfa_sp, 2, function(x) sum(is.na(x)))\n\n       cut irrigation       plot      block        mix      yield        row \n         0          0          0          0          0          0          0 \n       col    cut_num \n         0          0 \n\n\nCheck dependent data:\n\nhist(alfalfa_sp$yield)\n\n\n\n\n\n\n\n\nThere are some very high values that we should keep an eye on.\nExperimental layout:\n\nalfalfa_sp %&gt;% filter(cut == \"First\") %&gt;% \n  ggplot(aes(x = col, y = row)) +\n    geom_raster(aes(fill = irrigation)) +\n    geom_tileborder(aes(group = 1, grp = block), lwd = 1.5) + \n    theme_classic()\n\n\n\n\n\n\n\n\n\n\n11.1.0.3 Data analysis\nModel statement:\n\\[y_{ijk} = \\mu + \\alpha_i+ \\beta_j + \\gamma_k + (\\alpha\\beta)_{ij} + (\\alpha\\gamma)_{ik} + (\\beta\\gamma)_{jk} + (\\alpha\\beta\\gamma)_{ijk} +\\epsilon_{ijk}\\]\nwhere\n\\(\\mu\\) = overall mean\n\\(\\alpha_i\\) = effect of the \\(i^{th}\\) irrigation treatment\n\\(\\beta_j\\) = effect of the \\(j^{th}\\) planting mix treatment\n\\(\\gamma_k\\) = effect of the \\(k^{th}\\) cutting\nAnd the remaining terms reflect two-way and three-way interactions.\nThe error terms are assumed to follow this distribution, \\(\\epsilon \\sim N(0, \\sigma)\\), and each plot is assumed to follow an auto-regressive correlation structure.\nThe starting model is very similar to the other split plot example in this guide where the main plot “irrigation” is nested with “block”. An additional level of nesting is used for “plot” since that is the experimental unit we are designating for the repeated measures term.\nI usually build the model in two steps: first the basic model is estimated, and next a correlation structure is added. This is not strictly needed; the model can be estimated in one step.\n\nm1 &lt;- lme(yield ~ mix*irrigation*cut,\n          random = ~ 1|block/irrigation/plot,\n          data = alfalfa_sp)\n\nSince we don’t know the temporal spacing for each cutting, a compound symmetry correlation structure will be used. This type assumes a single correlation across time. This has a starting value of 0.3 and this may chagne during the fitting process since fixed = FALSE.\n\ncorstr &lt;- corCompSymm(value = 0.3, \n                      form = ~ cut|block/irrigation/plot,\n                      fixed = FALSE)\n\nIt is required by nlme that two terms match after the “|” in the random and form arguments match exactly. The plot term is needed because this is the unit to calculate correlations at.\n\ncorstr &lt;- corCompSymm(value = 0.3, \n                      form = ~ cut|block/irrigation/plot,\n                      fixed = FALSE)\n\nm1 &lt;- lme(yield ~ mix*irrigation*cut,\n          random = ~ 1|block/irrigation/plot,\n          data = alfalfa_sp)\n\nUpdate the model with the correlation structure:\n\nm2 &lt;- update(m1, cor = corstr)\n\n\n\n11.1.0.4 Check model assumpotion\n\nplot(m2)\n\n\n\n\n\n\n\nqqnorm(m2, ~ resid(., type = \"p\"), abline = c(0, 1))\n\n\n\n\n\n\n\n\nThere are some very large outliers at the right side of the plot.\n\n\n11.1.0.5 Run ANOVA\n\nanova(m2)\n\n                   numDF denDF   F-value p-value\n(Intercept)            1   102 1432.6369  &lt;.0001\nmix                    9   102   13.6932  &lt;.0001\nirrigation             1     3    4.8770  0.1143\ncut                    2   102    6.0434  0.0033\nmix:irrigation         9   102    0.5256  0.8530\nmix:cut               18   102    0.8029  0.6927\nirrigation:cut         2   102   14.2649  &lt;.0001\nmix:irrigation:cut    18   102    1.0226  0.4418\n\n\nAlways check the degrees of freedom (denominator and numerator) to make sure the model is specified correctly.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Combining Scenarios</span>"
    ]
  },
  {
    "objectID": "chapters/variance-components.html",
    "href": "chapters/variance-components.html",
    "title": "13  Variance & Variance Components",
    "section": "",
    "text": "13.1 Unequal Variance",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Variance and Variance Components</span>"
    ]
  },
  {
    "objectID": "chapters/summary.html",
    "href": "chapters/summary.html",
    "title": "14  Summary",
    "section": "",
    "text": "In summary, mixed models are complicated.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Summary</span>"
    ]
  },
  {
    "objectID": "chapters/resources.html",
    "href": "chapters/resources.html",
    "title": "15  Additional Resources",
    "section": "",
    "text": "15.0.1 Further Reading\n\nlme4 vignette for fitting linear mixed models\n\n\n\n15.0.2 Other Resources",
    "crumbs": [
      "<span class='chapter-number'>15</span>  <span class='chapter-title'>Additional Resources</span>"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Field Guide to the R Mixed Model Wilderness",
    "section": "",
    "text": "Preface\n“Path in the Wilderness” by Erich Taeubel, Jr.\nRunning mixed models in R is no easy task. There are dozens of packages supporting these aims, each with varying functionality, syntax, and conventions. The linear mixed model ecosystem in R consists of over 80 libraries that either construct and solve mixed model equations or helper packages the process the results from mixed model analysis. These libraries provide a patchwork of overlapping and unique functionality regarding the fundamental structure of mixed models: allowable distributions, nested and crossed random effects, heterogeneous error structures and other facets. No single library has all possible functionality enabled.\nThis patchwork of packages makes it very challenging for statisticians to conduct mixed model analysis and to teach others how to run mixed models in R. The purpose of this guide to to provide some recipes for handling common analytical scenario’s that require mixed models. As a field guide, it is intended to be succinct, and help researchers meet their analytic goals.\nIn general, the content from this website may not be copied or reproduced without attribution. However, the example code and required data sets to run the code are MIT licensed. These can be accessed on GitHub.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#recent-updates",
    "href": "index.html#recent-updates",
    "title": "Field Guide to the R Mixed Model Wilderness",
    "section": "Recent Updates",
    "text": "Recent Updates\nThis is a work-in-progress and will be updated over time.\n\nRCBD lesson has been completed.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapters/split-plot-design.html#details-for-split-split-plot-designs",
    "href": "chapters/split-plot-design.html#details-for-split-split-plot-designs",
    "title": "5  Split Plot Design",
    "section": "6.1 Details for split-split plot designs",
    "text": "6.1 Details for split-split plot designs\nThe statistical model structure this design:\n\\[y_{ijk} = \\mu + \\rho_j +  \\alpha_i + \\beta_k + (\\alpha_i\\beta_k) + \\tau_n + (\\alpha_i\\tau_n) + (\\tau_n\\beta_k) + (\\alpha_i\\beta_k\\tau_n) + \\epsilon_{ijk} + \\delta_{ijkn}\\] Where:\n\\(\\mu\\)= overall experimental mean, \\(\\alpha\\) = main effect of whole plot (fixed), \\(\\beta\\) = main effect of subplot (fixed), \\(\\tau\\) = main effect of sub-subplot, \\(\\epsilon_{ij}\\) = whole plot error, \\(\\delta_{ijk}\\) = subplot error.\n\\[ \\epsilon \\sim N(0, \\sigma_\\epsilon)\\]\n\\[\\ \\delta  \\sim N(0, \\sigma_\\delta)\\]\nBoth the error and the rep effects are assumed to be normally distributed with a mean of zero and standard deviations of \\(\\sigma_\\epsilon\\) and \\(\\sigma_\\delta\\), respectively.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/split-plot-design.html#example-analysis",
    "href": "chapters/split-plot-design.html#example-analysis",
    "title": "5  Split Plot Design",
    "section": "6.2 Example Analysis",
    "text": "6.2 Example Analysis\nIn this example, we have a rice yield data from ‘agricolae’ package.\nThis consists of of 3 different rice varieties grown under 3 management practices and 5 Nitrogen levels in the split-split design, levels of each factor are outlined below:\nblocks = block (3 blocks),\nWhole plot factor = Nitrogen (5 levels)\nSub plot = management (3 levels)\nsub-subplot = variety (3 levels)\n\n6.2.1 Load Data and integrity checks\nHere, we are extracting the rice yield data from agricolae package.\n\nlibrary(agricolae)\nf &lt;- system.file(\"external/ssp.csv\", package=\"agricolae\")\nrice &lt;-read.csv(f)\n\nLook at the structure of the data, class of block, nitrogen, management and variety should be a character/factor and yield should be numeric.\n\nstr(rice)\n\n'data.frame':   135 obs. of  5 variables:\n $ block     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ nitrogen  : int  0 0 0 50 50 50 80 80 80 110 ...\n $ management: chr  \"m1\" \"m2\" \"m3\" \"m1\" ...\n $ variety   : int  1 1 1 1 1 1 1 1 1 1 ...\n $ yield     : num  3.32 3.77 4.66 3.19 3.62 ...\n\n\nConvert block, nitrogen, variety, and management to factors.\n\nrice$block&lt;-factor(rice$block)\nrice$nitrogen&lt;-factor(rice$nitrogen)\nrice$management&lt;-factor(rice$management)\nrice$variety&lt;-factor(rice$variety)\n\nNext, run a cross tabulations to check the independent variables\n\ntable(rice$variety, rice$nitrogen, rice$management)\n\n, ,  = m1\n\n   \n    0 50 80 110 140\n  1 3  3  3   3   3\n  2 3  3  3   3   3\n  3 3  3  3   3   3\n\n, ,  = m2\n\n   \n    0 50 80 110 140\n  1 3  3  3   3   3\n  2 3  3  3   3   3\n  3 3  3  3   3   3\n\n, ,  = m3\n\n   \n    0 50 80 110 140\n  1 3  3  3   3   3\n  2 3  3  3   3   3\n  3 3  3  3   3   3\n\n\nIt looks perfectly balanced, with exactly 3 observation per treatment group.\nLast, check the distribution of the dependent variable by plotting a histogram using a hist().\n\nhist(rice$yield)\n\n\n\n\n\n\n\n\n\n\nFigure 6.1: Histogram of the dependent variable.\n\n\n\n\n\n\n6.2.2 Model Building\nThe variance analysis of a split-split plot design is divided into three parts: the main-plot, subplot and sub-subplot analysis. We can use the nesting notation in the random part because nitrogen and management are nested in blocks. We can do blocks as fixed or random.\n\nlme4nlme\n\n\n\nmodel3 &lt;- lmer(yield ~ nitrogen*management*variety + (1|block/nitrogen/management),\n              data=rice, \n              na.action = na.exclude)\n\nboundary (singular) fit: see help('isSingular')\n\nsummary(model3)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: \nyield ~ nitrogen * management * variety + (1 | block/nitrogen/management)\n   Data: rice\n\nREML criterion at convergence: 232.1\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-2.72561 -0.49133 -0.05887  0.60262  1.95006 \n\nRandom effects:\n Groups                      Name        Variance Std.Dev.\n management:(nitrogen:block) (Intercept) 0.000000 0.0000  \n nitrogen:block              (Intercept) 0.009025 0.0950  \n block                       (Intercept) 0.000000 0.0000  \n Residual                                0.437110 0.6611  \nNumber of obs: 135, groups:  \nmanagement:(nitrogen:block), 45; nitrogen:block, 15; block, 3\n\nFixed effects:\n                                   Estimate Std. Error t value\n(Intercept)                        3.897000   0.385632  10.105\nnitrogen50                         0.335000   0.545365   0.614\nnitrogen80                         1.329000   0.545365   2.437\nnitrogen110                        0.753333   0.545365   1.381\nnitrogen140                        0.164667   0.545365   0.302\nmanagementm2                       0.420333   0.539821   0.779\nmanagementm3                       1.428000   0.539821   2.645\nvariety2                           1.449000   0.539821   2.684\nvariety3                           1.481333   0.539821   2.744\nnitrogen50:managementm2           -0.076000   0.763422  -0.100\nnitrogen80:managementm2            0.086000   0.763422   0.113\nnitrogen110:managementm2           0.376667   0.763422   0.493\nnitrogen140:managementm2           0.718000   0.763422   0.941\nnitrogen50:managementm3           -0.177333   0.763422  -0.232\nnitrogen80:managementm3           -0.107667   0.763422  -0.141\nnitrogen110:managementm3           0.158000   0.763422   0.207\nnitrogen140:managementm3           0.482000   0.763422   0.631\nnitrogen50:variety2                0.240667   0.763422   0.315\nnitrogen80:variety2               -0.695333   0.763422  -0.911\nnitrogen110:variety2               0.152667   0.763422   0.200\nnitrogen140:variety2               1.265000   0.763422   1.657\nnitrogen50:variety3                1.068000   0.763422   1.399\nnitrogen80:variety3                1.226000   0.763422   1.606\nnitrogen110:variety3               1.321000   0.763422   1.730\nnitrogen140:variety3               3.075000   0.763422   4.028\nmanagementm2:variety2             -1.054667   0.763422  -1.381\nmanagementm3:variety2             -1.343000   0.763422  -1.759\nmanagementm2:variety3              0.697333   0.763422   0.913\nmanagementm3:variety3              0.753667   0.763422   0.987\nnitrogen50:managementm2:variety2   0.603667   1.079642   0.559\nnitrogen80:managementm2:variety2   1.068667   1.079642   0.990\nnitrogen110:managementm2:variety2  1.009667   1.079642   0.935\nnitrogen140:managementm2:variety2  0.225000   1.079642   0.208\nnitrogen50:managementm3:variety2   0.482667   1.079642   0.447\nnitrogen80:managementm3:variety2   1.329000   1.079642   1.231\nnitrogen110:managementm3:variety2  1.022667   1.079642   0.947\nnitrogen140:managementm3:variety2  0.662667   1.079642   0.614\nnitrogen50:managementm2:variety3  -0.006333   1.079642  -0.006\nnitrogen80:managementm2:variety3  -0.569667   1.079642  -0.528\nnitrogen110:managementm2:variety3 -0.322333   1.079642  -0.299\nnitrogen140:managementm2:variety3 -1.054333   1.079642  -0.977\nnitrogen50:managementm3:variety3   0.259667   1.079642   0.241\nnitrogen80:managementm3:variety3  -0.816667   1.079642  -0.756\nnitrogen110:managementm3:variety3 -0.541000   1.079642  -0.501\nnitrogen140:managementm3:variety3 -1.292333   1.079642  -1.197\n\n\n\nCorrelation matrix not shown by default, as p = 45 &gt; 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n\n\n\n\n\nmodel3 &lt;- lme(yield ~ nitrogen*management*variety,\n                  random = ~ 1|block/nitrogen/management,\n                  data = rice, \n                  na.action = na.exclude)\nsummary(model3)\n\nLinear mixed-effects model fit by REML\n  Data: rice \n       AIC      BIC    logLik\n  330.0696 452.5602 -116.0348\n\nRandom effects:\n Formula: ~1 | block\n         (Intercept)\nStdDev: 2.461632e-05\n\n Formula: ~1 | nitrogen %in% block\n        (Intercept)\nStdDev:  0.09500623\n\n Formula: ~1 | management %in% nitrogen %in% block\n         (Intercept)  Residual\nStdDev: 1.391254e-05 0.6611424\n\nFixed effects:  yield ~ nitrogen * management * variety \n                                      Value Std.Error DF   t-value p-value\n(Intercept)                        3.897000 0.3856317 60 10.105497  0.0000\nnitrogen50                         0.335000 0.5453656  8  0.614267  0.5561\nnitrogen80                         1.329000 0.5453656  8  2.436898  0.0408\nnitrogen110                        0.753333 0.5453656  8  1.381336  0.2045\nnitrogen140                        0.164667 0.5453656  8  0.301938  0.7704\nmanagementm2                       0.420333 0.5398205 20  0.778654  0.4453\nmanagementm3                       1.428000 0.5398205 20  2.645324  0.0155\nvariety2                           1.449000 0.5398205 60  2.684226  0.0094\nvariety3                           1.481333 0.5398205 60  2.744122  0.0080\nnitrogen50:managementm2           -0.076000 0.7634214 20 -0.099552  0.9217\nnitrogen80:managementm2            0.086000 0.7634214 20  0.112651  0.9114\nnitrogen110:managementm2           0.376667 0.7634214 20  0.493393  0.6271\nnitrogen140:managementm2           0.718000 0.7634214 20  0.940503  0.3582\nnitrogen50:managementm3           -0.177333 0.7634214 20 -0.232288  0.8187\nnitrogen80:managementm3           -0.107667 0.7634214 20 -0.141032  0.8893\nnitrogen110:managementm3           0.158000 0.7634214 20  0.206963  0.8381\nnitrogen140:managementm3           0.482000 0.7634214 20  0.631368  0.5349\nnitrogen50:variety2                0.240667 0.7634214 60  0.315247  0.7537\nnitrogen80:variety2               -0.695333 0.7634214 60 -0.910812  0.3660\nnitrogen110:variety2               0.152667 0.7634214 60  0.199977  0.8422\nnitrogen140:variety2               1.265000 0.7634214 60  1.657014  0.1027\nnitrogen50:variety3                1.068000 0.7634214 60  1.398965  0.1670\nnitrogen80:variety3                1.226000 0.7634214 60  1.605928  0.1135\nnitrogen110:variety3               1.321000 0.7634214 60  1.730368  0.0887\nnitrogen140:variety3               3.075000 0.7634214 60  4.027919  0.0002\nmanagementm2:variety2             -1.054667 0.7634214 60 -1.381500  0.1722\nmanagementm3:variety2             -1.343000 0.7634214 60 -1.759186  0.0836\nmanagementm2:variety3              0.697333 0.7634214 60  0.913432  0.3647\nmanagementm3:variety3              0.753667 0.7634214 60  0.987222  0.3275\nnitrogen50:managementm2:variety2   0.603667 1.0796409 60  0.559137  0.5781\nnitrogen80:managementm2:variety2   1.068667 1.0796409 60  0.989835  0.3262\nnitrogen110:managementm2:variety2  1.009667 1.0796409 60  0.935187  0.3534\nnitrogen140:managementm2:variety2  0.225000 1.0796409 60  0.208403  0.8356\nnitrogen50:managementm3:variety2   0.482667 1.0796409 60  0.447062  0.6564\nnitrogen80:managementm3:variety2   1.329000 1.0796409 60  1.230965  0.2231\nnitrogen110:managementm3:variety2  1.022667 1.0796409 60  0.947228  0.3473\nnitrogen140:managementm3:variety2  0.662667 1.0796409 60  0.613784  0.5417\nnitrogen50:managementm2:variety3  -0.006333 1.0796409 60 -0.005866  0.9953\nnitrogen80:managementm2:variety3  -0.569667 1.0796409 60 -0.527645  0.5997\nnitrogen110:managementm2:variety3 -0.322333 1.0796409 60 -0.298556  0.7663\nnitrogen140:managementm2:variety3 -1.054333 1.0796409 60 -0.976559  0.3327\nnitrogen50:managementm3:variety3   0.259667 1.0796409 60  0.240512  0.8108\nnitrogen80:managementm3:variety3  -0.816667 1.0796409 60 -0.756424  0.4524\nnitrogen110:managementm3:variety3 -0.541000 1.0796409 60 -0.501093  0.6181\nnitrogen140:managementm3:variety3 -1.292333 1.0796409 60 -1.197003  0.2360\n Correlation: \n                                  (Intr) ntrg50 ntrg80 ntr110 ntr140 mngmn2\nnitrogen50                        -0.707                                   \nnitrogen80                        -0.707  0.500                            \nnitrogen110                       -0.707  0.500  0.500                     \nnitrogen140                       -0.707  0.500  0.500  0.500              \nmanagementm2                      -0.700  0.495  0.495  0.495  0.495       \nmanagementm3                      -0.700  0.495  0.495  0.495  0.495  0.500\nvariety2                          -0.700  0.495  0.495  0.495  0.495  0.500\nvariety3                          -0.700  0.495  0.495  0.495  0.495  0.500\nnitrogen50:managementm2            0.495 -0.700 -0.350 -0.350 -0.350 -0.707\nnitrogen80:managementm2            0.495 -0.350 -0.700 -0.350 -0.350 -0.707\nnitrogen110:managementm2           0.495 -0.350 -0.350 -0.700 -0.350 -0.707\nnitrogen140:managementm2           0.495 -0.350 -0.350 -0.350 -0.700 -0.707\nnitrogen50:managementm3            0.495 -0.700 -0.350 -0.350 -0.350 -0.354\nnitrogen80:managementm3            0.495 -0.350 -0.700 -0.350 -0.350 -0.354\nnitrogen110:managementm3           0.495 -0.350 -0.350 -0.700 -0.350 -0.354\nnitrogen140:managementm3           0.495 -0.350 -0.350 -0.350 -0.700 -0.354\nnitrogen50:variety2                0.495 -0.700 -0.350 -0.350 -0.350 -0.354\nnitrogen80:variety2                0.495 -0.350 -0.700 -0.350 -0.350 -0.354\nnitrogen110:variety2               0.495 -0.350 -0.350 -0.700 -0.350 -0.354\nnitrogen140:variety2               0.495 -0.350 -0.350 -0.350 -0.700 -0.354\nnitrogen50:variety3                0.495 -0.700 -0.350 -0.350 -0.350 -0.354\nnitrogen80:variety3                0.495 -0.350 -0.700 -0.350 -0.350 -0.354\nnitrogen110:variety3               0.495 -0.350 -0.350 -0.700 -0.350 -0.354\nnitrogen140:variety3               0.495 -0.350 -0.350 -0.350 -0.700 -0.354\nmanagementm2:variety2              0.495 -0.350 -0.350 -0.350 -0.350 -0.707\nmanagementm3:variety2              0.495 -0.350 -0.350 -0.350 -0.350 -0.354\nmanagementm2:variety3              0.495 -0.350 -0.350 -0.350 -0.350 -0.707\nmanagementm3:variety3              0.495 -0.350 -0.350 -0.350 -0.350 -0.354\nnitrogen50:managementm2:variety2  -0.350  0.495  0.247  0.247  0.247  0.500\nnitrogen80:managementm2:variety2  -0.350  0.247  0.495  0.247  0.247  0.500\nnitrogen110:managementm2:variety2 -0.350  0.247  0.247  0.495  0.247  0.500\nnitrogen140:managementm2:variety2 -0.350  0.247  0.247  0.247  0.495  0.500\nnitrogen50:managementm3:variety2  -0.350  0.495  0.247  0.247  0.247  0.250\nnitrogen80:managementm3:variety2  -0.350  0.247  0.495  0.247  0.247  0.250\nnitrogen110:managementm3:variety2 -0.350  0.247  0.247  0.495  0.247  0.250\nnitrogen140:managementm3:variety2 -0.350  0.247  0.247  0.247  0.495  0.250\nnitrogen50:managementm2:variety3  -0.350  0.495  0.247  0.247  0.247  0.500\nnitrogen80:managementm2:variety3  -0.350  0.247  0.495  0.247  0.247  0.500\nnitrogen110:managementm2:variety3 -0.350  0.247  0.247  0.495  0.247  0.500\nnitrogen140:managementm2:variety3 -0.350  0.247  0.247  0.247  0.495  0.500\nnitrogen50:managementm3:variety3  -0.350  0.495  0.247  0.247  0.247  0.250\nnitrogen80:managementm3:variety3  -0.350  0.247  0.495  0.247  0.247  0.250\nnitrogen110:managementm3:variety3 -0.350  0.247  0.247  0.495  0.247  0.250\nnitrogen140:managementm3:variety3 -0.350  0.247  0.247  0.247  0.495  0.250\n                                  mngmn3 varty2 varty3 ntrgn50:m2 ntrgn80:m2\nnitrogen50                                                                  \nnitrogen80                                                                  \nnitrogen110                                                                 \nnitrogen140                                                                 \nmanagementm2                                                                \nmanagementm3                                                                \nvariety2                           0.500                                    \nvariety3                           0.500  0.500                             \nnitrogen50:managementm2           -0.354 -0.354 -0.354                      \nnitrogen80:managementm2           -0.354 -0.354 -0.354  0.500               \nnitrogen110:managementm2          -0.354 -0.354 -0.354  0.500      0.500    \nnitrogen140:managementm2          -0.354 -0.354 -0.354  0.500      0.500    \nnitrogen50:managementm3           -0.707 -0.354 -0.354  0.500      0.250    \nnitrogen80:managementm3           -0.707 -0.354 -0.354  0.250      0.500    \nnitrogen110:managementm3          -0.707 -0.354 -0.354  0.250      0.250    \nnitrogen140:managementm3          -0.707 -0.354 -0.354  0.250      0.250    \nnitrogen50:variety2               -0.354 -0.707 -0.354  0.500      0.250    \nnitrogen80:variety2               -0.354 -0.707 -0.354  0.250      0.500    \nnitrogen110:variety2              -0.354 -0.707 -0.354  0.250      0.250    \nnitrogen140:variety2              -0.354 -0.707 -0.354  0.250      0.250    \nnitrogen50:variety3               -0.354 -0.354 -0.707  0.500      0.250    \nnitrogen80:variety3               -0.354 -0.354 -0.707  0.250      0.500    \nnitrogen110:variety3              -0.354 -0.354 -0.707  0.250      0.250    \nnitrogen140:variety3              -0.354 -0.354 -0.707  0.250      0.250    \nmanagementm2:variety2             -0.354 -0.707 -0.354  0.500      0.500    \nmanagementm3:variety2             -0.707 -0.707 -0.354  0.250      0.250    \nmanagementm2:variety3             -0.354 -0.354 -0.707  0.500      0.500    \nmanagementm3:variety3             -0.707 -0.354 -0.707  0.250      0.250    \nnitrogen50:managementm2:variety2   0.250  0.500  0.250 -0.707     -0.354    \nnitrogen80:managementm2:variety2   0.250  0.500  0.250 -0.354     -0.707    \nnitrogen110:managementm2:variety2  0.250  0.500  0.250 -0.354     -0.354    \nnitrogen140:managementm2:variety2  0.250  0.500  0.250 -0.354     -0.354    \nnitrogen50:managementm3:variety2   0.500  0.500  0.250 -0.354     -0.177    \nnitrogen80:managementm3:variety2   0.500  0.500  0.250 -0.177     -0.354    \nnitrogen110:managementm3:variety2  0.500  0.500  0.250 -0.177     -0.177    \nnitrogen140:managementm3:variety2  0.500  0.500  0.250 -0.177     -0.177    \nnitrogen50:managementm2:variety3   0.250  0.250  0.500 -0.707     -0.354    \nnitrogen80:managementm2:variety3   0.250  0.250  0.500 -0.354     -0.707    \nnitrogen110:managementm2:variety3  0.250  0.250  0.500 -0.354     -0.354    \nnitrogen140:managementm2:variety3  0.250  0.250  0.500 -0.354     -0.354    \nnitrogen50:managementm3:variety3   0.500  0.250  0.500 -0.354     -0.177    \nnitrogen80:managementm3:variety3   0.500  0.250  0.500 -0.177     -0.354    \nnitrogen110:managementm3:variety3  0.500  0.250  0.500 -0.177     -0.177    \nnitrogen140:managementm3:variety3  0.500  0.250  0.500 -0.177     -0.177    \n                                  ntrgn110:m2 ntrgn140:m2 ntrgn50:m3 ntrgn80:m3\nnitrogen50                                                                     \nnitrogen80                                                                     \nnitrogen110                                                                    \nnitrogen140                                                                    \nmanagementm2                                                                   \nmanagementm3                                                                   \nvariety2                                                                       \nvariety3                                                                       \nnitrogen50:managementm2                                                        \nnitrogen80:managementm2                                                        \nnitrogen110:managementm2                                                       \nnitrogen140:managementm2           0.500                                       \nnitrogen50:managementm3            0.250       0.250                           \nnitrogen80:managementm3            0.250       0.250       0.500               \nnitrogen110:managementm3           0.500       0.250       0.500      0.500    \nnitrogen140:managementm3           0.250       0.500       0.500      0.500    \nnitrogen50:variety2                0.250       0.250       0.500      0.250    \nnitrogen80:variety2                0.250       0.250       0.250      0.500    \nnitrogen110:variety2               0.500       0.250       0.250      0.250    \nnitrogen140:variety2               0.250       0.500       0.250      0.250    \nnitrogen50:variety3                0.250       0.250       0.500      0.250    \nnitrogen80:variety3                0.250       0.250       0.250      0.500    \nnitrogen110:variety3               0.500       0.250       0.250      0.250    \nnitrogen140:variety3               0.250       0.500       0.250      0.250    \nmanagementm2:variety2              0.500       0.500       0.250      0.250    \nmanagementm3:variety2              0.250       0.250       0.500      0.500    \nmanagementm2:variety3              0.500       0.500       0.250      0.250    \nmanagementm3:variety3              0.250       0.250       0.500      0.500    \nnitrogen50:managementm2:variety2  -0.354      -0.354      -0.354     -0.177    \nnitrogen80:managementm2:variety2  -0.354      -0.354      -0.177     -0.354    \nnitrogen110:managementm2:variety2 -0.707      -0.354      -0.177     -0.177    \nnitrogen140:managementm2:variety2 -0.354      -0.707      -0.177     -0.177    \nnitrogen50:managementm3:variety2  -0.177      -0.177      -0.707     -0.354    \nnitrogen80:managementm3:variety2  -0.177      -0.177      -0.354     -0.707    \nnitrogen110:managementm3:variety2 -0.354      -0.177      -0.354     -0.354    \nnitrogen140:managementm3:variety2 -0.177      -0.354      -0.354     -0.354    \nnitrogen50:managementm2:variety3  -0.354      -0.354      -0.354     -0.177    \nnitrogen80:managementm2:variety3  -0.354      -0.354      -0.177     -0.354    \nnitrogen110:managementm2:variety3 -0.707      -0.354      -0.177     -0.177    \nnitrogen140:managementm2:variety3 -0.354      -0.707      -0.177     -0.177    \nnitrogen50:managementm3:variety3  -0.177      -0.177      -0.707     -0.354    \nnitrogen80:managementm3:variety3  -0.177      -0.177      -0.354     -0.707    \nnitrogen110:managementm3:variety3 -0.354      -0.177      -0.354     -0.354    \nnitrogen140:managementm3:variety3 -0.177      -0.354      -0.354     -0.354    \n                                  ntrgn110:m3 ntrgn140:m3 ntrgn50:v2 ntrgn80:v2\nnitrogen50                                                                     \nnitrogen80                                                                     \nnitrogen110                                                                    \nnitrogen140                                                                    \nmanagementm2                                                                   \nmanagementm3                                                                   \nvariety2                                                                       \nvariety3                                                                       \nnitrogen50:managementm2                                                        \nnitrogen80:managementm2                                                        \nnitrogen110:managementm2                                                       \nnitrogen140:managementm2                                                       \nnitrogen50:managementm3                                                        \nnitrogen80:managementm3                                                        \nnitrogen110:managementm3                                                       \nnitrogen140:managementm3           0.500                                       \nnitrogen50:variety2                0.250       0.250                           \nnitrogen80:variety2                0.250       0.250       0.500               \nnitrogen110:variety2               0.500       0.250       0.500      0.500    \nnitrogen140:variety2               0.250       0.500       0.500      0.500    \nnitrogen50:variety3                0.250       0.250       0.500      0.250    \nnitrogen80:variety3                0.250       0.250       0.250      0.500    \nnitrogen110:variety3               0.500       0.250       0.250      0.250    \nnitrogen140:variety3               0.250       0.500       0.250      0.250    \nmanagementm2:variety2              0.250       0.250       0.500      0.500    \nmanagementm3:variety2              0.500       0.500       0.500      0.500    \nmanagementm2:variety3              0.250       0.250       0.250      0.250    \nmanagementm3:variety3              0.500       0.500       0.250      0.250    \nnitrogen50:managementm2:variety2  -0.177      -0.177      -0.707     -0.354    \nnitrogen80:managementm2:variety2  -0.177      -0.177      -0.354     -0.707    \nnitrogen110:managementm2:variety2 -0.354      -0.177      -0.354     -0.354    \nnitrogen140:managementm2:variety2 -0.177      -0.354      -0.354     -0.354    \nnitrogen50:managementm3:variety2  -0.354      -0.354      -0.707     -0.354    \nnitrogen80:managementm3:variety2  -0.354      -0.354      -0.354     -0.707    \nnitrogen110:managementm3:variety2 -0.707      -0.354      -0.354     -0.354    \nnitrogen140:managementm3:variety2 -0.354      -0.707      -0.354     -0.354    \nnitrogen50:managementm2:variety3  -0.177      -0.177      -0.354     -0.177    \nnitrogen80:managementm2:variety3  -0.177      -0.177      -0.177     -0.354    \nnitrogen110:managementm2:variety3 -0.354      -0.177      -0.177     -0.177    \nnitrogen140:managementm2:variety3 -0.177      -0.354      -0.177     -0.177    \nnitrogen50:managementm3:variety3  -0.354      -0.354      -0.354     -0.177    \nnitrogen80:managementm3:variety3  -0.354      -0.354      -0.177     -0.354    \nnitrogen110:managementm3:variety3 -0.707      -0.354      -0.177     -0.177    \nnitrogen140:managementm3:variety3 -0.354      -0.707      -0.177     -0.177    \n                                  ntrgn110:v2 ntrgn140:v2 ntrgn50:v3 ntrgn80:v3\nnitrogen50                                                                     \nnitrogen80                                                                     \nnitrogen110                                                                    \nnitrogen140                                                                    \nmanagementm2                                                                   \nmanagementm3                                                                   \nvariety2                                                                       \nvariety3                                                                       \nnitrogen50:managementm2                                                        \nnitrogen80:managementm2                                                        \nnitrogen110:managementm2                                                       \nnitrogen140:managementm2                                                       \nnitrogen50:managementm3                                                        \nnitrogen80:managementm3                                                        \nnitrogen110:managementm3                                                       \nnitrogen140:managementm3                                                       \nnitrogen50:variety2                                                            \nnitrogen80:variety2                                                            \nnitrogen110:variety2                                                           \nnitrogen140:variety2               0.500                                       \nnitrogen50:variety3                0.250       0.250                           \nnitrogen80:variety3                0.250       0.250       0.500               \nnitrogen110:variety3               0.500       0.250       0.500      0.500    \nnitrogen140:variety3               0.250       0.500       0.500      0.500    \nmanagementm2:variety2              0.500       0.500       0.250      0.250    \nmanagementm3:variety2              0.500       0.500       0.250      0.250    \nmanagementm2:variety3              0.250       0.250       0.500      0.500    \nmanagementm3:variety3              0.250       0.250       0.500      0.500    \nnitrogen50:managementm2:variety2  -0.354      -0.354      -0.354     -0.177    \nnitrogen80:managementm2:variety2  -0.354      -0.354      -0.177     -0.354    \nnitrogen110:managementm2:variety2 -0.707      -0.354      -0.177     -0.177    \nnitrogen140:managementm2:variety2 -0.354      -0.707      -0.177     -0.177    \nnitrogen50:managementm3:variety2  -0.354      -0.354      -0.354     -0.177    \nnitrogen80:managementm3:variety2  -0.354      -0.354      -0.177     -0.354    \nnitrogen110:managementm3:variety2 -0.707      -0.354      -0.177     -0.177    \nnitrogen140:managementm3:variety2 -0.354      -0.707      -0.177     -0.177    \nnitrogen50:managementm2:variety3  -0.177      -0.177      -0.707     -0.354    \nnitrogen80:managementm2:variety3  -0.177      -0.177      -0.354     -0.707    \nnitrogen110:managementm2:variety3 -0.354      -0.177      -0.354     -0.354    \nnitrogen140:managementm2:variety3 -0.177      -0.354      -0.354     -0.354    \nnitrogen50:managementm3:variety3  -0.177      -0.177      -0.707     -0.354    \nnitrogen80:managementm3:variety3  -0.177      -0.177      -0.354     -0.707    \nnitrogen110:managementm3:variety3 -0.354      -0.177      -0.354     -0.354    \nnitrogen140:managementm3:variety3 -0.177      -0.354      -0.354     -0.354    \n                                  ntrgn110:v3 ntrgn140:v3 mng2:2 mng3:2 mng2:3\nnitrogen50                                                                    \nnitrogen80                                                                    \nnitrogen110                                                                   \nnitrogen140                                                                   \nmanagementm2                                                                  \nmanagementm3                                                                  \nvariety2                                                                      \nvariety3                                                                      \nnitrogen50:managementm2                                                       \nnitrogen80:managementm2                                                       \nnitrogen110:managementm2                                                      \nnitrogen140:managementm2                                                      \nnitrogen50:managementm3                                                       \nnitrogen80:managementm3                                                       \nnitrogen110:managementm3                                                      \nnitrogen140:managementm3                                                      \nnitrogen50:variety2                                                           \nnitrogen80:variety2                                                           \nnitrogen110:variety2                                                          \nnitrogen140:variety2                                                          \nnitrogen50:variety3                                                           \nnitrogen80:variety3                                                           \nnitrogen110:variety3                                                          \nnitrogen140:variety3               0.500                                      \nmanagementm2:variety2              0.250       0.250                          \nmanagementm3:variety2              0.250       0.250       0.500              \nmanagementm2:variety3              0.500       0.500       0.500  0.250       \nmanagementm3:variety3              0.500       0.500       0.250  0.500  0.500\nnitrogen50:managementm2:variety2  -0.177      -0.177      -0.707 -0.354 -0.354\nnitrogen80:managementm2:variety2  -0.177      -0.177      -0.707 -0.354 -0.354\nnitrogen110:managementm2:variety2 -0.354      -0.177      -0.707 -0.354 -0.354\nnitrogen140:managementm2:variety2 -0.177      -0.354      -0.707 -0.354 -0.354\nnitrogen50:managementm3:variety2  -0.177      -0.177      -0.354 -0.707 -0.177\nnitrogen80:managementm3:variety2  -0.177      -0.177      -0.354 -0.707 -0.177\nnitrogen110:managementm3:variety2 -0.354      -0.177      -0.354 -0.707 -0.177\nnitrogen140:managementm3:variety2 -0.177      -0.354      -0.354 -0.707 -0.177\nnitrogen50:managementm2:variety3  -0.354      -0.354      -0.354 -0.177 -0.707\nnitrogen80:managementm2:variety3  -0.354      -0.354      -0.354 -0.177 -0.707\nnitrogen110:managementm2:variety3 -0.707      -0.354      -0.354 -0.177 -0.707\nnitrogen140:managementm2:variety3 -0.354      -0.707      -0.354 -0.177 -0.707\nnitrogen50:managementm3:variety3  -0.354      -0.354      -0.177 -0.354 -0.354\nnitrogen80:managementm3:variety3  -0.354      -0.354      -0.177 -0.354 -0.354\nnitrogen110:managementm3:variety3 -0.707      -0.354      -0.177 -0.354 -0.354\nnitrogen140:managementm3:variety3 -0.354      -0.707      -0.177 -0.354 -0.354\n                                  mng3:3 n50:2:2 n80:2:2 n110:2:2 n140:2:2\nnitrogen50                                                                \nnitrogen80                                                                \nnitrogen110                                                               \nnitrogen140                                                               \nmanagementm2                                                              \nmanagementm3                                                              \nvariety2                                                                  \nvariety3                                                                  \nnitrogen50:managementm2                                                   \nnitrogen80:managementm2                                                   \nnitrogen110:managementm2                                                  \nnitrogen140:managementm2                                                  \nnitrogen50:managementm3                                                   \nnitrogen80:managementm3                                                   \nnitrogen110:managementm3                                                  \nnitrogen140:managementm3                                                  \nnitrogen50:variety2                                                       \nnitrogen80:variety2                                                       \nnitrogen110:variety2                                                      \nnitrogen140:variety2                                                      \nnitrogen50:variety3                                                       \nnitrogen80:variety3                                                       \nnitrogen110:variety3                                                      \nnitrogen140:variety3                                                      \nmanagementm2:variety2                                                     \nmanagementm3:variety2                                                     \nmanagementm2:variety3                                                     \nmanagementm3:variety3                                                     \nnitrogen50:managementm2:variety2  -0.177                                  \nnitrogen80:managementm2:variety2  -0.177  0.500                           \nnitrogen110:managementm2:variety2 -0.177  0.500   0.500                   \nnitrogen140:managementm2:variety2 -0.177  0.500   0.500   0.500           \nnitrogen50:managementm3:variety2  -0.354  0.500   0.250   0.250    0.250  \nnitrogen80:managementm3:variety2  -0.354  0.250   0.500   0.250    0.250  \nnitrogen110:managementm3:variety2 -0.354  0.250   0.250   0.500    0.250  \nnitrogen140:managementm3:variety2 -0.354  0.250   0.250   0.250    0.500  \nnitrogen50:managementm2:variety3  -0.354  0.500   0.250   0.250    0.250  \nnitrogen80:managementm2:variety3  -0.354  0.250   0.500   0.250    0.250  \nnitrogen110:managementm2:variety3 -0.354  0.250   0.250   0.500    0.250  \nnitrogen140:managementm2:variety3 -0.354  0.250   0.250   0.250    0.500  \nnitrogen50:managementm3:variety3  -0.707  0.250   0.125   0.125    0.125  \nnitrogen80:managementm3:variety3  -0.707  0.125   0.250   0.125    0.125  \nnitrogen110:managementm3:variety3 -0.707  0.125   0.125   0.250    0.125  \nnitrogen140:managementm3:variety3 -0.707  0.125   0.125   0.125    0.250  \n                                  n50:3:2 n80:3:2 n110:3:2 n140:3:2 n50:2:3\nnitrogen50                                                                 \nnitrogen80                                                                 \nnitrogen110                                                                \nnitrogen140                                                                \nmanagementm2                                                               \nmanagementm3                                                               \nvariety2                                                                   \nvariety3                                                                   \nnitrogen50:managementm2                                                    \nnitrogen80:managementm2                                                    \nnitrogen110:managementm2                                                   \nnitrogen140:managementm2                                                   \nnitrogen50:managementm3                                                    \nnitrogen80:managementm3                                                    \nnitrogen110:managementm3                                                   \nnitrogen140:managementm3                                                   \nnitrogen50:variety2                                                        \nnitrogen80:variety2                                                        \nnitrogen110:variety2                                                       \nnitrogen140:variety2                                                       \nnitrogen50:variety3                                                        \nnitrogen80:variety3                                                        \nnitrogen110:variety3                                                       \nnitrogen140:variety3                                                       \nmanagementm2:variety2                                                      \nmanagementm3:variety2                                                      \nmanagementm2:variety3                                                      \nmanagementm3:variety3                                                      \nnitrogen50:managementm2:variety2                                           \nnitrogen80:managementm2:variety2                                           \nnitrogen110:managementm2:variety2                                          \nnitrogen140:managementm2:variety2                                          \nnitrogen50:managementm3:variety2                                           \nnitrogen80:managementm3:variety2   0.500                                   \nnitrogen110:managementm3:variety2  0.500   0.500                           \nnitrogen140:managementm3:variety2  0.500   0.500   0.500                   \nnitrogen50:managementm2:variety3   0.250   0.125   0.125    0.125          \nnitrogen80:managementm2:variety3   0.125   0.250   0.125    0.125    0.500 \nnitrogen110:managementm2:variety3  0.125   0.125   0.250    0.125    0.500 \nnitrogen140:managementm2:variety3  0.125   0.125   0.125    0.250    0.500 \nnitrogen50:managementm3:variety3   0.500   0.250   0.250    0.250    0.500 \nnitrogen80:managementm3:variety3   0.250   0.500   0.250    0.250    0.250 \nnitrogen110:managementm3:variety3  0.250   0.250   0.500    0.250    0.250 \nnitrogen140:managementm3:variety3  0.250   0.250   0.250    0.500    0.250 \n                                  n80:2:3 n110:2:3 n140:2:3 n50:3:3 n80:3:3\nnitrogen50                                                                 \nnitrogen80                                                                 \nnitrogen110                                                                \nnitrogen140                                                                \nmanagementm2                                                               \nmanagementm3                                                               \nvariety2                                                                   \nvariety3                                                                   \nnitrogen50:managementm2                                                    \nnitrogen80:managementm2                                                    \nnitrogen110:managementm2                                                   \nnitrogen140:managementm2                                                   \nnitrogen50:managementm3                                                    \nnitrogen80:managementm3                                                    \nnitrogen110:managementm3                                                   \nnitrogen140:managementm3                                                   \nnitrogen50:variety2                                                        \nnitrogen80:variety2                                                        \nnitrogen110:variety2                                                       \nnitrogen140:variety2                                                       \nnitrogen50:variety3                                                        \nnitrogen80:variety3                                                        \nnitrogen110:variety3                                                       \nnitrogen140:variety3                                                       \nmanagementm2:variety2                                                      \nmanagementm3:variety2                                                      \nmanagementm2:variety3                                                      \nmanagementm3:variety3                                                      \nnitrogen50:managementm2:variety2                                           \nnitrogen80:managementm2:variety2                                           \nnitrogen110:managementm2:variety2                                          \nnitrogen140:managementm2:variety2                                          \nnitrogen50:managementm3:variety2                                           \nnitrogen80:managementm3:variety2                                           \nnitrogen110:managementm3:variety2                                          \nnitrogen140:managementm3:variety2                                          \nnitrogen50:managementm2:variety3                                           \nnitrogen80:managementm2:variety3                                           \nnitrogen110:managementm2:variety3  0.500                                   \nnitrogen140:managementm2:variety3  0.500   0.500                           \nnitrogen50:managementm3:variety3   0.250   0.250    0.250                  \nnitrogen80:managementm3:variety3   0.500   0.250    0.250    0.500         \nnitrogen110:managementm3:variety3  0.250   0.500    0.250    0.500   0.500 \nnitrogen140:managementm3:variety3  0.250   0.250    0.500    0.500   0.500 \n                                  n110:3:3\nnitrogen50                                \nnitrogen80                                \nnitrogen110                               \nnitrogen140                               \nmanagementm2                              \nmanagementm3                              \nvariety2                                  \nvariety3                                  \nnitrogen50:managementm2                   \nnitrogen80:managementm2                   \nnitrogen110:managementm2                  \nnitrogen140:managementm2                  \nnitrogen50:managementm3                   \nnitrogen80:managementm3                   \nnitrogen110:managementm3                  \nnitrogen140:managementm3                  \nnitrogen50:variety2                       \nnitrogen80:variety2                       \nnitrogen110:variety2                      \nnitrogen140:variety2                      \nnitrogen50:variety3                       \nnitrogen80:variety3                       \nnitrogen110:variety3                      \nnitrogen140:variety3                      \nmanagementm2:variety2                     \nmanagementm3:variety2                     \nmanagementm2:variety3                     \nmanagementm3:variety3                     \nnitrogen50:managementm2:variety2          \nnitrogen80:managementm2:variety2          \nnitrogen110:managementm2:variety2         \nnitrogen140:managementm2:variety2         \nnitrogen50:managementm3:variety2          \nnitrogen80:managementm3:variety2          \nnitrogen110:managementm3:variety2         \nnitrogen140:managementm3:variety2         \nnitrogen50:managementm2:variety3          \nnitrogen80:managementm2:variety3          \nnitrogen110:managementm2:variety3         \nnitrogen140:managementm2:variety3         \nnitrogen50:managementm3:variety3          \nnitrogen80:managementm3:variety3          \nnitrogen110:managementm3:variety3         \nnitrogen140:managementm3:variety3  0.500  \n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-2.72560280 -0.49133728 -0.05886579  0.60262300  1.95004985 \n\nNumber of Observations: 135\nNumber of Groups: \n                              block                 nitrogen %in% block \n                                  3                                  15 \nmanagement %in% nitrogen %in% block \n                                 45 \n\n\n\n\n\n\n\n6.2.2.1 boundary (singular) fit:\nWe get a message that the fit is singular. What does this mean? Some components of the variance-covariance matrix of the random effects are either exactly zero or exactly one. OK what about in English? Basically it means that the algorithm that fits the model parameters doesn’t have enough data to get a good estimate. This often happens when we are trying to fit a model that is too complex for the amount of data we have, or when the random effects are very small and can’t be distinguished from zero. We still get some output but this message should make us take a close look at the random effects and their variances.\n\n\n6.2.3 Check Model Assumptions\nModel Diagnostics: we are looking for a constant variance and normality of residuals.\n\nplot(model3, resid(., scaled=TRUE) ~ fitted(.), \n     xlab = \"fitted values\", ylab = \"studentized residuals\")\n\n\n\n\n\n\n\n\n\n\nFigure 6.2: Plot of residuals versus fitted values\n\n\n\n\nChecking normality requiring first extracting the model residuals with resid() and then generating a qq-plot and qq-line.\n\nqqnorm(resid(model3), main = NULL); qqline(resid(model3))\n\n\n\n\n\n\n\n\n\n\nFigure 6.3: QQ-plot of residuals\n\n\n\n\nOr we can do all at one using one function check_model().\n\ncheck_model(model3)\n\nConverting missing values (`NA`) into regular values currently not\n  possible for variables of class `NULL`.\n\n\n\n\n\n\n\n\n\n\n\n6.2.4 Inference\nAnalysis of variance\n\nanova(model3)\n\n                            numDF denDF   F-value p-value\n(Intercept)                     1    60 11188.782  &lt;.0001\nnitrogen                        4     8    29.730  0.0001\nmanagement                      2    20    49.114  &lt;.0001\nvariety                         2    60   235.654  &lt;.0001\nnitrogen:management             8    20     0.315  0.9509\nnitrogen:variety                8    60     4.045  0.0007\nmanagement:variety              4    60     2.203  0.0794\nnitrogen:management:variety    16    60     0.529  0.9210\n\n\nDetermining the estimates for each treatment factor (variety, nitrogen, management)\n\nemmeans(model3, ~ nitrogen)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n nitrogen emmean    SE df lower.CL upper.CL\n 0          5.38 0.139  2     4.79     5.98\n 50         6.22 0.139  2     5.62     6.82\n 80         7.00 0.139  2     6.40     7.59\n 110        6.94 0.139  2     6.34     7.53\n 140        7.23 0.139  2     6.64     7.83\n\nResults are averaged over the levels of: management, variety \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nemmeans(model3, ~ variety*management)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n variety management emmean    SE df lower.CL upper.CL\n 1       m1           4.41 0.172  2     3.67     5.16\n 2       m1           6.05 0.172  2     5.31     6.80\n 3       m1           7.23 0.172  2     6.49     7.97\n 1       m2           5.05 0.172  2     4.31     5.80\n 2       m2           6.22 0.172  2     5.48     6.97\n 3       m2           8.18 0.172  2     7.44     8.92\n 1       m3           5.91 0.172  2     5.17     6.65\n 2       m3           6.91 0.172  2     6.17     7.65\n 3       m3           9.01 0.172  2     8.27     9.75\n\nResults are averaged over the levels of: nitrogen \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\nIf the goal is to calculate estimates and know the statistics difference, that can be evaluated by using cld()\n\nemm &lt;- emmeans(model3, ~ nitrogen*variety) \n\nNOTE: Results may be misleading due to involvement in interactions\n\ncomparison &lt;- cld(emm, Letters = LETTERS, reversed = T) \ncomparison\n\n nitrogen variety emmean    SE df lower.CL upper.CL .group    \n 140      3         9.34 0.227  2     8.36    10.31  A        \n 80       3         8.56 0.227  2     7.59     9.54  AB       \n 110      3         8.44 0.227  2     7.47     9.42  AB       \n 50       3         7.88 0.227  2     6.90     8.86  ABC      \n 140      2         7.29 0.227  2     6.31     8.27   BCD     \n 110      2         6.92 0.227  2     5.95     7.90    CD     \n 80       2         6.59 0.227  2     5.61     7.57    CDEF   \n 0        3         6.48 0.227  2     5.50     7.46    CDE G  \n 50       2         6.02 0.227  2     5.04     6.99     DEFGH \n 80       1         5.83 0.227  2     4.86     6.81     DEFGHI\n 110      1         5.44 0.227  2     4.47     6.42      EFGHI\n 0        2         5.16 0.227  2     4.19     6.14       F HI\n 140      1         5.08 0.227  2     4.10     6.05        GHI\n 50       1         4.76 0.227  2     3.79     5.74          I\n 0        1         4.51 0.227  2     3.54     5.49          I\n\nResults are averaged over the levels of: management \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 15 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html",
    "href": "chapters/repeated-measures.html",
    "title": "11  Repeated measures mixed models",
    "section": "",
    "text": "12 Example Analysis\nFirst, we will start with the first example from a randomized complete block design with repeated measures.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Repeated Measures</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#model-diagnostcis",
    "href": "chapters/repeated-measures.html#model-diagnostcis",
    "title": "7  Repeated measures mixed models",
    "section": "7.1 Model Diagnostcis",
    "text": "7.1 Model Diagnostcis\n\ncheck_model(lm2)\n\nConverting missing values (`NA`) into regular values currently not\n  possible for variables of class `NULL`.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Repeated measures mixed models</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#post-hoc-analysis",
    "href": "chapters/repeated-measures.html#post-hoc-analysis",
    "title": "7  Repeated measures mixed models",
    "section": "7.2 Post-Hoc Analysis",
    "text": "7.2 Post-Hoc Analysis\n\nanova(lm2)\n\n                 numDF denDF   F-value p-value\n(Intercept)          1    64 231.49887  &lt;.0001\nvariety              3    12  69.53675  &lt;.0001\nfactweek             4    64 186.02244  &lt;.0001\nvariety:factweek    12    64   7.03546  &lt;.0001",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Repeated measures mixed models</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#emmeans",
    "href": "chapters/repeated-measures.html#emmeans",
    "title": "7  Repeated measures mixed models",
    "section": "7.3 Emmeans",
    "text": "7.3 Emmeans\n\nmean_1 &lt;- emmeans(lm2, ~ variety)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nmean_1\n\n variety emmean    SE df lower.CL upper.CL\n 1         3.50 0.288  4     2.70     4.29\n 2         4.59 0.288  4     3.79     5.39\n 3         4.63 0.288  4     3.84     5.43\n 4         4.61 0.288  4     3.81     5.40\n\nResults are averaged over the levels of: factweek \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\npairs(mean_1)\n\n contrast            estimate     SE df t.ratio p.value\n variety1 - variety2  -1.0940 0.0932 12 -11.738  &lt;.0001\n variety1 - variety3  -1.1380 0.0932 12 -12.210  &lt;.0001\n variety1 - variety4  -1.1092 0.0932 12 -11.901  &lt;.0001\n variety2 - variety3  -0.0440 0.0932 12  -0.472  0.9638\n variety2 - variety4  -0.0152 0.0932 12  -0.163  0.9984\n variety3 - variety4   0.0288 0.0932 12   0.309  0.9892\n\nResults are averaged over the levels of: factweek \nDegrees-of-freedom method: containment \nP value adjustment: tukey method for comparing a family of 4 estimates \n\nmean_2 &lt;- emmeans(lm2, ~ variety:factweek)\nmean_2\n\n variety factweek emmean    SE df lower.CL upper.CL\n 1       1          4.24 0.291  4     3.43     5.05\n 2       1          5.15 0.291  4     4.34     5.96\n 3       1          4.89 0.291  4     4.08     5.70\n 4       1          5.15 0.291  4     4.35     5.96\n 1       2          4.05 0.291  4     3.24     4.85\n 2       2          4.98 0.291  4     4.17     5.79\n 3       2          5.07 0.291  4     4.27     5.88\n 4       2          4.94 0.291  4     4.14     5.75\n 1       3          3.41 0.291  4     2.60     4.21\n 2       3          4.59 0.291  4     3.79     5.40\n 3       3          4.71 0.291  4     3.91     5.52\n 4       3          4.71 0.291  4     3.90     5.51\n 1       4          3.09 0.291  4     2.28     3.89\n 2       4          4.22 0.291  4     3.41     5.03\n 3       4          4.48 0.291  4     3.67     5.28\n 4       4          4.39 0.291  4     3.58     5.20\n 1       5          2.70 0.291  4     1.89     3.51\n 2       5          4.01 0.291  4     3.20     4.82\n 3       5          4.02 0.291  4     3.21     4.83\n 4       5          3.83 0.291  4     3.03     4.64\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\nSplit plot repeated measures\n\nusing mmrm() from mmrm package:\n\n\nThe example shown below contains yield data in a split-plot design. In this data set, we have:\nVariety: 2 levels\nFertilizer: 3 levels\nReplications: 4\nThe yield data was collected repeatedly from the same Reps over 5 ‘Sample_times’.\nThis can be analyze either using nlme or mmrm.\n\nlibrary(readr)\nYield &lt;- read_csv(here::here(\"data/Yield.csv\"))\n\nRows: 120 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Variety\ndbl (5): Sample_time, Fertilizer, Rep, pH, Yield\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(Yield)\n\n# A tibble: 6 × 6\n  Sample_time Variety Fertilizer   Rep    pH Yield\n        &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1           1 VAR1             1     1  7.07 0.604\n2           1 VAR1             1     2  7.06 0.595\n3           1 VAR1             1     3  7.08 3.15 \n4           1 VAR1             1     4  7.09 3.09 \n5           1 VAR1             2     1  7.13 2.42 \n6           1 VAR1             2     2  7.12 2.62 \n\nstr(Yield)\n\nspc_tbl_ [120 × 6] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Sample_time: num [1:120] 1 1 1 1 1 1 1 1 1 1 ...\n $ Variety    : chr [1:120] \"VAR1\" \"VAR1\" \"VAR1\" \"VAR1\" ...\n $ Fertilizer : num [1:120] 1 1 1 1 2 2 2 2 3 3 ...\n $ Rep        : num [1:120] 1 2 3 4 1 2 3 4 1 2 ...\n $ pH         : num [1:120] 7.07 7.06 7.08 7.09 7.13 7.12 7.15 7.14 7.18 7.18 ...\n $ Yield      : num [1:120] 0.604 0.595 3.145 3.091 2.415 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Sample_time = col_double(),\n  ..   Variety = col_character(),\n  ..   Fertilizer = col_double(),\n  ..   Rep = col_double(),\n  ..   pH = col_double(),\n  ..   Yield = col_double()\n  .. )\n - attr(*, \"problems\")=&lt;externalptr&gt;",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Repeated measures mixed models</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#model-fit",
    "href": "chapters/repeated-measures.html#model-fit",
    "title": "10  Repeated measures mixed models",
    "section": "10.2 Model fit",
    "text": "10.2 Model fit\nusing lme() from nlme package.\nTo fit model, we first need to convert Variety, Fertilizer, and Sample_time as factors. In addition, we need to create a new variable named ‘plot’ with a unique value for each plot. The plot will be used as a subject with repeated measures. The subject variable can be factor or numeric but the time (it could be year, or sample_time) has to be a factor.\n\ntable(Yield$Fertilizer, Yield$Variety) \n\n   \n    VAR1 VAR2\n  1   20   20\n  2   20   20\n  3   20   20",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Repeated measures mixed models</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#model-fit-1",
    "href": "chapters/repeated-measures.html#model-fit-1",
    "title": "10  Repeated measures mixed models",
    "section": "11.3 Model fit",
    "text": "11.3 Model fit\nLet’s say we want to fit a model using AR1 structure as shown in the RCBD repeated measures example. Previously, we used lme() from nlme package to fit the model. In this example, along with nlme() we will also mmrm() function from the mmrm package. In addition, instead of summary() function we will use tidy() function from the ‘broom.mixed’ packageto look at estimates of mixed and random effects. In this model we used tidy(). This will generate a tidy workflow in particular by providing standardized verbs that provide information on estimates, standard errors, confidence intervals, etc.\n\nnlmemmrm\n\n\n\ncorr_str1 = corAR1(form = ~ Sample_time|Rep/Variety/plot, value = 0.2, fixed = FALSE)\n\nmod &lt;- lme(Yield ~ Sample_time1*Variety*Fertilizer,\n                random = ~ 1|Rep/Variety/plot,\n                corr= corr_str1,\n                data = Yield, na.action= na.exclude)\n\n#summary(mod)\n\ntidy(mod)\n\n# A tibble: 30 × 7\n   effect term                      estimate std.error    df statistic   p.value\n   &lt;chr&gt;  &lt;chr&gt;                        &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 fixed  (Intercept)                  1.86      0.708    72     2.63  0.0105   \n 2 fixed  Sample_time12                0.515     0.688    72     0.748 0.457    \n 3 fixed  Sample_time13                0.787     0.674    72     1.17  0.247    \n 4 fixed  Sample_time14                1.35      0.675    72     2.00  0.0496   \n 5 fixed  Sample_time15                2.84      0.675    72     4.21  0.0000731\n 6 fixed  VarietyVAR2                 -0.996     0.861     3    -1.16  0.331    \n 7 fixed  Fertilizer2                  1.27      0.861    12     1.47  0.167    \n 8 fixed  Fertilizer3                  2.07      0.861    12     2.40  0.0333   \n 9 fixed  Sample_time12:VarietyVAR2    0.739     0.974    72     0.759 0.451    \n10 fixed  Sample_time13:VarietyVAR2    0.269     0.954    72     0.282 0.779    \n# ℹ 20 more rows\n\n\n\n\n\nfit1 &lt;- mmrm(\n  formula = Yield ~ Sample_time1*Variety*Fertilizer +  ar1(Sample_time1|Rep/plot),\n  data = Yield)\n\ntidy(fit1)\n\n# A tibble: 30 × 6\n   term                      estimate std.error    df statistic   p.value\n   &lt;chr&gt;                        &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 (Intercept)                  2.86      0.464 12.7      6.16  0.0000387\n 2 Sample_time12                0.656     0.310  1.81     2.12  0.182    \n 3 Sample_time13                1.40      0.414  2.29     3.39  0.0636   \n 4 Sample_time14                1.46      0.484  2.87     3.01  0.0605   \n 5 Sample_time15                2.47      0.549  3.14     4.50  0.0186   \n 6 VarietyVAR2                 -1.07      0.656 12.7     -1.63  0.128    \n 7 Fertilizer2                  1.67      0.656 12.7      2.55  0.0245   \n 8 Fertilizer3                  0.595     0.656 12.7      0.908 0.381    \n 9 Sample_time12:VarietyVAR2   -0.591     0.438  1.81    -1.35  0.321    \n10 Sample_time13:VarietyVAR2   -0.412     0.586  2.29    -0.704 0.546    \n# ℹ 20 more rows\n\n\n\n\n\n\n11.3.1 Model diagnostics\nWe will use check_model() from ‘performance()’ package to evaluate the model fitness of model fitted using nlme (mod1). However, the mmrm model class doesn’t work with performance package, so we will evalute the model diagnostics by plotting the residuals using base R functions.\n\nnlmemmrm\n\n\n\ncheck_model(mod, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\n## performance package doesn't work with mmrm model class.\nplot(residuals(fit1)) \n\n\n\n\n\n\n\nqqnorm(residuals(fit1)); qqline(residuals(fit1))\n\n\n\n\n\n\n\n\n\n\n\nThese diagnostic plots look great! The linearity and homogeneity of variance plots show no trend. The normal Q-Q plots for the overall residuals and for the random effects all fall on a straight line so we can be satisfied with that.\n\n\n11.3.2 Inference\n\nnlmemmrm\n\n\n\nanova(mod, type = \"marginal\")\n\n                                numDF denDF  F-value p-value\n(Intercept)                         1    72 6.899272  0.0105\nSample_time1                        4    72 5.318690  0.0008\nVariety                             1     3 1.338879  0.3310\nFertilizer                          2    12 2.936073  0.0916\nSample_time1:Variety                4    72 0.998154  0.4143\nSample_time1:Fertilizer             8    72 8.158884  &lt;.0001\nVariety:Fertilizer                  2    12 0.237417  0.7923\nSample_time1:Variety:Fertilizer     8    72 0.731698  0.6631\n\n\n\n\n\n#car::Anova(fit1, type = \"III\")\n#Anova.mmrm(fit1, type = \"III\")\n\n\n\n\nNext, we can estimate marginal means and confidence intervals for the independent variables using emmeans().\n\nnlmemmrm\n\n\n\nemmeans(mod,~ Fertilizer)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Fertilizer emmean    SE df lower.CL upper.CL\n 1            2.44 0.472  3    0.937     3.94\n 2            6.69 0.472  3    5.192     8.20\n 3            8.06 0.472  3    6.554     9.56\n\nResults are averaged over the levels of: Sample_time1, Variety \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nemmeans(mod,~ Variety)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Variety emmean    SE df lower.CL upper.CL\n VAR1      6.09 0.438  3     4.69     7.48\n VAR2      5.37 0.438  3     3.98     6.77\n\nResults are averaged over the levels of: Sample_time1, Fertilizer \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\nemmeans(fit1,~ Fertilizer)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Fertilizer emmean    SE   df lower.CL upper.CL\n 1            3.27 0.246 8.02     2.70     3.83\n 2            7.93 0.246 8.02     7.37     8.50\n 3            8.51 0.246 8.02     7.94     9.07\n\nResults are averaged over the levels of: Sample_time1, Variety, Rep \nConfidence level used: 0.95 \n\n emmeans(fit1,~ Variety)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Variety emmean  SE   df lower.CL upper.CL\n VAR1      6.89 0.2 8.02     6.42     7.35\n VAR2      6.25 0.2 8.02     5.79     6.71\n\nResults are averaged over the levels of: Sample_time1, Fertilizer, Rep \nConfidence level used: 0.95 \n\n\n\n\n\n\n\nAdd a link for further exploring emmeans and contrast statements.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Repeated measures mixed models</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#example-analysis",
    "href": "chapters/repeated-measures.html#example-analysis",
    "title": "10  Repeated measures mixed models",
    "section": "",
    "text": "10.1.1 RCBD Repeated Measures\nThe example shown below contains data from a sorghum trial laid out as a randomized complete block design (5 blocks) with variety (4 varieties) treatment effect. The response variable ‘y’ is the leaf area index assessed in five consecutive weeks on each plot.\nWe need to have time as numeric and factor variable. In the model, to assess the week effect, week was used as a factor (factweek). For the correlation matrix, week needs to be numeric (week).\n\ndat &lt;- agriTutorial::sorghum %&gt;%   \n  mutate(week = as.numeric(factweek),\n         block = as.character(varblock)) \n\n\nTable of variables in the data set\n\n\nblock\nblocking unit\n\n\nReplicate\nreplication unit\n\n\nWeek\nTime points when data was collected\n\n\nvariety\ntreatment factor, 4 levels\n\n\ny\nyield (lbs)\n\n\n\n\n10.1.1.1 Data Integrity Checks\nLet’s do preliminary data check including evaluating data structure, distribution of treatments, number of missing values, and distribution of response variable.\n\nstr(dat)\n\n'data.frame':   100 obs. of  9 variables:\n $ y        : num  5 4.84 4.02 3.75 3.13 4.42 4.3 3.67 3.23 2.83 ...\n $ variety  : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 1 1 1 1 1 ...\n $ Replicate: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 2 2 2 2 2 ...\n $ factweek : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 1 2 3 4 5 ...\n $ factplot : Factor w/ 20 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 2 2 2 2 2 ...\n $ varweek  : int  1 2 3 4 5 1 2 3 4 5 ...\n $ varblock : int  1 1 1 1 1 2 2 2 2 2 ...\n $ week     : num  1 2 3 4 5 1 2 3 4 5 ...\n $ block    : chr  \"1\" \"1\" \"1\" \"1\" ...\n\n\nIn this data, we have block, factplot, factweek as factor variables and y & week as numeric.\n\ntable(dat$variety, dat$block)\n\n   \n    1 2 3 4 5\n  1 5 5 5 5 5\n  2 5 5 5 5 5\n  3 5 5 5 5 5\n  4 5 5 5 5 5\n\n\nThe cross tabulation shows a equal number of varieties in each block.\n\nggplot(data = dat, aes(y = y, x = factweek, fill = variety)) +\n  geom_boxplot() +  \n  #scale_fill_brewer(palette=\"Dark2\") +\n  scale_fill_viridis_d(option = \"F\") +\n    theme_bw()\n\n\n\n\n\n\n\n\nLooks like variety ‘1’ has the lowest yield and showed drastic reduction in yield over weeks compared to other varieties.\nOne last step before we fit model is to look at the distribution of response variable.\n\nhist(dat$y, main = \"\", xlab = \"yield\")\n\n\n\n\n\n\n\n\n\n\nFigure 10.1: Histogram of the dependent variable.\n\n\n\n\n\n\n10.1.1.2 Model Building\nLet’s fit the basic model first using lme() from the nlme package.\n\nlm1 &lt;- lme(y ~ variety + factweek + variety:factweek, random = ~1|block/factplot,\n              data = dat,\n              na.action = na.exclude)\n\nThe model fitted above doesn’t account for the repeated measures effect. To account for the variation caused by repeated measurements, we can model the correlation among responses for a given subject which is plot (factor variable) in this case.\nBy adding this correlation structure, what we are implying is to keep each plot independent, but to allowing AR1 or compound symmetry correlations between responses for a given subject, here time variable is week and it must be numeric.\n\ncs1 &lt;- corAR1(form = ~ week|block/factplot,  value = 0.2, fixed = FALSE)\ncs2 &lt;- corCompSymm(form = ~ week|block/factplot,  value = 0.2, fixed = FALSE)\n\nIn the code chunk above, we fitted two correlation structures including AR1 and compound symmetry matrices. Next we will update the model lm1, with these two matrices. In nlme, please search the help tool to know more about functions for different correlation structure classes.\n\nlm2 &lt;- update(lm1, corr = cs1)\nlm3 &lt;- update(lm1, corr= cs2)\n\nNow let’s compare how model fitness differs among models with no correlation structure (lm1), with AR1 correlation structure (lm2), and with compound symmetry structure (lm3). We will compare these models by using anova() or by compare_performance() function from the ‘performance’ library.\n\nanovaperformance\n\n\n\nanova(lm1, lm2, lm3)\n\n    Model df       AIC      BIC   logLik   Test  L.Ratio p-value\nlm1     1 23 18.837478 73.62409 13.58126                        \nlm2     2 24 -2.347391 54.82125 25.17370 1 vs 2 23.18487  &lt;.0001\nlm3     3 24 20.837478 78.00612 13.58126                        \n\n\n\n\n\nresult &lt;- compare_performance(lm1, lm2, lm3)\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\nprint_md(result)\n\n\nComparison of Model Performance Indices\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nModel\nAIC (weights)\nAICc (weights)\nBIC (weights)\nR2 (cond.)\nR2 (marg.)\nICC\nRMSE\nSigma\n\n\n\n\nlm1\nlme\n-50.5 (&lt;.001)\n-36.0 (&lt;.001)\n9.4 (&lt;.001)\n0.99\n0.37\n0.98\n0.10\n0.13\n\n\nlm2\nlme\n-77.5 (&gt;.999)\n-61.5 (&gt;.999)\n-15.0 (&gt;.999)\n0.97\n0.41\n0.95\n0.15\n0.18\n\n\nlm3\nlme\n-48.5 (&lt;.001)\n-32.5 (&lt;.001)\n14.0 (&lt;.001)\n0.98\n0.37\n0.98\n0.11\n0.14\n\n\n\n\n\n\n\n\nWe prefer to chose model with lower AIC and BIC values. In this scenario, we will move forward with lm2 model containing AR1 structure.\nLet’s run a tidy() on lm2 model to look at the estimates for random and fixed effects.\n\ntidy(lm2)\n\nWarning in tidy.lme(lm2): ran_pars not yet implemented for multiple levels of\nnesting\n\n\n# A tibble: 20 × 7\n   effect term               estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  (Intercept)          4.24      0.291     64    14.6   5.44e-22\n 2 fixed  variety2             0.906     0.114     12     7.94  4.05e- 6\n 3 fixed  variety3             0.646     0.114     12     5.66  1.05e- 4\n 4 fixed  variety4             0.912     0.114     12     8.00  3.78e- 6\n 5 fixed  factweek2           -0.196     0.0571    64    -3.44  1.04e- 3\n 6 fixed  factweek3           -0.836     0.0755    64   -11.1   1.60e-16\n 7 fixed  factweek4           -1.16      0.0867    64   -13.3   4.00e-20\n 8 fixed  factweek5           -1.54      0.0943    64   -16.3   1.57e-24\n 9 fixed  variety2:factweek2   0.0280    0.0807    64     0.347 7.30e- 1\n10 fixed  variety3:factweek2   0.382     0.0807    64     4.73  1.26e- 5\n11 fixed  variety4:factweek2  -0.0140    0.0807    64    -0.174 8.63e- 1\n12 fixed  variety2:factweek3   0.282     0.107     64     2.64  1.03e- 2\n13 fixed  variety3:factweek3   0.662     0.107     64     6.20  4.55e- 8\n14 fixed  variety4:factweek3   0.388     0.107     64     3.64  5.55e- 4\n15 fixed  variety2:factweek4   0.228     0.123     64     1.86  6.77e- 2\n16 fixed  variety3:factweek4   0.744     0.123     64     6.06  7.86e- 8\n17 fixed  variety4:factweek4   0.390     0.123     64     3.18  2.28e- 3\n18 fixed  variety2:factweek5   0.402     0.133     64     3.01  3.70e- 3\n19 fixed  variety3:factweek5   0.672     0.133     64     5.04  4.11e- 6\n20 fixed  variety4:factweek5   0.222     0.133     64     1.66  1.01e- 1\n\n\n\n\n10.1.1.3 Check Model Assumptions\n\ncheck_model(lm2, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n10.1.1.4 Inference\nThe ANOVA table suggests a highly significant effect of the variety, week, and variety x week interaction effect.\n\nanova(lm2, type = \"marginal\")\n\n                 numDF denDF   F-value p-value\n(Intercept)          1    64 212.10509  &lt;.0001\nvariety              3    12  28.28895  &lt;.0001\nfactweek             4    64  74.79758  &lt;.0001\nvariety:factweek    12    64   7.03546  &lt;.0001\n\n\nWe can estimate the marginal means for variety and week effect and their interaction using emmeans() function.\n\nmean_1 &lt;- emmeans(lm2, ~ variety)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nmean_1\n\n variety emmean    SE df lower.CL upper.CL\n 1         3.50 0.288  4     2.70     4.29\n 2         4.59 0.288  4     3.79     5.39\n 3         4.63 0.288  4     3.84     5.43\n 4         4.61 0.288  4     3.81     5.40\n\nResults are averaged over the levels of: factweek \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nmean_2 &lt;- emmeans(lm2, ~ variety*factweek)\nmean_2\n\n variety factweek emmean    SE df lower.CL upper.CL\n 1       1          4.24 0.291  4     3.43     5.05\n 2       1          5.15 0.291  4     4.34     5.96\n 3       1          4.89 0.291  4     4.08     5.70\n 4       1          5.15 0.291  4     4.35     5.96\n 1       2          4.05 0.291  4     3.24     4.85\n 2       2          4.98 0.291  4     4.17     5.79\n 3       2          5.07 0.291  4     4.27     5.88\n 4       2          4.94 0.291  4     4.14     5.75\n 1       3          3.41 0.291  4     2.60     4.21\n 2       3          4.59 0.291  4     3.79     5.40\n 3       3          4.71 0.291  4     3.91     5.52\n 4       3          4.71 0.291  4     3.90     5.51\n 1       4          3.09 0.291  4     2.28     3.89\n 2       4          4.22 0.291  4     3.41     5.03\n 3       4          4.48 0.291  4     3.67     5.28\n 4       4          4.39 0.291  4     3.58     5.20\n 1       5          2.70 0.291  4     1.89     3.51\n 2       5          4.01 0.291  4     3.20     4.82\n 3       5          4.02 0.291  4     3.21     4.83\n 4       5          3.83 0.291  4     3.03     4.64\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\n\n\n\nTime variable\n\n\n\nHere is a quick step to make sure your fitting model correctly: make sure to have two time variables in your data one being numeric (e.g. ‘day’ as number) and other being factor/character(e.g. ‘day_factor’ as a factor/character). Where, numeric variable is used for fitting correlation matrix and factor/character variable used in model statement to evaluate the time variable effect on response variable.\n\n\n\n\n\n10.1.2 Split Plot Repeated Measures\nRecall, we have evaluated split plot design Chapter 5. In this example we will use the same methodology used in Chapter 5 and update it with repeated measures component.\nNext, let’s load “Yield” data. It is located here.\n\nYield &lt;- read.csv(here::here(\"data/Yield.csv\"))\n\nThis example contains yield data in a split-plot design. The yield data was collected repeatedly from the same Reps over 5 Sample_times. In this data set, we have:\n\nTable of variables in the data set\n\n\nRep\nreplication unit\n\n\nVariety\nMain plot, 2 levels\n\n\nFertilizer\nSplit plot, 3 levels\n\n\nYield\ncrop yield\n\n\nSample_time\ntime points for data collection\n\n\n\n\n10.1.2.1 Data Integrity Checks\nFirstly, we need to look at the class of variables in the data set.\n\nstr(Yield)\n\n'data.frame':   120 obs. of  6 variables:\n $ Sample_time: int  1 1 1 1 1 1 1 1 1 1 ...\n $ Variety    : chr  \"VAR1\" \"VAR1\" \"VAR1\" \"VAR1\" ...\n $ Fertilizer : int  1 1 1 1 2 2 2 2 3 3 ...\n $ Rep        : int  1 2 3 4 1 2 3 4 1 2 ...\n $ pH         : num  7.07 7.06 7.08 7.09 7.13 7.12 7.15 7.14 7.18 7.18 ...\n $ Yield      : num  0.604 0.595 3.145 3.091 2.415 ...\n\n\nWe will now convert the fertilizer and Rep into factor. In addition, we need to create a new factor variable (sample_time1) to analyze the time effect.\n\n\nFor lme(), independent variables in a character/factor form works fine. But, for mmrm() independent variables must be a factor. Thus, for sake of consistancy, we will be using independent variables in factor class.\n\nYield$Variety &lt;- factor(Yield$Variety) \nYield$Fertilizer &lt;- factor(Yield$Fertilizer) \nYield$Sample_time1 &lt;- factor(Yield$Sample_time) \nYield$Rep &lt;- factor(Yield$Rep)  \n\nTo fit model, we first need to convert Variety, Fertilizer, and Sample_time as factors. In addition, we need to create a new variable named ‘plot’ with a unique value for each plot. In addition, we need a create variable for each subject which is plot in this case and contains a unique value for each plot. The plot variable is needed to model the variation in each plot over the sampling time. The plot will be used as a subject with repeated measures. The subject variable can be factor or numeric but the time (it could be year, or sample_time) has to be a factor.\n\n##creating a plot variable \nYield$plot &lt;- factor(paste(Yield$Rep, Yield$Fertilizer, Yield$Variety, sep='-')) \nYield$Rep2 &lt;- factor(paste(Yield$Rep, Yield$Variety, sep='-')) \ntable(Yield$plot) \n\n\n1-1-VAR1 1-1-VAR2 1-2-VAR1 1-2-VAR2 1-3-VAR1 1-3-VAR2 2-1-VAR1 2-1-VAR2 \n       5        5        5        5        5        5        5        5 \n2-2-VAR1 2-2-VAR2 2-3-VAR1 2-3-VAR2 3-1-VAR1 3-1-VAR2 3-2-VAR1 3-2-VAR2 \n       5        5        5        5        5        5        5        5 \n3-3-VAR1 3-3-VAR2 4-1-VAR1 4-1-VAR2 4-2-VAR1 4-2-VAR2 4-3-VAR1 4-3-VAR2 \n       5        5        5        5        5        5        5        5 \n\n\n\ntable(Yield$Fertilizer, Yield$Variety) \n\n   \n    VAR1 VAR2\n  1   20   20\n  2   20   20\n  3   20   20\n\n\nLooks like a well balanced design with 2 variety treatments and 3 fertilizer treatments.\nBefore fitting a model, let’s check the distribution of the response variable.\n\n\n\n\n\n\n\n\n\nFigure 10.2: Histogram of the dependent variable.\n\n\n\n\n\nhist(Yield$Yield)\n\n\n\n10.1.2.2 Model fit\nThis data can be analyze either using nlme or mmrm.\nusing lme() from nlme package.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Repeated measures mixed models</span>"
    ]
  },
  {
    "objectID": "chapters/lattice-design.html#example-analysis",
    "href": "chapters/lattice-design.html#example-analysis",
    "title": "10  Latin Design",
    "section": "10.2 Example Analysis",
    "text": "10.2 Example Analysis\nLet’s start the analysis firstly by loading the required libraries:\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans); library(performance)\nlibrary(dplyr); library(broom.mixed); library(agridat); library(desplot)\n\n\n\n\nlibrary(nlme); library(broom.mixed); library(emmeans); library(performance)\nlibrary(dplyr); library(agridat); library(desplot)\n\n\n\n\nThe data used in this example is extracted from the agridat package. This data is a balanced lattice experiment in cotton containing 16 treatments in a 4x4 layout in each of 5 replicates. The response variable in this data is the percentage of young flower buds attacked by boll weevils.\n\ndat3 &lt;- agridat::cochran.lattice\nhead(dat3)\n\n     y rep row col trt\n1  9.0  R1   1   1 T10\n2 20.3  R1   1   2 T12\n3 17.7  R1   1   3 T09\n4 26.3  R1   1   4 T11\n5  4.7  R1   2   1 T02\n6  9.0  R1   2   2 T04\n\n\n\nTable of variables in the data set\n\n\nrep\nreplication unit\n\n\ntrt\ntreatment factor\n\n\nrow\nrow position for each plot\n\n\ncol\ncolumn position for each plot\n\n\ny\n% of young flower buds attacked\n\n\n\n\nstr(dat3)\n\n'data.frame':   80 obs. of  5 variables:\n $ y  : num  9 20.3 17.7 26.3 4.7 9 7.3 8.3 9 6.7 ...\n $ rep: Factor w/ 5 levels \"R1\",\"R2\",\"R3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ row: int  1 1 1 1 2 2 2 2 3 3 ...\n $ col: int  1 2 3 4 1 2 3 4 1 2 ...\n $ trt: Factor w/ 16 levels \"T01\",\"T02\",\"T03\",..: 10 12 9 11 2 4 1 3 14 16 ...\n\n\n\nlibrary(desplot)\ndesplot(dat3, y~row*col|rep,\n        text=trt, # aspect unknown, should be 2 or .5\n         main=\"cochran.lattice\")\n\n\n\n\n\n\n\n\n\ndat &lt;- burgueno.rowcol\nhead(dat)\n\n  rep row col gen  yield\n1  R1   1   1 G05 1.5318\n2  R1   1   2 G19 2.2211\n3  R1   1   3 G55 1.4589\n4  R1   1   4 G23 1.2436\n5  R1   1   5 G27 1.8989\n6  R1   1   6 G38 1.3366\n\n\nHere, we can use the desplot() function from the ‘desplot’ package to visualize the plot plan from lattice design.\n\n# Two contiuous reps in 8 rows, 16 columns\ndesplot(dat, yield ~ col*row,\n        out1=rep, # aspect unknown\n        text=gen, shorten=\"none\", cex=0.75,\n        main=\"lattice design\")\n\n\n\n\n\n\n\n\n\n10.2.1 Data integrity checks\n\n\n\n\n\n\nHistogram of the dependent variable.\n\n\n\n\n\n10.2.2 Data integrity checks\n\nstr(dat)\n\n'data.frame':   128 obs. of  5 variables:\n $ rep  : Factor w/ 2 levels \"R1\",\"R2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ row  : int  1 1 1 1 1 1 1 1 1 1 ...\n $ col  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ gen  : Factor w/ 64 levels \"G01\",\"G02\",\"G03\",..: 5 19 55 23 27 38 64 44 14 13 ...\n $ yield: num  1.53 2.22 1.46 1.24 1.9 ...\n\n\n\n#dat2$row &lt;- as.factor(dat2$row)\n#dat2$col &lt;- as.factor(dat2$col)\n\ndat$row &lt;- as.factor(dat$row)\ndat$col &lt;- as.factor(dat$col)\n\n\nhist(dat$yield, main = \"\", xlab = \"yield\")\n\n\n\n\n\n\n\n\n\n\nFigure 10.1: Histogram of the dependent variable.\n\n\n\n\n\nlme4nlme\n\n\n\nm1_a &lt;- lmer(yield ~ gen + (1|row) + (1|col:rep) + (1|rep),\n           data = dat,\n           na.action = na.exclude)\nsummary(m1_a) \n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: yield ~ gen + (1 | row) + (1 | col:rep) + (1 | rep)\n   Data: dat\n\nREML criterion at convergence: 168.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.1392 -0.4036  0.0000  0.4036  1.1392 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n col:rep  (Intercept) 0.2189   0.4679  \n row      (Intercept) 0.1646   0.4057  \n rep      (Intercept) 0.1916   0.4378  \n Residual             0.1796   0.4238  \nNumber of obs: 128, groups:  col:rep, 32; row, 8; rep, 2\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(&gt;|t|)   \n(Intercept)  2.325589   0.509444  4.216418   4.565   0.0091 **\ngenG02       0.349182   0.523392 38.995063   0.667   0.5086   \ngenG03       0.371260   0.531293 41.034622   0.699   0.4886   \ngenG04       0.475842   0.527614 43.470779   0.902   0.3721   \ngenG05      -0.601225   0.513762 38.892580  -1.170   0.2490   \ngenG06       0.574869   0.527284 40.643852   1.090   0.2820   \ngenG07       0.244490   0.534996 42.592433   0.457   0.6500   \ngenG08       0.606486   0.527879 43.602192   1.149   0.2569   \ngenG09       0.010630   0.525899 42.747488   0.020   0.9840   \ngenG10       0.509855   0.527357 43.301826   0.967   0.3390   \ngenG11       0.463014   0.535708 42.977451   0.864   0.3922   \ngenG12       0.340678   0.517892 43.399748   0.658   0.5141   \ngenG13      -0.041178   0.483241 34.257292  -0.085   0.9326   \ngenG14       0.132480   0.523679 39.142513   0.253   0.8016   \ngenG15       0.385104   0.526349 43.013937   0.732   0.4683   \ngenG16      -0.148379   0.483194 34.227894  -0.307   0.7606   \ngenG17      -0.016143   0.536067 42.926995  -0.030   0.9761   \ngenG18       0.358218   0.526325 42.993175   0.681   0.4998   \ngenG19       0.734743   0.533892 41.978194   1.376   0.1761   \ngenG20       0.212299   0.521319 40.753106   0.407   0.6860   \ngenG21       0.150212   0.525313 39.814746   0.286   0.7764   \ngenG22      -0.039713   0.497948 37.586406  -0.080   0.9369   \ngenG23       0.325771   0.484472 34.701705   0.672   0.5058   \ngenG24      -0.194686   0.524899 39.587776  -0.371   0.7127   \ngenG25       0.202462   0.514979 39.325398   0.393   0.6963   \ngenG26       0.089411   0.483188 34.221812   0.185   0.8543   \ngenG27       0.218244   0.536631 43.262734   0.407   0.6862   \ngenG28      -0.284235   0.524825 39.538457  -0.542   0.5911   \ngenG29       0.047110   0.515184 39.470339   0.091   0.9276   \ngenG30      -0.213561   0.484574 34.769665  -0.441   0.6621   \ngenG31      -0.034873   0.535702 42.734026  -0.065   0.9484   \ngenG32       1.000827   0.535020 42.606153   1.871   0.0683 . \ngenG33       0.252960   0.507660 40.377683   0.498   0.6210   \ngenG34       0.242054   0.537217 43.562588   0.451   0.6545   \ngenG35       0.213005   0.515262 39.472578   0.413   0.6816   \ngenG36       0.362633   0.525014 42.290855   0.691   0.4935   \ngenG37       0.282612   0.530472 40.615244   0.533   0.5971   \ngenG38      -0.125437   0.537059 43.462082  -0.234   0.8164   \ngenG39       1.261824   0.537018 43.466180   2.350   0.0234 * \ngenG40       0.346211   0.536855 43.369657   0.645   0.5224   \ngenG41      -0.255692   0.522110 41.202626  -0.490   0.6269   \ngenG42       0.744461   0.483144 34.195322   1.541   0.1326   \ngenG43       0.489907   0.535381 42.795749   0.915   0.3653   \ngenG44       0.445400   0.527076 43.156823   0.845   0.4027   \ngenG45       0.728849   0.531497 41.172558   1.371   0.1777   \ngenG46       0.008386   0.527720 43.541892   0.016   0.9874   \ngenG47      -0.173693   0.525585 42.635003  -0.330   0.7427   \ngenG48       0.364422   0.523287 41.600011   0.696   0.4900   \ngenG49       0.283642   0.535631 42.924562   0.530   0.5992   \ngenG50      -0.160189   0.534315 42.227391  -0.300   0.7658   \ngenG51       0.127042   0.526978 43.139993   0.241   0.8106   \ngenG52      -0.277455   0.534469 42.326672  -0.519   0.6064   \ngenG53      -0.401069   0.525510 42.532998  -0.763   0.4496   \ngenG54      -0.221400   0.533965 42.027349  -0.415   0.6805   \ngenG55       0.479012   0.524627 42.079587   0.913   0.3664   \ngenG56       0.232007   0.536959 43.388811   0.432   0.6678   \ngenG57      -0.153493   0.526605 42.888008  -0.291   0.7721   \ngenG58       0.545562   0.523508 41.715186   1.042   0.3034   \ngenG59       0.691577   0.536175 43.006805   1.290   0.2040   \ngenG60      -0.221321   0.517482 37.741262  -0.428   0.6713   \ngenG61       0.205307   0.514087 39.066489   0.399   0.6918   \ngenG62       0.341897   0.534904 42.530411   0.639   0.5261   \ngenG63       0.701913   0.517290 40.377937   1.357   0.1823   \ngenG64       0.066248   0.526946 40.462383   0.126   0.9006   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 64 &gt; 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\n\n\n\ndat$dummy &lt;- factor(1)\n\nm1_b &lt;- lme(yield ~ gen,\n          random = list(dummy = pdBlocked(list(\n                                  pdIdent(~row - 1),\n                                  pdIdent(~rep - 1),\n                                  pdIdent(~col:rep)))),\n          data = dat, \n          na.action = na.exclude)\n\nVarCorr(m1_b)\n\ndummy = pdIdent(row - 1), pdIdent(rep - 1), pdIdent(col:rep) \n            Variance  StdDev   \nrow1        0.1645986 0.4057076\nrow2        0.1645986 0.4057076\nrow3        0.1645986 0.4057076\nrow4        0.1645986 0.4057076\nrow5        0.1645986 0.4057076\nrow6        0.1645986 0.4057076\nrow7        0.1645986 0.4057076\nrow8        0.1645986 0.4057076\nrepR1       0.1916416 0.4377688\nrepR2       0.1916416 0.4377688\n(Intercept) 0.2188853 0.4678517\ncol1:repR1  0.2188853 0.4678517\ncol2:repR1  0.2188853 0.4678517\ncol3:repR1  0.2188853 0.4678517\ncol4:repR1  0.2188853 0.4678517\ncol5:repR1  0.2188853 0.4678517\ncol6:repR1  0.2188853 0.4678517\ncol7:repR1  0.2188853 0.4678517\ncol8:repR1  0.2188853 0.4678517\ncol9:repR1  0.2188853 0.4678517\ncol10:repR1 0.2188853 0.4678517\ncol11:repR1 0.2188853 0.4678517\ncol12:repR1 0.2188853 0.4678517\ncol13:repR1 0.2188853 0.4678517\ncol14:repR1 0.2188853 0.4678517\ncol15:repR1 0.2188853 0.4678517\ncol16:repR1 0.2188853 0.4678517\ncol1:repR2  0.2188853 0.4678517\ncol2:repR2  0.2188853 0.4678517\ncol3:repR2  0.2188853 0.4678517\ncol4:repR2  0.2188853 0.4678517\ncol5:repR2  0.2188853 0.4678517\ncol6:repR2  0.2188853 0.4678517\ncol7:repR2  0.2188853 0.4678517\ncol8:repR2  0.2188853 0.4678517\ncol9:repR2  0.2188853 0.4678517\ncol10:repR2 0.2188853 0.4678517\ncol11:repR2 0.2188853 0.4678517\ncol12:repR2 0.2188853 0.4678517\ncol13:repR2 0.2188853 0.4678517\ncol14:repR2 0.2188853 0.4678517\ncol15:repR2 0.2188853 0.4678517\ncol16:repR2 0.2188853 0.4678517\nResidual    0.1795838 0.4237733\n\n\n\n\n\n\n\n10.2.3 Check Model Assumptions\nRemember those iid assumptions? Let’s make sure we actually met them.\n\ncheck_model(m1_a)\n\n\n\n\n\n\n\n\n\n\n10.2.4 Inference\nEstimates for each treatment level can be obtained with the ‘emmeans’ package. And we can extract the ANOVA table from model using anova() function.\n\nanova(m1_a)\n\nType III Analysis of Variance Table with Satterthwaite's method\n    Sum Sq Mean Sq NumDF  DenDF F value Pr(&gt;F)\ngen 9.5245 0.15118    63 34.322  0.8418 0.7274\n\n\nEstimated marginal means\n\nemmeans(m1_a, ~ gen)\n\n gen emmean    SE   df lower.CL upper.CL\n G01   2.33 0.515 4.21    0.923     3.73\n G02   2.67 0.515 4.21    1.272     4.08\n G03   2.70 0.515 4.21    1.294     4.10\n G04   2.80 0.515 4.21    1.399     4.20\n G05   1.72 0.515 4.21    0.322     3.13\n G06   2.90 0.515 4.20    1.497     4.30\n G07   2.57 0.515 4.21    1.167     3.97\n G08   2.93 0.515 4.21    1.529     4.33\n G09   2.34 0.515 4.20    0.933     3.74\n G10   2.84 0.515 4.20    1.432     4.24\n G11   2.79 0.515 4.20    1.385     4.19\n G12   2.67 0.515 4.19    1.263     4.07\n G13   2.28 0.515 4.21    0.882     3.69\n G14   2.46 0.515 4.20    1.055     3.86\n G15   2.71 0.515 4.20    1.307     4.11\n G16   2.18 0.515 4.21    0.775     3.58\n G17   2.31 0.515 4.19    0.906     3.71\n G18   2.68 0.515 4.21    1.281     4.09\n G19   3.06 0.514 4.18    1.657     4.46\n G20   2.54 0.515 4.20    1.135     3.94\n G21   2.48 0.515 4.19    1.072     3.88\n G22   2.29 0.515 4.21    0.883     3.69\n G23   2.65 0.515 4.21    1.249     4.05\n G24   2.13 0.515 4.19    0.727     3.53\n G25   2.53 0.515 4.20    1.125     3.93\n G26   2.42 0.515 4.21    1.013     3.82\n G27   2.54 0.515 4.20    1.141     3.95\n G28   2.04 0.515 4.20    0.638     3.44\n G29   2.37 0.515 4.20    0.970     3.78\n G30   2.11 0.515 4.19    0.708     3.52\n G31   2.29 0.514 4.18    0.887     3.69\n G32   3.33 0.515 4.20    1.923     4.73\n G33   2.58 0.514 4.19    1.175     3.98\n G34   2.57 0.515 4.21    1.165     3.97\n G35   2.54 0.515 4.20    1.136     3.94\n G36   2.69 0.515 4.20    1.285     4.09\n G37   2.61 0.515 4.20    1.205     4.01\n G38   2.20 0.515 4.21    0.797     3.60\n G39   3.59 0.515 4.20    2.184     4.99\n G40   2.67 0.515 4.21    1.269     4.07\n G41   2.07 0.514 4.18    0.666     3.47\n G42   3.07 0.515 4.21    1.668     4.47\n G43   2.82 0.515 4.20    1.412     4.22\n G44   2.77 0.515 4.20    1.368     4.17\n G45   3.05 0.515 4.20    1.651     4.46\n G46   2.33 0.515 4.21    0.931     3.74\n G47   2.15 0.515 4.20    0.749     3.56\n G48   2.69 0.515 4.19    1.286     4.09\n G49   2.61 0.515 4.22    1.207     4.01\n G50   2.17 0.514 4.19    0.762     3.57\n G51   2.45 0.514 4.19    1.049     3.86\n G52   2.05 0.514 4.19    0.644     3.45\n G53   1.92 0.515 4.19    0.521     3.33\n G54   2.10 0.514 4.18    0.700     3.51\n G55   2.80 0.514 4.18    1.401     4.21\n G56   2.56 0.515 4.20    1.155     3.96\n G57   2.17 0.515 4.19    0.769     3.58\n G58   2.87 0.514 4.18    1.467     4.28\n G59   3.02 0.514 4.19    1.613     4.42\n G60   2.10 0.516 4.22    0.702     3.51\n G61   2.53 0.515 4.21    1.128     3.93\n G62   2.67 0.514 4.18    1.264     4.07\n G63   3.03 0.514 4.19    1.624     4.43\n G64   2.39 0.515 4.19    0.988     3.80\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\n\nPatterson, H. D., and E. R. Williams. 1976. “A New Class of Resolvable Incomplete Block Designs.” Biometrika 63 (1): 83–92. https://doi.org/10.2307/2335087.\n\n\nYates, F. 1936. “A New Method of Arranging Variety Trials Involving a Large Number of Varieties.” J Agric Sci 26: 424–55.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Latin Design</span>"
    ]
  },
  {
    "objectID": "chapters/split-split-plot.html",
    "href": "chapters/split-split-plot.html",
    "title": "7  Split-Split Plot Design",
    "section": "",
    "text": "7.1 Details for split-split plot designs\nThe statistical model structure this design:\n\\[y_{ijk} = \\mu + \\rho_j +  \\alpha_i + \\beta_k + (\\alpha_i\\beta_k) + \\tau_n + (\\alpha_i\\tau_n) + (\\tau_n\\beta_k) + (\\alpha_i\\beta_k\\tau_n) + \\epsilon_{ijk} + \\delta_{ijkn}\\] Where:\n\\(\\mu\\)= overall experimental mean, \\(\\alpha\\) = main effect of whole plot (fixed), \\(\\beta\\) = main effect of subplot (fixed), \\(\\tau\\) = main effect of sub-subplot, \\(\\epsilon_{ij}\\) = whole plot error, \\(\\delta_{ijk}\\) = subplot error.\n\\[ \\epsilon \\sim N(0, \\sigma_\\epsilon)\\]\n\\[\\ \\delta  \\sim N(0, \\sigma_\\delta)\\]\nThe assumptions of the model includes normal distribution of both the error and the rep effects with a mean of zero and standard deviations of \\(\\sigma_\\epsilon\\) and \\(\\sigma_\\delta\\), respectively.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Split-Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/split-split-plot.html#example-analysis",
    "href": "chapters/split-split-plot.html#example-analysis",
    "title": "7  Split-Split Plot Design",
    "section": "7.2 Example Analysis",
    "text": "7.2 Example Analysis\n\nlme4nlme\n\n\n\nlibrary(dplyr)\nlibrary(lme4); library(lmerTest); library(broom.mixed)\nlibrary(emmeans); library(performance)\n\n\n\n\nlibrary(dplyr)\nlibrary(nlme); library(emmeans)\nlibrary(broom.mixed); library(performance)\n\n\n\n\nIn this example, we have a rice yield data from ‘agricolae’ package. This consists of of 3 different rice varieties grown under 3 management practices and 5 Nitrogen levels in the split-split design. Here, we are using rice yield data from the (agricolae) package.\n\nrice &lt;- read.csv(here::here(\"data\", \"rice_ssp.csv\"))\n\n\nTable of variables in the rice data set\n\n\n\n\n\n\nblock\nblocking unit\n\n\nnitrogen\ndifferent nitrogen fertilizer rates as main plot with 5 levels\n\n\nmanagement\nmanagement practices as subplot with 3 levels\n\n\nvariety\ncrop variety being a sub-subplot with 3 levels\n\n\nyield\nyield (bushels per acre)\n\n\n\n\n7.2.1 Data integrity checks\nLook at the structure of the data, class of block, nitrogen, management and variety should be a character/factor and yield should be numeric.\n\nstr(rice)\n\n'data.frame':   135 obs. of  6 variables:\n $ X         : int  1 2 3 4 5 6 7 8 9 10 ...\n $ block     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ nitrogen  : int  0 0 0 50 50 50 80 80 80 110 ...\n $ management: chr  \"m1\" \"m2\" \"m3\" \"m1\" ...\n $ variety   : int  1 1 1 1 1 1 1 1 1 1 ...\n $ yield     : num  3.32 3.77 4.66 3.19 3.62 ...\n\n\nConvert block, nitrogen, variety, and management to characters.\n\nrice$block &lt;- as.character(rice$block)\nrice$nitrogen &lt;- as.character(rice$nitrogen)\nrice$management &lt;- as.character(rice$management)\nrice$variety &lt;- as.character(rice$variety)\n\nNext, run a cross tabulations to check balance of observations across independent variables:\n\ntable(rice$variety, rice$nitrogen, rice$management)\n\n, ,  = m1\n\n   \n    0 110 140 50 80\n  1 3   3   3  3  3\n  2 3   3   3  3  3\n  3 3   3   3  3  3\n\n, ,  = m2\n\n   \n    0 110 140 50 80\n  1 3   3   3  3  3\n  2 3   3   3  3  3\n  3 3   3   3  3  3\n\n, ,  = m3\n\n   \n    0 110 140 50 80\n  1 3   3   3  3  3\n  2 3   3   3  3  3\n  3 3   3   3  3  3\n\n\nIt looks perfectly balanced, with exactly 3 observation per treatment group.\nLast, check the distribution of the dependent variable by plotting a histogram using hist().\n\nhist(rice$yield)\n\n\n\n\n\n\n\n\n\n\nFigure 7.1: Histogram of the dependent variable.\n\n\n\n\n\n\n7.2.2 Model Building\nThe variance analysis of a split-split plot design is divided into three parts: the main-plot, subplot and sub-subplot analysis. We can use the nesting notation in the random part because nitrogen and management are nested in blocks. We can do blocks as fixed or random.\n\nlme4nlme\n\n\n\nmodel_lmer &lt;- lmer(yield ~ nitrogen * management * variety +\n                     (1 | block / nitrogen / management),\n                   data = rice,\n                   na.action = na.exclude)\n\nboundary (singular) fit: see help('isSingular')\n\ntidy(model_lmer)\n\n# A tibble: 49 × 8\n   effect group term                 estimate std.error statistic    df  p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;                   &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)             3.90      0.386    10.1    89.7 1.79e-16\n 2 fixed  &lt;NA&gt;  nitrogen110             0.753     0.545     1.38   89.7 1.71e- 1\n 3 fixed  &lt;NA&gt;  nitrogen140             0.165     0.545     0.302  89.7 7.63e- 1\n 4 fixed  &lt;NA&gt;  nitrogen50              0.335     0.545     0.614  89.7 5.41e- 1\n 5 fixed  &lt;NA&gt;  nitrogen80              1.33      0.545     2.44   89.7 1.68e- 2\n 6 fixed  &lt;NA&gt;  managementm2            0.420     0.540     0.779  80.0 4.38e- 1\n 7 fixed  &lt;NA&gt;  managementm3            1.43      0.540     2.65   80.0 9.82e- 3\n 8 fixed  &lt;NA&gt;  variety2                1.45      0.540     2.68   80.0 8.83e- 3\n 9 fixed  &lt;NA&gt;  variety3                1.48      0.540     2.74   80.0 7.49e- 3\n10 fixed  &lt;NA&gt;  nitrogen110:managem…    0.377     0.763     0.493  80.0 6.23e- 1\n# ℹ 39 more rows\n\n\n\n\n\nmodel_lme &lt;- lme(yield ~ nitrogen*management*variety,\n                  random = ~ 1|block/nitrogen/management,\n                  data = rice, \n                  na.action = na.exclude)\ntidy(model_lme)\n\nWarning in tidy.lme(model_lme): ran_pars not yet implemented for multiple\nlevels of nesting\n\n\n# A tibble: 45 × 7\n   effect term                     estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt;                       &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  (Intercept)                 3.90      0.386    60    10.1   1.43e-14\n 2 fixed  nitrogen110                 0.753     0.545     8     1.38  2.05e- 1\n 3 fixed  nitrogen140                 0.165     0.545     8     0.302 7.70e- 1\n 4 fixed  nitrogen50                  0.335     0.545     8     0.614 5.56e- 1\n 5 fixed  nitrogen80                  1.33      0.545     8     2.44  4.08e- 2\n 6 fixed  managementm2                0.420     0.540    20     0.779 4.45e- 1\n 7 fixed  managementm3                1.43      0.540    20     2.65  1.55e- 2\n 8 fixed  variety2                    1.45      0.540    60     2.68  9.38e- 3\n 9 fixed  variety3                    1.48      0.540    60     2.74  7.99e- 3\n10 fixed  nitrogen110:managementm2    0.377     0.763    20     0.493 6.27e- 1\n# ℹ 35 more rows\n\n\n\n\n\n\n\nboundary (singular) fit: We get a message that the fit is singular. What does this mean? Some components of the variance-covariance matrix of the random effects are either exactly zero or exactly one. OK what about in English? Basically it means that the algorithm that fits the model parameters doesn’t have enough data to get a good estimate. This often happens when we are trying to fit a model that is too complex for the amount of data we have, or when the random effects are very small and can’t be distinguished from zero. We still get some output but this message should make us take a close look at the random effects and their variances.\n\n\n7.2.3 Check Model Assumptions\nModel Diagnostics: we are looking for a constant variance and normality of residuals. Checking normality requiring first extracting the model residuals and then generating a qq-plot and qq-line. we can do all at one using one function check_model().\n\nlme4nlme\n\n\n\ncheck_model(model_lmer, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\ncheck_model(model_lme, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\nHere, we didn’t observe any anomaly in model assumptions.\n\n\n7.2.4 Inference\nAnalysis of variance\n\nlme4nlme\n\n\n\ncar::Anova(model_lmer, type = 'III', test.statistic=\"F\")\n\nAnalysis of Deviance Table (Type III Wald F tests with Kenward-Roger df)\n\nResponse: yield\n                                   F Df Df.res  Pr(&gt;F)    \n(Intercept)                 102.1211  1 89.706 &lt; 2e-16 ***\nnitrogen                      1.9160  4 86.474 0.11496    \nmanagement                    3.6962  2 77.143 0.02932 *  \nvariety                       4.9129  2 60.000 0.01057 *  \nnitrogen:management           0.2118  8 77.143 0.98797    \nnitrogen:variety              2.6681  8 60.000 0.01413 *  \nmanagement:variety            2.2193  4 60.000 0.07754 .  \nnitrogen:management:variety   0.5289 16 60.000 0.92105    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(model_lme, type = \"marginal\")\n\n                            numDF denDF   F-value p-value\n(Intercept)                     1    60 102.12108  &lt;.0001\nnitrogen                        4     8   1.91603  0.2012\nmanagement                      2    20   3.69617  0.0431\nvariety                         2    60   4.91295  0.0106\nnitrogen:management             8    20   0.21177  0.9850\nnitrogen:variety                8    60   2.66810  0.0141\nmanagement:variety              4    60   2.21929  0.0775\nnitrogen:management:variety    16    60   0.52893  0.9210\n\n\n\n\n\nWe can estimated the marginal means for each treatment factor (variety, nitrogen, management) which will averaged across other factors. and their interaction.\n\nlme4nlme\n\n\n\nemmeans(model_lmer, ~ nitrogen)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n nitrogen emmean    SE df lower.CL upper.CL\n 0          5.38 0.139 10     5.08     5.69\n 110        6.94 0.139 10     6.63     7.25\n 140        7.23 0.139 10     6.93     7.54\n 50         6.22 0.139 10     5.91     6.53\n 80         7.00 0.139 10     6.69     7.30\n\nResults are averaged over the levels of: management, variety \nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\nemmeans(model_lmer, ~ nitrogen*variety|management)\n\nmanagement = m1:\n nitrogen variety emmean    SE   df lower.CL upper.CL\n 0        1         3.90 0.386 89.7     3.13     4.66\n 110      1         4.65 0.386 89.7     3.88     5.42\n 140      1         4.06 0.386 89.7     3.30     4.83\n 50       1         4.23 0.386 89.7     3.47     5.00\n 80       1         5.23 0.386 89.7     4.46     5.99\n 0        2         5.35 0.386 89.7     4.58     6.11\n 110      2         6.25 0.386 89.7     5.49     7.02\n 140      2         6.78 0.386 89.7     6.01     7.54\n 50       2         5.92 0.386 89.7     5.16     6.69\n 80       2         5.98 0.386 89.7     5.21     6.75\n 0        3         5.38 0.386 89.7     4.61     6.14\n 110      3         7.45 0.386 89.7     6.69     8.22\n 140      3         8.62 0.386 89.7     7.85     9.38\n 50       3         6.78 0.386 89.7     6.02     7.55\n 80       3         7.93 0.386 89.7     7.17     8.70\n\nmanagement = m2:\n nitrogen variety emmean    SE   df lower.CL upper.CL\n 0        1         4.32 0.386 89.7     3.55     5.08\n 110      1         5.45 0.386 89.7     4.68     6.21\n 140      1         5.20 0.386 89.7     4.43     5.97\n 50       1         4.58 0.386 89.7     3.81     5.34\n 80       1         5.73 0.386 89.7     4.97     6.50\n 0        2         4.71 0.386 89.7     3.95     5.48\n 110      2         7.00 0.386 89.7     6.24     7.77\n 140      2         7.08 0.386 89.7     6.32     7.85\n 50       2         5.82 0.386 89.7     5.05     6.58\n 80       2         6.50 0.386 89.7     5.73     7.27\n 0        3         6.50 0.386 89.7     5.73     7.26\n 110      3         8.62 0.386 89.7     7.86     9.39\n 140      3         9.40 0.386 89.7     8.63    10.17\n 50       3         7.82 0.386 89.7     7.05     8.58\n 80       3         8.57 0.386 89.7     7.80     9.33\n\nmanagement = m3:\n nitrogen variety emmean    SE   df lower.CL upper.CL\n 0        1         5.33 0.386 89.7     4.56     6.09\n 110      1         6.24 0.386 89.7     5.47     7.00\n 140      1         5.97 0.386 89.7     5.21     6.74\n 50       1         5.48 0.386 89.7     4.72     6.25\n 80       1         6.55 0.386 89.7     5.78     7.31\n 0        2         5.43 0.386 89.7     4.66     6.20\n 110      2         7.52 0.386 89.7     6.75     8.28\n 140      2         8.01 0.386 89.7     7.24     8.77\n 50       2         6.31 0.386 89.7     5.55     7.08\n 80       2         7.29 0.386 89.7     6.52     8.05\n 0        3         7.56 0.386 89.7     6.79     8.33\n 110      3         9.25 0.386 89.7     8.49    10.02\n 140      3         9.99 0.386 89.7     9.22    10.76\n 50       3         9.05 0.386 89.7     8.28     9.81\n 80       3         9.19 0.386 89.7     8.42     9.96\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\nemmeans(model_lme, ~ nitrogen)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n nitrogen emmean    SE df lower.CL upper.CL\n 0          5.38 0.139  2     4.79     5.98\n 110        6.94 0.139  2     6.34     7.53\n 140        7.23 0.139  2     6.64     7.83\n 50         6.22 0.139  2     5.62     6.82\n 80         7.00 0.139  2     6.40     7.59\n\nResults are averaged over the levels of: management, variety \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nemmeans(model_lme, ~ nitrogen*variety|management)\n\nmanagement = m1:\n nitrogen variety emmean    SE df lower.CL upper.CL\n 0        1         3.90 0.386  2     2.24     5.56\n 110      1         4.65 0.386  2     2.99     6.31\n 140      1         4.06 0.386  2     2.40     5.72\n 50       1         4.23 0.386  2     2.57     5.89\n 80       1         5.23 0.386  2     3.57     6.89\n 0        2         5.35 0.386  2     3.69     7.01\n 110      2         6.25 0.386  2     4.59     7.91\n 140      2         6.78 0.386  2     5.12     8.43\n 50       2         5.92 0.386  2     4.26     7.58\n 80       2         5.98 0.386  2     4.32     7.64\n 0        3         5.38 0.386  2     3.72     7.04\n 110      3         7.45 0.386  2     5.79     9.11\n 140      3         8.62 0.386  2     6.96    10.28\n 50       3         6.78 0.386  2     5.12     8.44\n 80       3         7.93 0.386  2     6.27     9.59\n\nmanagement = m2:\n nitrogen variety emmean    SE df lower.CL upper.CL\n 0        1         4.32 0.386  2     2.66     5.98\n 110      1         5.45 0.386  2     3.79     7.11\n 140      1         5.20 0.386  2     3.54     6.86\n 50       1         4.58 0.386  2     2.92     6.24\n 80       1         5.73 0.386  2     4.07     7.39\n 0        2         4.71 0.386  2     3.05     6.37\n 110      2         7.00 0.386  2     5.34     8.66\n 140      2         7.08 0.386  2     5.43     8.74\n 50       2         5.82 0.386  2     4.16     7.47\n 80       2         6.50 0.386  2     4.84     8.16\n 0        3         6.50 0.386  2     4.84     8.16\n 110      3         8.62 0.386  2     6.97    10.28\n 140      3         9.40 0.386  2     7.74    11.06\n 50       3         7.82 0.386  2     6.16     9.48\n 80       3         8.57 0.386  2     6.91    10.23\n\nmanagement = m3:\n nitrogen variety emmean    SE df lower.CL upper.CL\n 0        1         5.33 0.386  2     3.67     6.98\n 110      1         6.24 0.386  2     4.58     7.90\n 140      1         5.97 0.386  2     4.31     7.63\n 50       1         5.48 0.386  2     3.82     7.14\n 80       1         6.55 0.386  2     4.89     8.21\n 0        2         5.43 0.386  2     3.77     7.09\n 110      2         7.52 0.386  2     5.86     9.18\n 140      2         8.01 0.386  2     6.35     9.66\n 50       2         6.31 0.386  2     4.65     7.97\n 80       2         7.29 0.386  2     5.63     8.95\n 0        3         7.56 0.386  2     5.90     9.22\n 110      3         9.25 0.386  2     7.59    10.91\n 140      3         9.99 0.386  2     8.33    11.65\n 50       3         9.05 0.386  2     7.39    10.70\n 80       3         9.19 0.386  2     7.53    10.85\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\nNotice we get a message that the estimated means for ‘nitrogen’ are averaged over the levels of ‘management’ and ‘variety’. So we need to be careful about how we interpret these estimates.",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Split-Split Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/strip-plot.html",
    "href": "chapters/strip-plot.html",
    "title": "8  Strip Plot Design",
    "section": "",
    "text": "8.1 Background\nIn strip plot design each block or replication is divided into number of vertical and horizontal strips depending on the levels of the respective factors. 1. Vertical strip plot for the first factor – vertical factor 2. Horizontal strip plot for the second factor – horizontal factor\nDivide the experimental area into ‘A’ horizontal strips and ‘B’ vertical strips. Each level of factor A is assigned to all the plots in one row, and each level of factor B is assigned to all the plots in one column.\nThe statistical model: The statistical model structure this design:\n\\[y_{ijk} = \\mu + \\alpha_j + \\beta_k + \\alpha_j\\beta_k + b_i + r_{ij} + c_{ik} + \\epsilon_{ijk}\\] Where:\n\\(\\mu\\)= overall experimental mean, \\(\\alpha\\) and \\(\\beta\\) are the main effects applied in a horizontal and vertical direction, and \\(\\alpha\\)\\(\\beta\\) represents the interaction between main factors. The random effects in above equation are \\(b_i\\), the random rep effect, \\(r_{ij}\\), the row within rep random effect, \\(c_{ik}\\), the column within rep random effect.\n\\[ b_i \\sim N(0, \\sigma_1^2)\\]\n\\[ r_{ij}  \\sim N(0, \\sigma_2^2)\\]\n\\[ c_{ik} \\sim N(0, \\sigma_3^2)\\]\n\\[ \\epsilon_{ijk} \\sim N(0, \\sigma^2)\\]",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Strip Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/strip-plot.html#example-analysis",
    "href": "chapters/strip-plot.html#example-analysis",
    "title": "8  Strip Plot Design",
    "section": "8.2 Example Analysis",
    "text": "8.2 Example Analysis\nWe will start by loading the required libraries for this analysis for lme and lmer models, respectively.\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(performance); library(desplot)\nlibrary(broom.mixed)\n\n\n\n\nlibrary(nlme); library(performance); library(emmeans)\nlibrary(dplyr); library(desplot); library(broom.mixed)\n\n\n\n\nFor this example, we will use Rice strip-plot experiment data from theagridat package. A strip-plot experiment with three reps, variety as the horizontal strip and nitrogen fertilizer as the vertical strip.\n\ndata1 &lt;- agridat::gomez.stripplot\n\n\nTable of variables in the data set\n\n\nrep\nreplication unit\n\n\nnitro\nnitrogen fertilizer in kg/ha\n\n\ngen\nrice variety\n\n\nrow\nrow (represents gen)\n\n\ncol\ncolumn (represents nitro)\n\n\nyield\ngrain yield in kg/ha\n\n\n\nFor the sake of analysis, ‘row’ and ‘col’ variables are used to represent ‘nitrogen’ and ‘Gen’ factors. The plot below shows the application of treatments in horizontal and vertical direction in a strip plot design.\n\n\n\n\n\n\n\n\n\n\n8.2.1 Data integrity checks\nFirst thing we need to verify is the data types of the variables in data1. The ‘rep’, ‘nitro’, and ‘gen’ needs to be a factor/character variables and ‘yield’ should be numeric.\n\nstr(data1)\n\n'data.frame':   54 obs. of  6 variables:\n $ yield: int  2373 4076 7254 4007 5630 7053 2620 4676 7666 2726 ...\n $ rep  : Factor w/ 3 levels \"R1\",\"R2\",\"R3\": 1 1 1 1 1 1 1 1 1 1 ...\n $ nitro: int  0 60 120 0 60 120 0 60 120 0 ...\n $ gen  : Factor w/ 6 levels \"G1\",\"G2\",\"G3\",..: 1 1 1 2 2 2 3 3 3 4 ...\n $ col  : int  1 3 2 1 3 2 1 3 2 1 ...\n $ row  : int  1 1 1 3 3 3 4 4 4 2 ...\n\n\nLet’s convert ‘nitro’ from numeric to factor.\n\ndata1$nitro &lt;- as.factor(data1$nitro)\n\nLet’s have a look at the balance of treatment factors by running a a cross tabulation, and it looks well balanced.\n\ntable(data1$gen, data1$nitro)\n\n    \n     0 60 120\n  G1 3  3   3\n  G2 3  3   3\n  G3 3  3   3\n  G4 3  3   3\n  G5 3  3   3\n  G6 3  3   3\n\n\n\napply(data1, 2, function(x) sum(is.na(x)))\n\nyield   rep nitro   gen   col   row \n    0     0     0     0     0     0 \n\n\nWe don’t have any missing values in this data set.\nLastly, let’s check the dependent variable by plotting.\n\nhist(data1$yield, main = \"\", xlab = \"yield\")\n\n\n\n\n\n\n\n\n\n\nFigure 8.1: Histogram of the dependent variable.\n\n\n\n\nNo extreme values or skewness is present in the yield values.\n\n\n8.2.2 Model Building\nThe impact of nitro, gen, and their interaction was evaluated on rice yield. The rep, gen nested in rep, and nitro nested in rep were random effects in the model.\nhttps://stackoverflow.com/questions/36643713/how-to-specify-correlated-crossed-random-effects-in-nlme\n\nlme4nlme\n\n\n\nmodel_lmer &lt;- lmer(yield ~  nitro*gen +  (1|rep) + \n                   (1|rep:gen) + (1|rep:nitro), \n                   data = data1)\ntidy(model_lmer)\n\n# A tibble: 22 × 8\n   effect group term           estimate std.error statistic    df     p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)       3572.      572.     6.24   17.8 0.00000732 \n 2 fixed  &lt;NA&gt;  nitro60           1560.      558.     2.80   22.4 0.0104     \n 3 fixed  &lt;NA&gt;  nitro120          3976.      558.     7.13   22.4 0.000000341\n 4 fixed  &lt;NA&gt;  genG2             1363.      717.     1.90   20.9 0.0714     \n 5 fixed  &lt;NA&gt;  genG3              678.      717.     0.945  20.9 0.355      \n 6 fixed  &lt;NA&gt;  genG4              487.      717.     0.679  20.9 0.504      \n 7 fixed  &lt;NA&gt;  genG5              530.      717.     0.739  20.9 0.468      \n 8 fixed  &lt;NA&gt;  genG6             -364.      717.    -0.508  20.9 0.617      \n 9 fixed  &lt;NA&gt;  nitro60:genG2      219.      741.     0.296  20.0 0.771      \n10 fixed  &lt;NA&gt;  nitro120:genG2   -1699.      741.    -2.29   20.0 0.0328     \n# ℹ 12 more rows\n\n\n\n\n\nmodel_lme &lt;-lme(yield ~  nitro*gen,\n                random = list(one = pdBlocked(list(\n        pdIdent(~ 0 + rep), \n         pdIdent(~ 0 + rep:gen), \n        pdIdent(~ 0 + rep:nitro)))),\n        data = data1 %&gt;% mutate(one = factor(1)))\n\nsummary(model_lme)\n\nLinear mixed-effects model fit by REML\n  Data: data1 %&gt;% mutate(one = factor(1)) \n       AIC      BIC    logLik\n  651.4204 686.2578 -303.7102\n\nRandom effects:\n Composite Structure: Blocked\n\n Block 1: repR1, repR2, repR3\n Formula: ~0 + rep | one\n Structure: Multiple of an Identity\n           repR1    repR2    repR3\nStdDev: 393.4278 393.4278 393.4278\n\n Block 2: repR1:genG1, repR2:genG1, repR3:genG1, repR1:genG2, repR2:genG2, repR3:genG2, repR1:genG3, repR2:genG3, repR3:genG3, repR1:genG4, repR2:genG4, repR3:genG4, repR1:genG5, repR2:genG5, repR3:genG5, repR1:genG6, repR2:genG6, repR3:genG6\n Formula: ~0 + rep:gen | one\n Structure: Multiple of an Identity\n        repR1:genG1 repR2:genG1 repR3:genG1 repR1:genG2 repR2:genG2 repR3:genG2\nStdDev:    600.1711    600.1711    600.1711    600.1711    600.1711    600.1711\n        repR1:genG3 repR2:genG3 repR3:genG3 repR1:genG4 repR2:genG4 repR3:genG4\nStdDev:    600.1711    600.1711    600.1711    600.1711    600.1711    600.1711\n        repR1:genG5 repR2:genG5 repR3:genG5 repR1:genG6 repR2:genG6 repR3:genG6\nStdDev:    600.1711    600.1711    600.1711    600.1711    600.1711    600.1711\n\n Block 3: repR1:nitro0, repR2:nitro0, repR3:nitro0, repR1:nitro60, repR2:nitro60, repR3:nitro60, repR1:nitro120, repR2:nitro120, repR3:nitro120\n Formula: ~0 + rep:nitro | one\n Structure: Multiple of an Identity\n        repR1:nitro0 repR2:nitro0 repR3:nitro0 repR1:nitro60 repR2:nitro60\nStdDev:     235.2591     235.2591     235.2591      235.2591      235.2591\n        repR3:nitro60 repR1:nitro120 repR2:nitro120 repR3:nitro120 Residual\nStdDev:      235.2591       235.2591       235.2591       235.2591 641.5963\n\nFixed effects:  yield ~ nitro * gen \n                   Value Std.Error DF   t-value p-value\n(Intercept)     3571.667  572.1257 36  6.242800  0.0000\nnitro60         1560.333  557.9682 36  2.796456  0.0082\nnitro120        3976.333  557.9682 36  7.126452  0.0000\ngenG2           1362.667  717.3336 36  1.899628  0.0655\ngenG3            678.000  717.3336 36  0.945167  0.3509\ngenG4            487.333  717.3336 36  0.679368  0.5012\ngenG5            530.000  717.3336 36  0.738847  0.4648\ngenG6           -364.333  717.3336 36 -0.507899  0.6146\nnitro60:genG2    219.000  740.8516 36  0.295606  0.7692\nnitro120:genG2 -1699.333  740.8516 36 -2.293757  0.0277\nnitro60:genG3    312.333  740.8516 36  0.421587  0.6758\nnitro120:genG3  -357.667  740.8516 36 -0.482778  0.6322\nnitro60:genG4    -65.667  740.8516 36 -0.088637  0.9299\nnitro120:genG4  -941.000  740.8516 36 -1.270160  0.2122\nnitro60:genG5    -28.667  740.8516 36 -0.038694  0.9693\nnitro120:genG5 -2066.000  740.8516 36 -2.788682  0.0084\nnitro60:genG6  -1053.333  740.8516 36 -1.421787  0.1637\nnitro120:genG6 -4691.667  740.8516 36 -6.332802  0.0000\n Correlation: \n               (Intr) nitr60 ntr120 genG2  genG3  genG4  genG5  genG6  n60:G2\nnitro60        -0.488                                                        \nnitro120       -0.488  0.500                                                 \ngenG2          -0.627  0.343  0.343                                          \ngenG3          -0.627  0.343  0.343  0.500                                   \ngenG4          -0.627  0.343  0.343  0.500  0.500                            \ngenG5          -0.627  0.343  0.343  0.500  0.500  0.500                     \ngenG6          -0.627  0.343  0.343  0.500  0.500  0.500  0.500              \nnitro60:genG2   0.324 -0.664 -0.332 -0.516 -0.258 -0.258 -0.258 -0.258       \nnitro120:genG2  0.324 -0.332 -0.664 -0.516 -0.258 -0.258 -0.258 -0.258  0.500\nnitro60:genG3   0.324 -0.664 -0.332 -0.258 -0.516 -0.258 -0.258 -0.258  0.500\nnitro120:genG3  0.324 -0.332 -0.664 -0.258 -0.516 -0.258 -0.258 -0.258  0.250\nnitro60:genG4   0.324 -0.664 -0.332 -0.258 -0.258 -0.516 -0.258 -0.258  0.500\nnitro120:genG4  0.324 -0.332 -0.664 -0.258 -0.258 -0.516 -0.258 -0.258  0.250\nnitro60:genG5   0.324 -0.664 -0.332 -0.258 -0.258 -0.258 -0.516 -0.258  0.500\nnitro120:genG5  0.324 -0.332 -0.664 -0.258 -0.258 -0.258 -0.516 -0.258  0.250\nnitro60:genG6   0.324 -0.664 -0.332 -0.258 -0.258 -0.258 -0.258 -0.516  0.500\nnitro120:genG6  0.324 -0.332 -0.664 -0.258 -0.258 -0.258 -0.258 -0.516  0.250\n               n120:G2 n60:G3 n120:G3 n60:G4 n120:G4 n60:G5 n120:G5 n60:G6\nnitro60                                                                   \nnitro120                                                                  \ngenG2                                                                     \ngenG3                                                                     \ngenG4                                                                     \ngenG5                                                                     \ngenG6                                                                     \nnitro60:genG2                                                             \nnitro120:genG2                                                            \nnitro60:genG3   0.250                                                     \nnitro120:genG3  0.500   0.500                                             \nnitro60:genG4   0.250   0.500  0.250                                      \nnitro120:genG4  0.500   0.250  0.500   0.500                              \nnitro60:genG5   0.250   0.500  0.250   0.500  0.250                       \nnitro120:genG5  0.500   0.250  0.500   0.250  0.500   0.500               \nnitro60:genG6   0.250   0.500  0.250   0.500  0.250   0.500  0.250        \nnitro120:genG6  0.500   0.250  0.500   0.250  0.500   0.250  0.500   0.500\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.52993309 -0.52842524  0.05394367  0.51465584  1.46902934 \n\nNumber of Observations: 54\nNumber of Groups: 1 \n\n#tidy(model_lme)\n\n\n\n\n\n\n8.2.3 Check Model Assumptions\n\nlme4nlme\n\n\n\ncheck_model(model_lmer, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\nplot(model_lme, resid(., scaled=TRUE) ~ fitted(.), \n     xlab = \"fitted values\", ylab = \"studentized residuals\")\nqqnorm(residuals(model_lme))\nqqline(residuals(model_lme))\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe residuals fit the assumptions of the model well.\n\n\n8.2.4 Inference\nWe can evaluate the model for the analysis of variance, for main and interaction effects.\n\nlme4nlme\n\n\n\ncar::Anova(model_lmer, type = \"III\", test.statistics = \"F\")\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: yield\n              Chisq Df Pr(&gt;Chisq)    \n(Intercept) 38.9728  1  4.298e-10 ***\nnitro       51.5701  2  6.334e-12 ***\ngen          6.8343  5     0.2333    \nnitro:gen   58.0064 10  8.621e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(model_lme, type = \"marginal\")\n\n            numDF denDF  F-value p-value\n(Intercept)     1    36 38.97256  &lt;.0001\nnitro           2    36 25.78512  &lt;.0001\ngen             5    36  1.36687  0.2597\nnitro:gen      10    36  5.80061  &lt;.0001\n\n\n\n\n\nAnalysis of variance showed a significant interaction impact of gen and nitro on rice grain yield.\nNext, We estimate marginal means for nitro and gen interaction effects using emmeans package.\n\nlme4nlme\n\n\n\nemm1 &lt;- emmeans(model_lmer, ~ nitro*gen) \nemm1\n\n nitro gen emmean  SE   df lower.CL upper.CL\n 0     G1    3572 572 17.8     2368     4775\n 60    G1    5132 572 17.8     3929     6335\n 120   G1    7548 572 17.8     6345     8751\n 0     G2    4934 572 17.8     3731     6138\n 60    G2    6714 572 17.8     5510     7917\n 120   G2    7211 572 17.8     6008     8415\n 0     G3    4250 572 17.8     3046     5453\n 60    G3    6122 572 17.8     4919     7326\n 120   G3    7868 572 17.8     6665     9072\n 0     G4    4059 572 17.8     2856     5262\n 60    G4    5554 572 17.8     4350     6757\n 120   G4    7094 572 17.8     5891     8298\n 0     G5    4102 572 17.8     2898     5305\n 60    G5    5633 572 17.8     4430     6837\n 120   G5    6012 572 17.8     4809     7215\n 0     G6    3207 572 17.8     2004     4411\n 60    G6    3714 572 17.8     2511     4918\n 120   G6    2492 572 17.8     1289     3695\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\nemm1 &lt;- emmeans(model_lme, ~ nitro*gen)\n\nWarning in model.matrix.default(trms, m, contrasts.arg = contrasts): variable\n'rep' is absent, its contrast will be ignored\nWarning in model.matrix.default(trms, m, contrasts.arg = contrasts): variable\n'rep' is absent, its contrast will be ignored\n\nemm1\n\nWarning in qt((1 - level)/adiv, df): NaNs produced\n\n\n nitro gen emmean  SE df lower.CL upper.CL\n 0     G1    3572 572  0      NaN      NaN\n 60    G1    5132 572  0      NaN      NaN\n 120   G1    7548 572  0      NaN      NaN\n 0     G2    4934 572  0      NaN      NaN\n 60    G2    6714 572  0      NaN      NaN\n 120   G2    7211 572  0      NaN      NaN\n 0     G3    4250 572  0      NaN      NaN\n 60    G3    6122 572  0      NaN      NaN\n 120   G3    7868 572  0      NaN      NaN\n 0     G4    4059 572  0      NaN      NaN\n 60    G4    5554 572  0      NaN      NaN\n 120   G4    7094 572  0      NaN      NaN\n 0     G5    4102 572  0      NaN      NaN\n 60    G5    5633 572  0      NaN      NaN\n 120   G5    6012 572  0      NaN      NaN\n 0     G6    3207 572  0      NaN      NaN\n 60    G6    3714 572  0      NaN      NaN\n 120   G6    2492 572  0      NaN      NaN\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\nNote that, confidence intervals were not estimated through emmeans from lme model.\n\n\n\n\n\n\nlme vs lmer\n\n\n\nFor strip plot experiment deisgn, fitting nested and crossed random effects is more complicated through nlme. Therefore, it’s more convinent to use lmer in this case as both models yielded same results in the example shown above.",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Strip Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/Lattice-design.html",
    "href": "chapters/Lattice-design.html",
    "title": "10  Lattice Design",
    "section": "",
    "text": "10.1 Background\nYates (1936) proposed this method of arranging agricultural variety trials involving a large number of crop varieties. These types of arrangements were named a quasi-factorial or lattice designs. His paper contained numerical examples based on the results of a uniformity trial on orange trees. A special feature of lattice designs is that the number of treatments, t, is related to the block size, k, in one of three forms: t = k2, t = k3, or t = k(k +1).\nEven though the number of possible treatments is limited, a lattice design may be an ideal design for field experiments with a large number of treatments.\nStatistical model for lattice design:\n\\(Y_{ijk} = \\mu + \\alpha_i + \\gamma_j + \\tau_t  + \\beta_k + \\epsilon_ijk\\)\nwhere, \\(\\mu\\) is the experiment mean, 𝛽 is the row effect, 𝛾 is the column effect, and 𝜏 is the treatment effect.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Lattice Design</span>"
    ]
  },
  {
    "objectID": "chapters/Lattice-design.html#example-analysis",
    "href": "chapters/Lattice-design.html#example-analysis",
    "title": "10  Lattice Design",
    "section": "10.2 Example Analysis",
    "text": "10.2 Example Analysis\nThe data used in this example is from a balanced lattice experiment in cotton containing 16 treatments in a 4x4 layout in each of 5 replicates. The response variable in this data is the precentage of young flower buds attacked by boll weevils.\nLet’s start the analysis firstly by loading the required libraries:\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans); library(performance)\nlibrary(dplyr); library(broom.mixed); library(agridat); library(desplot)\n\n\n\n\nlibrary(nlme); library(broom.mixed); library(emmeans); library(performance)\nlibrary(dplyr); library(agridat); library(desplot)\n\n\n\n\nImport data from agridat package. The data contains . This is a balanced experiment design\n\ndata(cochran.lattice)\ndat2 &lt;- cochran.lattice\nhead(dat2)\n\n     y rep row col trt\n1  9.0  R1   1   1 T10\n2 20.3  R1   1   2 T12\n3 17.7  R1   1   3 T09\n4 26.3  R1   1   4 T11\n5  4.7  R1   2   1 T02\n6  9.0  R1   2   2 T04\n\nstr(dat2)\n\n'data.frame':   80 obs. of  5 variables:\n $ y  : num  9 20.3 17.7 26.3 4.7 9 7.3 8.3 9 6.7 ...\n $ rep: Factor w/ 5 levels \"R1\",\"R2\",\"R3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ row: int  1 1 1 1 2 2 2 2 3 3 ...\n $ col: int  1 2 3 4 1 2 3 4 1 2 ...\n $ trt: Factor w/ 16 levels \"T01\",\"T02\",\"T03\",..: 10 12 9 11 2 4 1 3 14 16 ...\n\nlibs(desplot)\ndesplot(dat2, y~row*col|rep,\n        text=trt, # aspect unknown, should be 2 or .5\n         main=\"cochran.lattice\")\n\n\n\n\n\n\n\n\n\ndata(burgueno.rowcol)\ndat &lt;- burgueno.rowcol\nhead(dat)\n\n  rep row col gen  yield\n1  R1   1   1 G05 1.5318\n2  R1   1   2 G19 2.2211\n3  R1   1   3 G55 1.4589\n4  R1   1   4 G23 1.2436\n5  R1   1   5 G27 1.8989\n6  R1   1   6 G38 1.3366\n\n\nHere, we can use the desplot() function from the ‘desplot’ package to visualize the plot plan from lattice design.\n\n# Two contiuous reps in 8 rows, 16 columns\ndesplot(dat, yield ~ col*row,\n        out1=rep, # aspect unknown\n        text=gen, shorten=\"none\", cex=0.75,\n        main=\"lattice design\")\n\n\n\n\n\n\n\n\n\n10.2.1 Data integrity checks\n\n\n\n\n\n\nHistogram of the dependent variable.\n\n\n\n\n\n10.2.2 Data integrity checks\n\nstr(dat)\n\n'data.frame':   128 obs. of  5 variables:\n $ rep  : Factor w/ 2 levels \"R1\",\"R2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ row  : int  1 1 1 1 1 1 1 1 1 1 ...\n $ col  : int  1 2 3 4 5 6 7 8 9 10 ...\n $ gen  : Factor w/ 64 levels \"G01\",\"G02\",\"G03\",..: 5 19 55 23 27 38 64 44 14 13 ...\n $ yield: num  1.53 2.22 1.46 1.24 1.9 ...\n\n\n\ndat2$row &lt;- as.factor(dat2$row)\ndat2$col &lt;- as.factor(dat2$col)\n\ndat$row &lt;- as.factor(dat$row)\ndat$col &lt;- as.factor(dat$col)\n\n\nhist(dat2$y, main = \"\", xlab = \"yield\")\n\n\n\n\n\n\n\n\n\n\nFigure 10.1: Histogram of the dependent variable.\n\n\n\n\n\nlme4nlme\n\n\n\nm1_a &lt;- lmer(yield ~ gen + (1|row) + (1|col:rep) + (1|rep),\n           data = dat,\n           na.action = na.exclude)\nsummary(m1_a) \n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: yield ~ gen + (1 | row) + (1 | col:rep) + (1 | rep)\n   Data: dat\n\nREML criterion at convergence: 168.7\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-1.1392 -0.4036  0.0000  0.4036  1.1392 \n\nRandom effects:\n Groups   Name        Variance Std.Dev.\n col:rep  (Intercept) 0.2189   0.4679  \n row      (Intercept) 0.1646   0.4057  \n rep      (Intercept) 0.1916   0.4378  \n Residual             0.1796   0.4238  \nNumber of obs: 128, groups:  col:rep, 32; row, 8; rep, 2\n\nFixed effects:\n             Estimate Std. Error        df t value Pr(&gt;|t|)   \n(Intercept)  2.325589   0.509444  4.216418   4.565   0.0091 **\ngenG02       0.349182   0.523392 38.995063   0.667   0.5086   \ngenG03       0.371260   0.531293 41.034622   0.699   0.4886   \ngenG04       0.475842   0.527614 43.470779   0.902   0.3721   \ngenG05      -0.601225   0.513762 38.892580  -1.170   0.2490   \ngenG06       0.574869   0.527284 40.643852   1.090   0.2820   \ngenG07       0.244490   0.534996 42.592433   0.457   0.6500   \ngenG08       0.606486   0.527879 43.602192   1.149   0.2569   \ngenG09       0.010630   0.525899 42.747488   0.020   0.9840   \ngenG10       0.509855   0.527357 43.301826   0.967   0.3390   \ngenG11       0.463014   0.535708 42.977451   0.864   0.3922   \ngenG12       0.340678   0.517892 43.399748   0.658   0.5141   \ngenG13      -0.041178   0.483241 34.257292  -0.085   0.9326   \ngenG14       0.132480   0.523679 39.142513   0.253   0.8016   \ngenG15       0.385104   0.526349 43.013937   0.732   0.4683   \ngenG16      -0.148379   0.483194 34.227894  -0.307   0.7606   \ngenG17      -0.016143   0.536067 42.926995  -0.030   0.9761   \ngenG18       0.358218   0.526325 42.993175   0.681   0.4998   \ngenG19       0.734743   0.533892 41.978194   1.376   0.1761   \ngenG20       0.212299   0.521319 40.753106   0.407   0.6860   \ngenG21       0.150212   0.525313 39.814746   0.286   0.7764   \ngenG22      -0.039713   0.497948 37.586406  -0.080   0.9369   \ngenG23       0.325771   0.484472 34.701705   0.672   0.5058   \ngenG24      -0.194686   0.524899 39.587776  -0.371   0.7127   \ngenG25       0.202462   0.514979 39.325398   0.393   0.6963   \ngenG26       0.089411   0.483188 34.221812   0.185   0.8543   \ngenG27       0.218244   0.536631 43.262734   0.407   0.6862   \ngenG28      -0.284235   0.524825 39.538457  -0.542   0.5911   \ngenG29       0.047110   0.515184 39.470339   0.091   0.9276   \ngenG30      -0.213561   0.484574 34.769665  -0.441   0.6621   \ngenG31      -0.034873   0.535702 42.734026  -0.065   0.9484   \ngenG32       1.000827   0.535020 42.606153   1.871   0.0683 . \ngenG33       0.252960   0.507660 40.377683   0.498   0.6210   \ngenG34       0.242054   0.537217 43.562588   0.451   0.6545   \ngenG35       0.213005   0.515262 39.472578   0.413   0.6816   \ngenG36       0.362633   0.525014 42.290855   0.691   0.4935   \ngenG37       0.282612   0.530472 40.615244   0.533   0.5971   \ngenG38      -0.125437   0.537059 43.462082  -0.234   0.8164   \ngenG39       1.261824   0.537018 43.466180   2.350   0.0234 * \ngenG40       0.346211   0.536855 43.369657   0.645   0.5224   \ngenG41      -0.255692   0.522110 41.202626  -0.490   0.6269   \ngenG42       0.744461   0.483144 34.195322   1.541   0.1326   \ngenG43       0.489907   0.535381 42.795749   0.915   0.3653   \ngenG44       0.445400   0.527076 43.156823   0.845   0.4027   \ngenG45       0.728849   0.531497 41.172558   1.371   0.1777   \ngenG46       0.008386   0.527720 43.541892   0.016   0.9874   \ngenG47      -0.173693   0.525585 42.635003  -0.330   0.7427   \ngenG48       0.364422   0.523287 41.600011   0.696   0.4900   \ngenG49       0.283642   0.535631 42.924562   0.530   0.5992   \ngenG50      -0.160189   0.534315 42.227391  -0.300   0.7658   \ngenG51       0.127042   0.526978 43.139993   0.241   0.8106   \ngenG52      -0.277455   0.534469 42.326672  -0.519   0.6064   \ngenG53      -0.401069   0.525510 42.532998  -0.763   0.4496   \ngenG54      -0.221400   0.533965 42.027349  -0.415   0.6805   \ngenG55       0.479012   0.524627 42.079587   0.913   0.3664   \ngenG56       0.232007   0.536959 43.388811   0.432   0.6678   \ngenG57      -0.153493   0.526605 42.888008  -0.291   0.7721   \ngenG58       0.545562   0.523508 41.715186   1.042   0.3034   \ngenG59       0.691577   0.536175 43.006805   1.290   0.2040   \ngenG60      -0.221321   0.517482 37.741262  -0.428   0.6713   \ngenG61       0.205307   0.514087 39.066489   0.399   0.6918   \ngenG62       0.341897   0.534904 42.530411   0.639   0.5261   \ngenG63       0.701913   0.517290 40.377937   1.357   0.1823   \ngenG64       0.066248   0.526946 40.462383   0.126   0.9006   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 64 &gt; 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\n\n\n\ndat$dummy &lt;- factor(1)\n\nm1_b &lt;- lme(yield ~ gen,\n          random = list(dummy = pdBlocked(list(\n                                  pdIdent(~row - 1),\n                                  pdIdent(~rep - 1),\n                                  pdIdent(~col:rep)))),\n          data = dat, \n          na.action = na.exclude)\n\nVarCorr(m1_b)\n\ndummy = pdIdent(row - 1), pdIdent(rep - 1), pdIdent(col:rep) \n            Variance  StdDev   \nrow1        0.1645986 0.4057076\nrow2        0.1645986 0.4057076\nrow3        0.1645986 0.4057076\nrow4        0.1645986 0.4057076\nrow5        0.1645986 0.4057076\nrow6        0.1645986 0.4057076\nrow7        0.1645986 0.4057076\nrow8        0.1645986 0.4057076\nrepR1       0.1916416 0.4377688\nrepR2       0.1916416 0.4377688\n(Intercept) 0.2188853 0.4678517\ncol1:repR1  0.2188853 0.4678517\ncol2:repR1  0.2188853 0.4678517\ncol3:repR1  0.2188853 0.4678517\ncol4:repR1  0.2188853 0.4678517\ncol5:repR1  0.2188853 0.4678517\ncol6:repR1  0.2188853 0.4678517\ncol7:repR1  0.2188853 0.4678517\ncol8:repR1  0.2188853 0.4678517\ncol9:repR1  0.2188853 0.4678517\ncol10:repR1 0.2188853 0.4678517\ncol11:repR1 0.2188853 0.4678517\ncol12:repR1 0.2188853 0.4678517\ncol13:repR1 0.2188853 0.4678517\ncol14:repR1 0.2188853 0.4678517\ncol15:repR1 0.2188853 0.4678517\ncol16:repR1 0.2188853 0.4678517\ncol1:repR2  0.2188853 0.4678517\ncol2:repR2  0.2188853 0.4678517\ncol3:repR2  0.2188853 0.4678517\ncol4:repR2  0.2188853 0.4678517\ncol5:repR2  0.2188853 0.4678517\ncol6:repR2  0.2188853 0.4678517\ncol7:repR2  0.2188853 0.4678517\ncol8:repR2  0.2188853 0.4678517\ncol9:repR2  0.2188853 0.4678517\ncol10:repR2 0.2188853 0.4678517\ncol11:repR2 0.2188853 0.4678517\ncol12:repR2 0.2188853 0.4678517\ncol13:repR2 0.2188853 0.4678517\ncol14:repR2 0.2188853 0.4678517\ncol15:repR2 0.2188853 0.4678517\ncol16:repR2 0.2188853 0.4678517\nResidual    0.1795838 0.4237733\n\n\n\n\n\n\n\n10.2.3 Check Model Assumptions\nRemember those iid assumptions? Let’s make sure we actually met them.\n\ncheck_model(m1_a)\n\n\n\n\n\n\n\n\n\n\n10.2.4 Inference\nEstimates for each treatment level can be obtained with the ‘emmeans’ package. And we can extract the ANOVA table from model using anova() function.\n\nanova(m1_a)\n\nType III Analysis of Variance Table with Satterthwaite's method\n    Sum Sq Mean Sq NumDF  DenDF F value Pr(&gt;F)\ngen 9.5245 0.15118    63 34.322  0.8418 0.7274\n\n\nEstimated marginal means\n\nemmeans(m1_a, ~ gen)\n\n gen emmean    SE   df lower.CL upper.CL\n G01   2.33 0.515 4.21    0.923     3.73\n G02   2.67 0.515 4.21    1.272     4.08\n G03   2.70 0.515 4.21    1.294     4.10\n G04   2.80 0.515 4.21    1.399     4.20\n G05   1.72 0.515 4.21    0.322     3.13\n G06   2.90 0.515 4.20    1.497     4.30\n G07   2.57 0.515 4.21    1.167     3.97\n G08   2.93 0.515 4.21    1.529     4.33\n G09   2.34 0.515 4.20    0.933     3.74\n G10   2.84 0.515 4.20    1.432     4.24\n G11   2.79 0.515 4.20    1.385     4.19\n G12   2.67 0.515 4.19    1.263     4.07\n G13   2.28 0.515 4.21    0.882     3.69\n G14   2.46 0.515 4.20    1.055     3.86\n G15   2.71 0.515 4.20    1.307     4.11\n G16   2.18 0.515 4.21    0.775     3.58\n G17   2.31 0.515 4.19    0.906     3.71\n G18   2.68 0.515 4.21    1.281     4.09\n G19   3.06 0.514 4.18    1.657     4.46\n G20   2.54 0.515 4.20    1.135     3.94\n G21   2.48 0.515 4.19    1.072     3.88\n G22   2.29 0.515 4.21    0.883     3.69\n G23   2.65 0.515 4.21    1.249     4.05\n G24   2.13 0.515 4.19    0.727     3.53\n G25   2.53 0.515 4.20    1.125     3.93\n G26   2.42 0.515 4.21    1.013     3.82\n G27   2.54 0.515 4.20    1.141     3.95\n G28   2.04 0.515 4.20    0.638     3.44\n G29   2.37 0.515 4.20    0.970     3.78\n G30   2.11 0.515 4.19    0.708     3.52\n G31   2.29 0.514 4.18    0.887     3.69\n G32   3.33 0.515 4.20    1.923     4.73\n G33   2.58 0.514 4.19    1.175     3.98\n G34   2.57 0.515 4.21    1.165     3.97\n G35   2.54 0.515 4.20    1.136     3.94\n G36   2.69 0.515 4.20    1.285     4.09\n G37   2.61 0.515 4.20    1.205     4.01\n G38   2.20 0.515 4.21    0.797     3.60\n G39   3.59 0.515 4.20    2.184     4.99\n G40   2.67 0.515 4.21    1.269     4.07\n G41   2.07 0.514 4.18    0.666     3.47\n G42   3.07 0.515 4.21    1.668     4.47\n G43   2.82 0.515 4.20    1.412     4.22\n G44   2.77 0.515 4.20    1.368     4.17\n G45   3.05 0.515 4.20    1.651     4.46\n G46   2.33 0.515 4.21    0.931     3.74\n G47   2.15 0.515 4.20    0.749     3.56\n G48   2.69 0.515 4.19    1.286     4.09\n G49   2.61 0.515 4.22    1.207     4.01\n G50   2.17 0.514 4.19    0.762     3.57\n G51   2.45 0.514 4.19    1.049     3.86\n G52   2.05 0.514 4.19    0.644     3.45\n G53   1.92 0.515 4.19    0.521     3.33\n G54   2.10 0.514 4.18    0.700     3.51\n G55   2.80 0.514 4.18    1.401     4.21\n G56   2.56 0.515 4.20    1.155     3.96\n G57   2.17 0.515 4.19    0.769     3.58\n G58   2.87 0.514 4.18    1.467     4.28\n G59   3.02 0.514 4.19    1.613     4.42\n G60   2.10 0.516 4.22    0.702     3.51\n G61   2.53 0.515 4.21    1.128     3.93\n G62   2.67 0.514 4.18    1.264     4.07\n G63   3.03 0.514 4.19    1.624     4.43\n G64   2.39 0.515 4.19    0.988     3.80\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Lattice Design</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#split-split-plot-repeated-measures",
    "href": "chapters/repeated-measures.html#split-split-plot-repeated-measures",
    "title": "11  Repeated measures mixed models",
    "section": "12.3 Split-split plot repeated measures",
    "text": "12.3 Split-split plot repeated measures\nRecall, we have evaluated the split-split experiment design in Chapter 5, where we had a one factor in main-plot, other in subplot and the third factor in sub-subplot. In this example we will be adding a repeated measures statement.\n\nphos &lt;- read.csv(here::here(\"data\", \"split_split_repeated.csv\"))\n\n\n\n\nplot\nexperimental unit\n\n\nblock\nreplication unit\n\n\nPtrt\nMain plot, 2 levels\n\n\nInoc\nSplit plot, 2 levels\n\n\nCv\nSplit-split plot, 5 levels\n\n\ntime\ntime points for data collection\n\n\nP_leaf\nleaf phosphorous content\n\n\n\n\nFactorial design repeated measures\n\nAs explained in Chapter 6, factorial designs involve examining several factors simultaneously\nhttps://search.r-project.org/CRAN/refmans/agridat/html/gregory.cotton.html\n\ndata3 &lt;- agridat::gregory.cotton\nstr(data3)\n\n'data.frame':   144 obs. of  6 variables:\n $ yield   : num  0.99 1.34 1.26 1.44 1.4 1.36 1.23 1.28 1.56 1.64 ...\n $ year    : Factor w/ 2 levels \"Y1\",\"Y2\": 1 1 1 1 1 1 1 1 1 1 ...\n $ nitrogen: Factor w/ 2 levels \"N0\",\"N1\": 1 1 1 1 1 1 1 1 1 1 ...\n $ date    : Factor w/ 4 levels \"D1\",\"D2\",\"D3\",..: 1 1 1 1 1 1 1 1 1 2 ...\n $ water   : Factor w/ 3 levels \"I1\",\"I2\",\"I3\": 1 1 1 2 2 2 3 3 3 1 ...\n $ spacing : Factor w/ 3 levels \"S1\",\"S2\",\"S3\": 1 2 3 1 2 3 1 2 3 1 ...\n\n\n\ntable(data3$nitrogen, data3$date)\n\n    \n     D1 D2 D3 D4\n  N0 18 18 18 18\n  N1 18 18 18 18\n\n\nThe biggest advantage of mixed models is their incredible flexibility. They handle clustered individuals as well as repeated measures (even in the same model). They handle crossed random factors as well as nested\nThe biggest disadvantage of mixed models, at least for someone new to them, is their incredible flexibility. It’s easy to mis-specify a mixed model, and this is a place where a little knowledge is definitely dangerous.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Repeated Measures</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#rcbd-repeated-measures",
    "href": "chapters/repeated-measures.html#rcbd-repeated-measures",
    "title": "11  Repeated measures mixed models",
    "section": "12.1 RCBD Repeated Measures",
    "text": "12.1 RCBD Repeated Measures\nThe example shown below contains data from a sorghum trial laid out as a randomized complete block design (5 blocks) with variety (4 varieties) treatment effect. The response variable ‘y’ is the leaf area index assessed in five consecutive weeks on each plot.\nWe need to have time as numeric and factor variable. In the model, to assess the week effect, week was used as a factor (factweek). For the correlation matrix, week needs to be numeric (week).\n\ndat &lt;- agriTutorial::sorghum %&gt;%   \n  mutate(week = as.numeric(factweek),\n         block = as.character(varblock)) \n\n\nTable of variables in the data set\n\n\nblock\nblocking unit\n\n\nReplicate\nreplication unit\n\n\nWeek\nTime points when data was collected\n\n\nvariety\ntreatment factor, 4 levels\n\n\ny\nyield (lbs)\n\n\n\n\n12.1.1 Data Integrity Checks\nLet’s do preliminary data check including evaluating data structure, distribution of treatments, number of missing values, and distribution of response variable.\n\nstr(dat)\n\n'data.frame':   100 obs. of  9 variables:\n $ y        : num  5 4.84 4.02 3.75 3.13 4.42 4.3 3.67 3.23 2.83 ...\n $ variety  : Factor w/ 4 levels \"1\",\"2\",\"3\",\"4\": 1 1 1 1 1 1 1 1 1 1 ...\n $ Replicate: Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 2 2 2 2 2 ...\n $ factweek : Factor w/ 5 levels \"1\",\"2\",\"3\",\"4\",..: 1 2 3 4 5 1 2 3 4 5 ...\n $ factplot : Factor w/ 20 levels \"1\",\"2\",\"3\",\"4\",..: 1 1 1 1 1 2 2 2 2 2 ...\n $ varweek  : int  1 2 3 4 5 1 2 3 4 5 ...\n $ varblock : int  1 1 1 1 1 2 2 2 2 2 ...\n $ week     : num  1 2 3 4 5 1 2 3 4 5 ...\n $ block    : chr  \"1\" \"1\" \"1\" \"1\" ...\n\n\nIn this data, we have block, factplot, factweek as factor variables and y & week as numeric.\n\ntable(dat$variety, dat$block)\n\n   \n    1 2 3 4 5\n  1 5 5 5 5 5\n  2 5 5 5 5 5\n  3 5 5 5 5 5\n  4 5 5 5 5 5\n\n\nThe cross tabulation shows a equal number of varieties in each block.\n\nggplot(data = dat, aes(y = y, x = factweek, fill = variety)) +\n  geom_boxplot() +  \n  #scale_fill_brewer(palette=\"Dark2\") +\n  scale_fill_viridis_d(option = \"F\") +\n    theme_bw()\n\n\n\n\n\n\n\n\nLooks like variety ‘1’ has the lowest yield and showed drastic reduction in yield over weeks compared to other varieties.\nOne last step before we fit model is to look at the distribution of response variable.\n\nhist(dat$y, main = \"\", xlab = \"yield\")\n\n\n\n\n\n\n\n\n\n\nFigure 12.1: Histogram of the dependent variable.\n\n\n\n\n\n\n12.1.2 Model Building\nLet’s fit the basic model first using lme() from the nlme package.\n\nlm1 &lt;- lme(y ~ variety + factweek + variety:factweek, random = ~1|block/factplot,\n              data = dat,\n              na.action = na.exclude)\n\nThe model fitted above doesn’t account for the repeated measures effect. To account for the variation caused by repeated measurements, we can model the correlation among responses for a given subject which is plot (factor variable) in this case.\nBy adding this correlation structure, what we are implying is to keep each plot independent, but to allowing AR1 or compound symmetry correlations between responses for a given subject, here time variable is week and it must be numeric.\n\ncs1 &lt;- corAR1(form = ~ week|block/factplot,  value = 0.2, fixed = FALSE)\ncs2 &lt;- corCompSymm(form = ~ week|block/factplot,  value = 0.2, fixed = FALSE)\n\nIn the code chunk above, we fitted two correlation structures including AR1 and compound symmetry matrices. Next we will update the model lm1, with these two matrices. In nlme, please search the help tool to know more about functions for different correlation structure classes.\n\nlm2 &lt;- update(lm1, corr = cs1)\nlm3 &lt;- update(lm1, corr= cs2)\n\nNow let’s compare how model fitness differs among models with no correlation structure (lm1), with AR1 correlation structure (lm2), and with compound symmetry structure (lm3). We will compare these models by using anova() or by compare_performance() function from the ‘performance’ library.\n\nanovaperformance\n\n\n\nanova(lm1, lm2, lm3)\n\n    Model df       AIC      BIC   logLik   Test  L.Ratio p-value\nlm1     1 23 18.837478 73.62409 13.58126                        \nlm2     2 24 -2.347391 54.82125 25.17370 1 vs 2 23.18487  &lt;.0001\nlm3     3 24 20.837478 78.00612 13.58126                        \n\n\n\n\n\nresult &lt;- compare_performance(lm1, lm2, lm3)\n\nSome of the nested models seem to be identical and probably only vary in\n  their random effects.\n\nprint_md(result)\n\n\nComparison of Model Performance Indices\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nName\nModel\nAIC (weights)\nAICc (weights)\nBIC (weights)\nR2 (cond.)\nR2 (marg.)\nICC\nRMSE\nSigma\n\n\n\n\nlm1\nlme\n-50.5 (&lt;.001)\n-36.0 (&lt;.001)\n9.4 (&lt;.001)\n0.99\n0.37\n0.98\n0.10\n0.13\n\n\nlm2\nlme\n-77.5 (&gt;.999)\n-61.5 (&gt;.999)\n-15.0 (&gt;.999)\n0.97\n0.41\n0.95\n0.15\n0.18\n\n\nlm3\nlme\n-48.5 (&lt;.001)\n-32.5 (&lt;.001)\n14.0 (&lt;.001)\n0.98\n0.37\n0.98\n0.11\n0.14\n\n\n\n\n\n\n\n\nWe prefer to chose model with lower AIC and BIC values. In this scenario, we will move forward with lm2 model containing AR1 structure.\nLet’s run a tidy() on lm2 model to look at the estimates for random and fixed effects.\n\ntidy(lm2)\n\nWarning in tidy.lme(lm2): ran_pars not yet implemented for multiple levels of\nnesting\n\n\n# A tibble: 20 × 7\n   effect term               estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt;                 &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  (Intercept)          4.24      0.291     64    14.6   5.44e-22\n 2 fixed  variety2             0.906     0.114     12     7.94  4.05e- 6\n 3 fixed  variety3             0.646     0.114     12     5.66  1.05e- 4\n 4 fixed  variety4             0.912     0.114     12     8.00  3.78e- 6\n 5 fixed  factweek2           -0.196     0.0571    64    -3.44  1.04e- 3\n 6 fixed  factweek3           -0.836     0.0755    64   -11.1   1.60e-16\n 7 fixed  factweek4           -1.16      0.0867    64   -13.3   4.00e-20\n 8 fixed  factweek5           -1.54      0.0943    64   -16.3   1.57e-24\n 9 fixed  variety2:factweek2   0.0280    0.0807    64     0.347 7.30e- 1\n10 fixed  variety3:factweek2   0.382     0.0807    64     4.73  1.26e- 5\n11 fixed  variety4:factweek2  -0.0140    0.0807    64    -0.174 8.63e- 1\n12 fixed  variety2:factweek3   0.282     0.107     64     2.64  1.03e- 2\n13 fixed  variety3:factweek3   0.662     0.107     64     6.20  4.55e- 8\n14 fixed  variety4:factweek3   0.388     0.107     64     3.64  5.55e- 4\n15 fixed  variety2:factweek4   0.228     0.123     64     1.86  6.77e- 2\n16 fixed  variety3:factweek4   0.744     0.123     64     6.06  7.86e- 8\n17 fixed  variety4:factweek4   0.390     0.123     64     3.18  2.28e- 3\n18 fixed  variety2:factweek5   0.402     0.133     64     3.01  3.70e- 3\n19 fixed  variety3:factweek5   0.672     0.133     64     5.04  4.11e- 6\n20 fixed  variety4:factweek5   0.222     0.133     64     1.66  1.01e- 1\n\n\n\n\n12.1.3 Check Model Assumptions\n\ncheck_model(lm2, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n12.1.4 Inference\nThe ANOVA table suggests a highly significant effect of the variety, week, and variety x week interaction effect.\n\nanova(lm2, type = \"marginal\")\n\n                 numDF denDF   F-value p-value\n(Intercept)          1    64 212.10509  &lt;.0001\nvariety              3    12  28.28895  &lt;.0001\nfactweek             4    64  74.79758  &lt;.0001\nvariety:factweek    12    64   7.03546  &lt;.0001\n\n\nWe can estimate the marginal means for variety and week effect and their interaction using emmeans() function.\n\nmean_1 &lt;- emmeans(lm2, ~ variety)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nmean_1\n\n variety emmean    SE df lower.CL upper.CL\n 1         3.50 0.288  4     2.70     4.29\n 2         4.59 0.288  4     3.79     5.39\n 3         4.63 0.288  4     3.84     5.43\n 4         4.61 0.288  4     3.81     5.40\n\nResults are averaged over the levels of: factweek \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nmean_2 &lt;- emmeans(lm2, ~ variety*factweek)\nmean_2\n\n variety factweek emmean    SE df lower.CL upper.CL\n 1       1          4.24 0.291  4     3.43     5.05\n 2       1          5.15 0.291  4     4.34     5.96\n 3       1          4.89 0.291  4     4.08     5.70\n 4       1          5.15 0.291  4     4.35     5.96\n 1       2          4.05 0.291  4     3.24     4.85\n 2       2          4.98 0.291  4     4.17     5.79\n 3       2          5.07 0.291  4     4.27     5.88\n 4       2          4.94 0.291  4     4.14     5.75\n 1       3          3.41 0.291  4     2.60     4.21\n 2       3          4.59 0.291  4     3.79     5.40\n 3       3          4.71 0.291  4     3.91     5.52\n 4       3          4.71 0.291  4     3.90     5.51\n 1       4          3.09 0.291  4     2.28     3.89\n 2       4          4.22 0.291  4     3.41     5.03\n 3       4          4.48 0.291  4     3.67     5.28\n 4       4          4.39 0.291  4     3.58     5.20\n 1       5          2.70 0.291  4     1.89     3.51\n 2       5          4.01 0.291  4     3.20     4.82\n 3       5          4.02 0.291  4     3.21     4.83\n 4       5          3.83 0.291  4     3.03     4.64\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\n\n\n\nTime variable\n\n\n\nHere is a quick step to make sure your fitting model correctly: make sure to have two time variables in your data one being numeric (e.g. ‘day’ as number) and other being factor/character(e.g. ‘day_factor’ as a factor/character). Where, numeric variable is used for fitting correlation matrix and factor/character variable used in model statement to evaluate the time variable effect on response variable.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Repeated Measures</span>"
    ]
  },
  {
    "objectID": "chapters/repeated-measures.html#split-plot-repeated-measures",
    "href": "chapters/repeated-measures.html#split-plot-repeated-measures",
    "title": "11  Repeated measures mixed models",
    "section": "12.2 Split Plot Repeated Measures",
    "text": "12.2 Split Plot Repeated Measures\nRecall, we have evaluated split plot design Chapter 5. In this example we will use the same methodology used in Chapter 5 and update it with repeated measures component.\nNext, let’s load “Yield” data. It is located here.\n\nYield &lt;- read.csv(here::here(\"data/Yield.csv\"))\n\nThis example contains yield data in a split-plot design. The yield data was collected repeatedly from the same Reps over 5 Sample_times. In this data set, we have:\n\nTable of variables in the data set\n\n\nRep\nreplication unit\n\n\nVariety\nMain plot, 2 levels\n\n\nFertilizer\nSplit plot, 3 levels\n\n\nYield\ncrop yield\n\n\nSample_time\ntime points for data collection\n\n\n\n\n12.2.1 Data Integrity Checks\nFirstly, we need to look at the class of variables in the data set.\n\nstr(Yield)\n\n'data.frame':   120 obs. of  6 variables:\n $ Sample_time: int  1 1 1 1 1 1 1 1 1 1 ...\n $ Variety    : chr  \"VAR1\" \"VAR1\" \"VAR1\" \"VAR1\" ...\n $ Fertilizer : int  1 1 1 1 2 2 2 2 3 3 ...\n $ Rep        : int  1 2 3 4 1 2 3 4 1 2 ...\n $ pH         : num  7.07 7.06 7.08 7.09 7.13 7.12 7.15 7.14 7.18 7.18 ...\n $ Yield      : num  0.604 0.595 3.145 3.091 2.415 ...\n\n\nWe will now convert the fertilizer and Rep into factor. In addition, we need to create a new factor variable (sample_time1) to analyze the time effect.\n\n\nFor lme(), independent variables in a character/factor form works fine. But, for mmrm() independent variables must be a factor. Thus, for sake of consistancy, we will be using independent variables in factor class.\n\nYield$Variety &lt;- factor(Yield$Variety) \nYield$Fertilizer &lt;- factor(Yield$Fertilizer) \nYield$Sample_time1 &lt;- factor(Yield$Sample_time) \nYield$Rep &lt;- factor(Yield$Rep)  \n\nTo fit model, we first need to convert Variety, Fertilizer, and Sample_time as factors. In addition, we need to create a new variable named ‘plot’ with a unique value for each plot. In addition, we need a create variable for each subject which is plot in this case and contains a unique value for each plot. The plot variable is needed to model the variation in each plot over the sampling time. The plot will be used as a subject with repeated measures. The subject variable can be factor or numeric but the time (it could be year, or sample_time) has to be a factor.\n\n##creating a plot variable \nYield$plot &lt;- factor(paste(Yield$Rep, Yield$Fertilizer, Yield$Variety, sep='-')) \nYield$Rep2 &lt;- factor(paste(Yield$Rep, Yield$Variety, sep='-')) \ntable(Yield$plot) \n\n\n1-1-VAR1 1-1-VAR2 1-2-VAR1 1-2-VAR2 1-3-VAR1 1-3-VAR2 2-1-VAR1 2-1-VAR2 \n       5        5        5        5        5        5        5        5 \n2-2-VAR1 2-2-VAR2 2-3-VAR1 2-3-VAR2 3-1-VAR1 3-1-VAR2 3-2-VAR1 3-2-VAR2 \n       5        5        5        5        5        5        5        5 \n3-3-VAR1 3-3-VAR2 4-1-VAR1 4-1-VAR2 4-2-VAR1 4-2-VAR2 4-3-VAR1 4-3-VAR2 \n       5        5        5        5        5        5        5        5 \n\n\n\ntable(Yield$Fertilizer, Yield$Variety) \n\n   \n    VAR1 VAR2\n  1   20   20\n  2   20   20\n  3   20   20\n\n\nLooks like a well balanced design with 2 variety treatments and 3 fertilizer treatments.\nBefore fitting a model, let’s check the distribution of the response variable.\n\n\n\n\n\n\n\n\n\nFigure 12.2: Histogram of the dependent variable.\n\n\n\n\n\nhist(Yield$Yield)\n\n\n\n12.2.2 Model fit\nThis data can be analyze either using nlme or mmrm.\nusing lme() from nlme package.\nLet’s say we want to fit a model using AR1 structure as shown in the RCBD repeated measures example. Previously, we used lme() from nlme package to fit the model. In this example, along with nlme() we will also mmrm() function from the mmrm package. In addition, instead of summary() function we will use tidy() function from the ‘broom.mixed’ packageto look at estimates of mixed and random effects. In this model we used tidy(). This will generate a tidy workflow in particular by providing standardized verbs that provide information on estimates, standard errors, confidence intervals, etc.\n\nnlmemmrm\n\n\n\ncorr_str1 = corAR1(form = ~ Sample_time|Rep/Variety/plot, value = 0.2, fixed = FALSE)\n\nmod &lt;- lme(Yield ~ Sample_time1*Variety*Fertilizer,\n                random = ~ 1|Rep/Variety/plot,\n                corr= corr_str1,\n                data = Yield, na.action= na.exclude)\n\n#summary(mod)\n\ntidy(mod)\n\n# A tibble: 30 × 7\n   effect term                      estimate std.error    df statistic   p.value\n   &lt;chr&gt;  &lt;chr&gt;                        &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 fixed  (Intercept)                  1.86      0.708    72     2.63  0.0105   \n 2 fixed  Sample_time12                0.515     0.688    72     0.748 0.457    \n 3 fixed  Sample_time13                0.787     0.674    72     1.17  0.247    \n 4 fixed  Sample_time14                1.35      0.675    72     2.00  0.0496   \n 5 fixed  Sample_time15                2.84      0.675    72     4.21  0.0000731\n 6 fixed  VarietyVAR2                 -0.996     0.861     3    -1.16  0.331    \n 7 fixed  Fertilizer2                  1.27      0.861    12     1.47  0.167    \n 8 fixed  Fertilizer3                  2.07      0.861    12     2.40  0.0333   \n 9 fixed  Sample_time12:VarietyVAR2    0.739     0.974    72     0.759 0.451    \n10 fixed  Sample_time13:VarietyVAR2    0.269     0.954    72     0.282 0.779    \n# ℹ 20 more rows\n\n\n\n\n\nfit1 &lt;- mmrm(\n  formula = Yield ~ Sample_time1*Variety*Fertilizer +  ar1(Sample_time1|Rep/plot),\n  data = Yield)\n\ntidy(fit1)\n\n# A tibble: 30 × 6\n   term                      estimate std.error    df statistic   p.value\n   &lt;chr&gt;                        &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;\n 1 (Intercept)                  2.86      0.464 12.7      6.16  0.0000387\n 2 Sample_time12                0.656     0.310  1.81     2.12  0.182    \n 3 Sample_time13                1.40      0.414  2.29     3.39  0.0636   \n 4 Sample_time14                1.46      0.484  2.87     3.01  0.0605   \n 5 Sample_time15                2.47      0.549  3.14     4.50  0.0186   \n 6 VarietyVAR2                 -1.07      0.656 12.7     -1.63  0.128    \n 7 Fertilizer2                  1.67      0.656 12.7      2.55  0.0245   \n 8 Fertilizer3                  0.595     0.656 12.7      0.908 0.381    \n 9 Sample_time12:VarietyVAR2   -0.591     0.438  1.81    -1.35  0.321    \n10 Sample_time13:VarietyVAR2   -0.412     0.586  2.29    -0.704 0.546    \n# ℹ 20 more rows\n\n\n\n\n\n\n\n12.2.3 Model diagnostics\nWe will use check_model() from ‘performance’ package to evaluate the model fitness of model fitted using nlme (mod1). However, the mmrm model class doesn’t work with performance package, so we will evalute the model diagnostics by plotting the residuals using base R functions.\n\nnlmemmrm\n\n\n\ncheck_model(mod, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\nplot(residuals(fit1), xlab = \"fitted values\", ylab = \"residuals\")\nqqnorm(residuals(fit1)); qqline(residuals(fit1))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThese diagnostic plots look great! The linearity and homogeneity of variance plots show no trend. The normal Q-Q plots for the overall residuals and for the random effects all fall on a straight line so we can be satisfied with that.\n\n\n12.2.4 Inference\n\nnlmemmrm\n\n\n\nanova(mod, type = \"marginal\")\n\n                                numDF denDF  F-value p-value\n(Intercept)                         1    72 6.899272  0.0105\nSample_time1                        4    72 5.318690  0.0008\nVariety                             1     3 1.338879  0.3310\nFertilizer                          2    12 2.936073  0.0916\nSample_time1:Variety                4    72 0.998154  0.4143\nSample_time1:Fertilizer             8    72 8.158884  &lt;.0001\nVariety:Fertilizer                  2    12 0.237417  0.7923\nSample_time1:Variety:Fertilizer     8    72 0.731698  0.6631\n\n\n\n\n\n#car::Anova(fit1, type = \"III\")\n#Anova.mmrm(fit1, type = \"III\")\n\n\n\n\nNext, we can estimate marginal means and confidence intervals for the independent variables using emmeans().\n\nnlmemmrm\n\n\n\nemmeans(mod,~ Fertilizer)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Fertilizer emmean    SE df lower.CL upper.CL\n 1            2.44 0.472  3    0.937     3.94\n 2            6.69 0.472  3    5.192     8.20\n 3            8.06 0.472  3    6.554     9.56\n\nResults are averaged over the levels of: Sample_time1, Variety \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nemmeans(mod,~ Variety)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Variety emmean    SE df lower.CL upper.CL\n VAR1      6.09 0.438  3     4.69     7.48\n VAR2      5.37 0.438  3     3.98     6.77\n\nResults are averaged over the levels of: Sample_time1, Fertilizer \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\n\n\nemmeans(fit1,~ Fertilizer)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Fertilizer emmean    SE   df lower.CL upper.CL\n 1            3.27 0.246 8.02     2.70     3.83\n 2            7.93 0.246 8.02     7.37     8.50\n 3            8.51 0.246 8.02     7.94     9.07\n\nResults are averaged over the levels of: Sample_time1, Variety, Rep \nConfidence level used: 0.95 \n\n emmeans(fit1,~ Variety)\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n Variety emmean  SE   df lower.CL upper.CL\n VAR1      6.89 0.2 8.02     6.42     7.35\n VAR2      6.25 0.2 8.02     5.79     6.71\n\nResults are averaged over the levels of: Sample_time1, Fertilizer, Rep \nConfidence level used: 0.95 \n\n\n\n\n\n\n\nAdd a link for further exploring emmeans and contrast statements.",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Repeated Measures</span>"
    ]
  },
  {
    "objectID": "chapters/strip-plot.html#background",
    "href": "chapters/strip-plot.html#background",
    "title": "8  Strip Plot Design",
    "section": "",
    "text": "lme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(performance); library(ggplot2)\nlibrary(broom.mixed)\n\n\n\n\nlibrary(nlme); library(performance); library(emmeans)\nlibrary(dplyr); library(ggplot2); library(broom.mixed)\n\n\n\n\n\n\n\nTable of variables in the data set\n\n\nrep\nreplication unit\n\n\nnitro\nnitrogen fertilizer in kg/ha\n\n\ngen\nrice variety\n\n\nrow\nrow (represents gen)\n\n\ncol\ncolumn (represents nitro)\n\n\nyield\ngrain yield in kg/ha\n\n\n\n\n\n\n8.1.1 Data integrity checks\n\nstr(data1)\n\n'data.frame':   54 obs. of  6 variables:\n $ yield: int  2373 4076 7254 4007 5630 7053 2620 4676 7666 2726 ...\n $ rep  : Factor w/ 3 levels \"R1\",\"R2\",\"R3\": 1 1 1 1 1 1 1 1 1 1 ...\n $ nitro: int  0 60 120 0 60 120 0 60 120 0 ...\n $ gen  : Factor w/ 6 levels \"G1\",\"G2\",\"G3\",..: 1 1 1 2 2 2 3 3 3 4 ...\n $ col  : int  1 3 2 1 3 2 1 3 2 1 ...\n $ row  : int  1 1 1 3 3 3 4 4 4 2 ...\n\n\n\ndata1$nitro &lt;- as.factor(data1$nitro)\n\n\ntable(data1$col, data1$row, data1$rep)\n\n, ,  = R1\n\n   \n    1 2 3 4 5 6\n  1 1 1 1 1 1 1\n  2 1 1 1 1 1 1\n  3 1 1 1 1 1 1\n  4 0 0 0 0 0 0\n  5 0 0 0 0 0 0\n  6 0 0 0 0 0 0\n  7 0 0 0 0 0 0\n  8 0 0 0 0 0 0\n  9 0 0 0 0 0 0\n\n, ,  = R2\n\n   \n    1 2 3 4 5 6\n  1 0 0 0 0 0 0\n  2 0 0 0 0 0 0\n  3 0 0 0 0 0 0\n  4 1 1 1 1 1 1\n  5 1 1 1 1 1 1\n  6 1 1 1 1 1 1\n  7 0 0 0 0 0 0\n  8 0 0 0 0 0 0\n  9 0 0 0 0 0 0\n\n, ,  = R3\n\n   \n    1 2 3 4 5 6\n  1 0 0 0 0 0 0\n  2 0 0 0 0 0 0\n  3 0 0 0 0 0 0\n  4 0 0 0 0 0 0\n  5 0 0 0 0 0 0\n  6 0 0 0 0 0 0\n  7 1 1 1 1 1 1\n  8 1 1 1 1 1 1\n  9 1 1 1 1 1 1\n\n\n\n\n8.1.2 Model Building\n\nlme4nlme\n\n\n\nmodel_lmer &lt;- lmer(yield ~  nitro*gen +  (1|rep) + \n                   (1|rep:row) + (1|rep:col), \n                   data = data1)\n\ntidy(model_lmer)\n\n# A tibble: 22 × 8\n   effect group term           estimate std.error statistic    df     p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;             &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)       3572.      572.     6.24   17.8 0.00000732 \n 2 fixed  &lt;NA&gt;  nitro60           1560.      558.     2.80   22.4 0.0104     \n 3 fixed  &lt;NA&gt;  nitro120          3976.      558.     7.13   22.4 0.000000341\n 4 fixed  &lt;NA&gt;  genG2             1363.      717.     1.90   20.9 0.0714     \n 5 fixed  &lt;NA&gt;  genG3              678.      717.     0.945  20.9 0.355      \n 6 fixed  &lt;NA&gt;  genG4              487.      717.     0.679  20.9 0.504      \n 7 fixed  &lt;NA&gt;  genG5              530.      717.     0.739  20.9 0.468      \n 8 fixed  &lt;NA&gt;  genG6             -364.      717.    -0.508  20.9 0.617      \n 9 fixed  &lt;NA&gt;  nitro60:genG2      219.      741.     0.296  20.0 0.771      \n10 fixed  &lt;NA&gt;  nitro120:genG2   -1699.      741.    -2.29   20.0 0.0328     \n# ℹ 12 more rows\n\n\n\n\n\nmodel_lme &lt;-lme(yield ~  nitro*gen,\n                random = list(one = pdBlocked(list(\n        pdIdent(~ 0 + rep), \n         pdIdent(~ 0 + rep:row), \n        pdIdent(~ 0 + rep:col)))),\n        data = data1 %&gt;% mutate(one = factor(1)))\nsummary(model_lme)\n\nLinear mixed-effects model fit by REML\n  Data: data1 %&gt;% mutate(one = factor(1)) \n       AIC      BIC    logLik\n  653.1252 687.9627 -304.5626\n\nRandom effects:\n Composite Structure: Blocked\n\n Block 1: repR1, repR2, repR3\n Formula: ~0 + rep | one\n Structure: Multiple of an Identity\n            repR1     repR2     repR3\nStdDev: 0.2921713 0.2921713 0.2921713\n\n Block 2: repR1:row, repR2:row, repR3:row\n Formula: ~0 + rep:row | one\n Structure: Multiple of an Identity\n        repR1:row repR2:row repR3:row\nStdDev:  213.0671  213.0671  213.0671\n\n Block 3: repR1:col, repR2:col, repR3:col\n Formula: ~0 + rep:col | one\n Structure: Multiple of an Identity\n        repR1:col repR2:col repR3:col Residual\nStdDev:  120.3633  120.3633  120.3633 754.7183\n\nFixed effects:  yield ~ nitro * gen \n                   Value Std.Error DF   t-value p-value\n(Intercept)     2875.162  520.2572 36  5.526425  0.0000\nnitro60         1515.188  620.8460 36  2.440521  0.0197\nnitro120        4041.826  619.7277 36  6.521939  0.0000\ngenG2            973.891  646.6847 36  1.505975  0.1408\ngenG3            465.595  636.8847 36  0.731050  0.4695\ngenG4             33.189  635.9573 36  0.052188  0.9587\ngenG5            486.865  658.4776 36  0.739380  0.4645\ngenG6           -743.510  644.6572 36 -1.153341  0.2564\nnitro60:genG2    219.000  871.4737 36  0.251298  0.8030\nnitro120:genG2 -1699.333  871.4737 36 -1.949954  0.0590\nnitro60:genG3    312.333  871.4737 36  0.358397  0.7221\nnitro120:genG3  -357.667  871.4737 36 -0.410416  0.6839\nnitro60:genG4    -65.667  871.4737 36 -0.075351  0.9404\nnitro120:genG4  -941.000  871.4737 36 -1.079780  0.2874\nnitro60:genG5    -28.667  871.4737 36 -0.032894  0.9739\nnitro120:genG5 -2066.000  871.4737 36 -2.370697  0.0232\nnitro60:genG6  -1053.333  871.4737 36 -1.208681  0.2347\nnitro120:genG6 -4691.667  871.4737 36 -5.383601  0.0000\n Correlation: \n               (Intr) nitr60 ntr120 genG2  genG3  genG4  genG5  genG6  n60:G2\nnitro60        -0.568                                                        \nnitro120       -0.627  0.500                                                 \ngenG2          -0.534  0.472  0.476                                          \ngenG3          -0.528  0.474  0.475  0.533                                   \ngenG4          -0.553  0.486  0.489  0.530  0.515                            \ngenG5          -0.503  0.450  0.453  0.532  0.536  0.496                     \ngenG6          -0.481  0.470  0.465  0.526  0.527  0.517  0.520              \nnitro60:genG2   0.419 -0.702 -0.352 -0.674 -0.342 -0.343 -0.331 -0.338       \nnitro120:genG2  0.419 -0.351 -0.703 -0.674 -0.342 -0.343 -0.331 -0.338  0.500\nnitro60:genG3   0.419 -0.702 -0.352 -0.337 -0.684 -0.343 -0.331 -0.338  0.500\nnitro120:genG3  0.419 -0.351 -0.703 -0.337 -0.684 -0.343 -0.331 -0.338  0.250\nnitro60:genG4   0.419 -0.702 -0.352 -0.337 -0.342 -0.685 -0.331 -0.338  0.500\nnitro120:genG4  0.419 -0.351 -0.703 -0.337 -0.342 -0.685 -0.331 -0.338  0.250\nnitro60:genG5   0.419 -0.702 -0.352 -0.337 -0.342 -0.343 -0.662 -0.338  0.500\nnitro120:genG5  0.419 -0.351 -0.703 -0.337 -0.342 -0.343 -0.662 -0.338  0.250\nnitro60:genG6   0.419 -0.702 -0.352 -0.337 -0.342 -0.343 -0.331 -0.676  0.500\nnitro120:genG6  0.419 -0.351 -0.703 -0.337 -0.342 -0.343 -0.331 -0.676  0.250\n               n120:G2 n60:G3 n120:G3 n60:G4 n120:G4 n60:G5 n120:G5 n60:G6\nnitro60                                                                   \nnitro120                                                                  \ngenG2                                                                     \ngenG3                                                                     \ngenG4                                                                     \ngenG5                                                                     \ngenG6                                                                     \nnitro60:genG2                                                             \nnitro120:genG2                                                            \nnitro60:genG3   0.250                                                     \nnitro120:genG3  0.500   0.500                                             \nnitro60:genG4   0.250   0.500  0.250                                      \nnitro120:genG4  0.500   0.250  0.500   0.500                              \nnitro60:genG5   0.250   0.500  0.250   0.500  0.250                       \nnitro120:genG5  0.500   0.250  0.500   0.250  0.500   0.500               \nnitro60:genG6   0.250   0.500  0.250   0.500  0.250   0.500  0.250        \nnitro120:genG6  0.500   0.250  0.500   0.250  0.500   0.250  0.500   0.500\n\nStandardized Within-Group Residuals:\n        Min          Q1         Med          Q3         Max \n-1.55534424 -0.51887363  0.04037623  0.64567030  1.67178221 \n\nNumber of Observations: 54\nNumber of Groups: 1 \n\n#tidy(model_lme)\n\n\n\n\n\n8.1.2.1 Check Model Assumptions\n\nlme4nlme\n\n\n\ncheck_model(model_lmer, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\nplot(model_lme, resid(., scaled=TRUE) ~ fitted(.), \n     xlab = \"fitted values\", ylab = \"studentized residuals\")\nqqnorm(residuals(model_lme))\nqqline(residuals(model_lme))\n\n\n\n\n\n\n\n\n\n\n\n\n\nThe residuals fit the assumptions of the model well.\n\n\n8.1.2.2 Inference\nWe can evaluate the model for the analysis of variance, for main and interaction effects.\n\nlme4nlme\n\n\n\ncar::Anova(model_lmer, type = \"III\", test.statistics = \"F\")\n\nAnalysis of Deviance Table (Type III Wald chisquare tests)\n\nResponse: yield\n              Chisq Df Pr(&gt;Chisq)    \n(Intercept) 38.9728  1  4.298e-10 ***\nnitro       51.5701  2  6.334e-12 ***\ngen          6.8343  5     0.2333    \nnitro:gen   58.0064 10  8.621e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(model_lme, type = \"marginal\")\n\n            numDF denDF   F-value p-value\n(Intercept)     1    36 30.541371  &lt;.0001\nnitro           2    36 21.713558  &lt;.0001\ngen             5    36  1.705969  0.1583\nnitro:gen      10    36  4.192063  0.0007\n\n\n\n\n\nestimate marginal means\n\nlme4nlme\n\n\n\nemm1 &lt;- emmeans(model_lmer, ~ nitro*gen) \nemm1\n\n nitro gen emmean  SE   df lower.CL upper.CL\n 0     G1    3572 572 17.8     2368     4775\n 60    G1    5132 572 17.8     3929     6335\n 120   G1    7548 572 17.8     6345     8751\n 0     G2    4934 572 17.8     3731     6138\n 60    G2    6714 572 17.8     5510     7917\n 120   G2    7211 572 17.8     6008     8415\n 0     G3    4250 572 17.8     3046     5453\n 60    G3    6122 572 17.8     4919     7326\n 120   G3    7868 572 17.8     6665     9072\n 0     G4    4059 572 17.8     2856     5262\n 60    G4    5554 572 17.8     4350     6757\n 120   G4    7094 572 17.8     5891     8298\n 0     G5    4102 572 17.8     2898     5305\n 60    G5    5633 572 17.8     4430     6837\n 120   G5    6012 572 17.8     4809     7215\n 0     G6    3207 572 17.8     2004     4411\n 60    G6    3714 572 17.8     2511     4918\n 120   G6    2492 572 17.8     1289     3695\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\nemm1 &lt;- emmeans(model_lme, ~ nitro)\n\nWarning in model.matrix.default(trms, m, contrasts.arg = contrasts): variable\n'rep' is absent, its contrast will be ignored\nWarning in model.matrix.default(trms, m, contrasts.arg = contrasts): variable\n'rep' is absent, its contrast will be ignored\n\n\nNOTE: Results may be misleading due to involvement in interactions\n\nemm1\n\nWarning in qt((1 - level)/adiv, df): NaNs produced\n\n\n nitro emmean  SE df lower.CL upper.CL\n 0       3078 398  0      NaN      NaN\n 60      4490 418  0      NaN      NaN\n 120     5494 368  0      NaN      NaN\n\nResults are averaged over the levels of: gen \nDegrees-of-freedom method: containment \nConfidence level used: 0.95",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Strip Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/Strip-plot.html",
    "href": "chapters/Strip-plot.html",
    "title": "7  Strip Plot Design",
    "section": "",
    "text": "7.1 Background\nIt is very common design where experimental treatments are applied at random to experimental units within each block. The blocks are intended to control for a nuisance source of variation, such as over time, spatial variance, changes in equipment or operators, or myriad other causes.\nThe statistical model:\nA strip-plot experiment with three reps, variety as the horizontal strip and nitrogen fertilizer as the vertical strip.\ndata1 &lt;- agridat::gomez.stripplot\nstr(data1)\n\n'data.frame':   54 obs. of  6 variables:\n $ yield: int  2373 4076 7254 4007 5630 7053 2620 4676 7666 2726 ...\n $ rep  : Factor w/ 3 levels \"R1\",\"R2\",\"R3\": 1 1 1 1 1 1 1 1 1 1 ...\n $ nitro: int  0 60 120 0 60 120 0 60 120 0 ...\n $ gen  : Factor w/ 6 levels \"G1\",\"G2\",\"G3\",..: 1 1 1 2 2 2 3 3 3 4 ...\n $ col  : int  1 3 2 1 3 2 1 3 2 1 ...\n $ row  : int  1 1 1 3 3 3 4 4 4 2 ...\ndata1$nitro &lt;- as.factor(data1$nitro)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Strip Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/Strip-plot.html#background",
    "href": "chapters/Strip-plot.html#background",
    "title": "7  Strip Plot Design",
    "section": "",
    "text": "lme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(performance); library(ggplot2)\nlibrary(broom.mixed)\n\n\n\n\nlibrary(nlme); library(performance); library(emmeans)\nlibrary(dplyr); library(ggplot2); library(broom.mixed)",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Strip Plot Design</span>"
    ]
  },
  {
    "objectID": "chapters/additional-resources.html",
    "href": "chapters/additional-resources.html",
    "title": "14  Additional Resources",
    "section": "",
    "text": "14.1 Further Reading",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Additional Resources</span>"
    ]
  },
  {
    "objectID": "chapters/lattice-design.html#background",
    "href": "chapters/lattice-design.html#background",
    "title": "10  Lattice Design",
    "section": "",
    "text": "Yates, F. 1936. “A New Method of Arranging Variety Trials Involving a Large Number of Varieties.” J Agric Sci 26: 424–55.\n\nPatterson, H. D., and E. R. Williams. 1976. “A New Class of Resolvable Incomplete Block Designs.” Biometrika 63 (1): 83–92. https://doi.org/10.2307/2335087.",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Lattice Design</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bates, Douglas, Martin Mächler, Ben Bolker, and Steve Walker. 2015.\n“Fitting Linear Mixed-Effects Models Using lme4.” Journal of Statistical\nSoftware 67 (1): 1–48. https://doi.org/10.18637/jss.v067.i01.\n\n\nBolker, Ben, and David Robinson. 2024. Broom.mixed: Tidying Methods\nfor Mixed Models. https://CRAN.R-project.org/package=broom.mixed.\n\n\nBroman, Karl W., and Kara H. Woo. 2018. “Data\nOrganization in Spreadsheets.” The\nAmerican Statistician 72 (1): 2–10. https://doi.org/10.1080/00031305.2017.1375989.\n\n\nHartig, Florian. 2022. DHARMa: Residual Diagnostics for Hierarchical\n(Multi-Level / Mixed) Regression Models. https://CRAN.R-project.org/package=DHARMa.\n\n\nKuznetsova, Alexandra, Per B. Brockhoff, and Rune H. B. Christensen.\n2017. “lmerTest Package: Tests in\nLinear Mixed Effects Models.” Journal of Statistical\nSoftware 82 (13): 1–26. https://doi.org/10.18637/jss.v082.i13.\n\n\nLenth, Russell V. 2022. Emmeans: Estimated Marginal Means, Aka\nLeast-Squares Means. https://CRAN.R-project.org/package=emmeans.\n\n\nLüdecke, Daniel, Mattan S. Ben-Shachar, Indrajeet Patil, Philip\nWaggoner, and Dominique Makowski. 2021. “performance: An R Package for\nAssessment, Comparison and Testing of Statistical Models.”\nJournal of Open Source Software 6 (60): 3139. https://doi.org/10.21105/joss.03139.\n\n\nPatterson, H. D., and E. R. Williams. 1976. “A New\nClass of Resolvable Incomplete\nBlock Designs.” Biometrika 63\n(1): 83–92. https://doi.org/10.2307/2335087.\n\n\nPinheiro, José C., and Douglas M. Bates. 2000. Mixed-Effects Models\nin s and s-PLUS. New York: Springer. https://doi.org/10.1007/b98882.\n\n\nPinheiro, José, Douglas Bates, and R Core Team. 2023. Nlme: Linear\nand Nonlinear Mixed Effects Models. https://CRAN.R-project.org/package=nlme.\n\n\nYates, F. 1936. “A New Method of Arranging Variety Trials\nInvolving a Large Number of Varieties.” J Agric Sci 26:\n424–55.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "chapters/additional-resources.html#further-reading",
    "href": "chapters/additional-resources.html#further-reading",
    "title": "14  Additional Resources",
    "section": "",
    "text": "lme4 vignette for fitting linear mixed models\nMixed-Effects Models in S and S-PLUS thee book for nlme, by José C. Pinheiro and Douglas M. Bates. We used this book extensively for developing this guide. Sadly, it’s both out of print and we could not find a free copy online. However, there are affordable used copies available.\nMixed Effects Models and Extensions in Ecology with R by Alain F. Zuur, Elena N. Ieno, Neil Walker, Anatoly A. Saveliev, and Graham M. Smith.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Additional Resources</span>"
    ]
  },
  {
    "objectID": "chapters/additional-resources.html#other-resources",
    "href": "chapters/additional-resources.html#other-resources",
    "title": "14  Additional Resources",
    "section": "14.2 Other Resources",
    "text": "14.2 Other Resources\n\nEasy Stats a collection of R packages to assist in statistical modelling, with a big focus on linear models.\nMixed Model CRAN Task View a curated list of R packages relevant to mixed modelling. This is a great place to start\nR-SIG-mixed-models mailing list for help and discussion of mixed-model-related questions, course announcements, etc\nGrammar of Experimental Designs by Emi Tanaka. This has a great description of basic principles of experimental design.",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Additional Resources</span>"
    ]
  },
  {
    "objectID": "chapters/analysis-tips.html#footnotes",
    "href": "chapters/analysis-tips.html#footnotes",
    "title": "2  Think About Your Analytical Goals",
    "section": "",
    "text": "For an excellent set of basic instructions on data preparation, please see: (Broman and Woo 2018) Broman, K. W., & Woo, K. H. (2018). Data Organization in Spreadsheets. The American Statistician, 72(1), 2–10.↩︎\nWasserstein, R. L., & Lazar, N. A. (2016). The ASA Statement on p-Values: Context, Process, and Purpose. The American Statistician, 70(2), 129–133.↩︎\nGreenland S, Senn SJ, Rothman KJ, Carlin JB, Poole C, Goodman SN, Altman DG. (2016) Statistical tests, P values, confidence intervals, and power: a guide to misinterpretations. Eur J Epidemiol. 31(4):337-50. doi: 10.1007/s10654-016-0149-3.↩︎",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Tao of Analysis</span>"
    ]
  },
  {
    "objectID": "chapters/advanced-analytical-options.html",
    "href": "chapters/advanced-analytical-options.html",
    "title": "12  Advanced Analysis",
    "section": "",
    "text": "12.1 Estimated Marginal Means\nCompact letter display\n#library(multcomp); library(multcompView)\nThe letters indicating significant differences can be generated using cld() function from the ‘multcomp’ package”. In the output below, groups sharing a letter in the .group are not statistically different from each other.\n#cld(m1, Letters= letters)",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Advanced Analysis</span>"
    ]
  },
  {
    "objectID": "chapters/advanced-analytical-options.html#variance-components",
    "href": "chapters/advanced-analytical-options.html#variance-components",
    "title": "12  Advanced Analysis",
    "section": "12.2 Variance Components",
    "text": "12.2 Variance Components\n\n12.2.1 Unequal Variance\n\n12.2.1.1 Case 1: Unequal Variance Due to a Factor\n\nvar_ex1 &lt;- here::here(read.csv(\"data\", \"MET_trial_variance.csv\"))\n\n\nvar_ex1$block &lt;- as.character(var_ex1$block)\nhist(var_ex1$yield)\nboxplot(yield ~ site, data = var_ex1)\n\n\nm1_a &lt;- lme(yield ~ site:variety + variety, \n                random = ~ 1 |site/block, \n                na.action = na.exclude, \n                data = var_ex1)\n\n\nm1_b &lt;- update(m1_a, weights = varIdent(form = ~1|site))\n\n\n\nm1_b &lt;- update(m1_a, weights = varIdent(form = ~1|site))\n\nis equivalent to\n\nm1_b &lt;- lme(yield ~ site:variety + variety, \n                random = ~ 1 |site/block,\n                weights = varIdent(form = ~1|site), \n                na.action = na.exclude, \n                data = var_ex1)\n\n\n\n\n12.2.1.2 Case 2: Variance is related to the fitted values\n\nvar_ex2 &lt;- read.csv(here::here(\"data\", \"single_trial_variance.csv\"))\n\n\nvar_ex1$block &lt;- as.character(var_ex1$block)\nhist(var_ex2$yield)\n\n\nm2_a &lt;- lme(yield ~ variety, \n               random = ~ 1 |block, \n               na.action = na.exclude, \n               data = var_ex2)\n\n\nm2_b &lt;- update(m2_a, weights = varPower())",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Advanced Analysis</span>"
    ]
  },
  {
    "objectID": "chapters/advanced-analytical-options.html#estimate-cv",
    "href": "chapters/advanced-analytical-options.html#estimate-cv",
    "title": "12  Advanced Analysis",
    "section": "12.3 Estimate CV",
    "text": "12.3 Estimate CV\n\nm2_ave &lt;- fixef(m2_b)[1]\nnames(m2_b) &lt;- NULL\n\n\nm2_cv = sigma(m2_b)/m2_ave*100\nm2_cv",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Advanced Analysis</span>"
    ]
  },
  {
    "objectID": "chapters/advanced-analytical-options.html#estimate-lsd",
    "href": "chapters/advanced-analytical-options.html#estimate-lsd",
    "title": "12  Advanced Analysis",
    "section": "12.4 Estimate LSD",
    "text": "12.4 Estimate LSD\n\n# source: https://github.com/stats4sd/LSDer/blob/master/R/LSDer.R\n\nLSDer &lt;- function(m, term, level = 0.95) {\n  # browser() # for troubleshooting\n  # m = model object from lme4 or nlme\n  # term = independent variable in reference grid\n  # level = confidence interval\n  \n  if(class(m) == \"lme\") {\n    t1 &lt;- table(m$data[term])\n  } else {\n    t1 &lt;- table(m@frame[term])\n  }\n  \n  ns &lt;- cbind(median(t1), median(t1))\n  rownames(ns) &lt;- NULL\n  \n  MS &lt;- sigma(m) ** 2\n  \n  if(class(m) == \"lme\") {\n    DF &lt;- anova(m)[term, \"denDF\"]\n  } else {\n    DF &lt;- suppressWarnings((car::Anova(m, test = \"F\"))[term, \"Df.res\"])\n  }\n  \n  NREP1 &lt;- ns[, 1]\n  NREP2 &lt;- ns[, 2]\n  LSD &lt;- qt(1-((1-level)/2),DF)*sqrt(MS*(1/NREP1+1/NREP2))\n  \n  return(LSD)\n}\n\n\n12.4.1 Looking at Variance Components\n\nvar_comps &lt;- read.csv(here::here(\"data\", \"potato_tuber_size.csv\"))",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Advanced Analysis</span>"
    ]
  },
  {
    "objectID": "index.html#what-this-does-not-cover",
    "href": "index.html#what-this-does-not-cover",
    "title": "Field Guide to the R Mixed Model Wilderness",
    "section": "What This Does Not Cover",
    "text": "What This Does Not Cover\n\nGeneralized linear models. We do address cases of unequal variance, but if another distribution and/or a link function is required for the model, that is not addressed in this guide.\nBasic principles of experimental design. We assume you know this, but if you do not, please check out the Grammar of Experimental Design.\nInstructions in using R. We assume familiarity with R. If you need help in learning R, there are numerous guides, including our introductory R course.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#notice",
    "href": "index.html#notice",
    "title": "Field Guide to the R Mixed Model Wilderness",
    "section": "Notice!",
    "text": "Notice!\nThis is a work-in-progress and will be updated over time.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html",
    "href": "chapters/means-and-contrasts.html",
    "title": "12  Marginal Means & Contrasts",
    "section": "",
    "text": "12.1 Background\nTo start off with, we need to define estimated marginal means (EMM). Estimated marginal means are defined as marginal means of a variable across all levels of other variables in a model, essentially giving a “population-level” average.\nThe emmeans package is one of the most commonly used package in R in determine EMMs. This package provides methods for obtaining EMMs (also known as least-squares means) for factor combinations in a variety of models. The emmeans package is one of several alternatives to facilitate post hoc methods application and contrast analysis. It is a relatively recent replacement for the lsmeans package that some R users may be familiar with. It is intended for use with a wide variety of ANOVA models, including repeated measures and nested designs(mixed models). This is a flexible package that comes with a set of detailed vignettes and works with a lot of different model objects.\nIn this chapter, we will demonstrate the extended use of the emmeans package to calculate estimated marginal means and contrasts.\nTo demonstrate the use of the emmeans() package. We will pull the model from split plot lesson (Chapter 6), where we evaluated the effect of Nitrogen and Variety on Oat yield. This data contains 6 blocks, 3 main plots (Variety) and 4 subplots (Nitrogen). The primary outcome variable was oat yield. To read more about the experiment layout details please read RCBD split-plot section in Chapter 6.\nLet’s start the analysis by loading the required libraries for fitting linear mixed models using nlme package.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#estimated-marginal-means",
    "href": "chapters/means-and-contrasts.html#estimated-marginal-means",
    "title": "12  Marginal Means & Contrasts",
    "section": "",
    "text": "Cautionary Note about CLD\n\n\n\nIt’s important to note that we cannot conclude that treatment levels with the same letter are the same. We can only conclude that they are not different.\nThere is a separate branch of statistics, “equivalence testing” that is for ascertaining if things are sufficiently similar to conclude they are equivalent.\nSee ?sec-cld_warning for additional warnings about problems with using compact letter display.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/variance-components.html#unequal-variance",
    "href": "chapters/variance-components.html#unequal-variance",
    "title": "13  Variance & Variance Components",
    "section": "",
    "text": "13.1.1 Case 1: Unequal Variance Due to a Factor\n\nvar_ex1 &lt;- here::here(read.csv(\"data\", \"MET_trial_variance.csv\"))\n\n\nvar_ex1$block &lt;- as.character(var_ex1$block)\nhist(var_ex1$yield)\nboxplot(yield ~ site, data = var_ex1)\n\n\nm1_a &lt;- lme(yield ~ site:variety + variety, \n                random = ~ 1 |site/block, \n                na.action = na.exclude, \n                data = var_ex1)\n\n\nm1_b &lt;- update(m1_a, weights = varIdent(form = ~1|site))\n\n\n\nm1_b &lt;- update(m1_a, weights = varIdent(form = ~1|site))\n\nis equivalent to\n\nm1_b &lt;- lme(yield ~ site:variety + variety, \n                random = ~ 1 |site/block,\n                weights = varIdent(form = ~1|site), \n                na.action = na.exclude, \n                data = var_ex1)\n\n\n\n\n13.1.2 Case 2: Variance is related to the fitted values\n\nvar_ex2 &lt;- read.csv(here::here(\"data\", \"single_trial_variance.csv\"))\n\n\nvar_ex1$block &lt;- as.character(var_ex1$block)\nhist(var_ex2$yield)\n\n\nm2_a &lt;- lme(yield ~ variety, \n               random = ~ 1 |block, \n               na.action = na.exclude, \n               data = var_ex2)\n\n\nm2_b &lt;- update(m2_a, weights = varPower())",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Variance and Variance Components</span>"
    ]
  },
  {
    "objectID": "chapters/variance-components.html#coefficient-of-variation",
    "href": "chapters/variance-components.html#coefficient-of-variation",
    "title": "13  Variance & Variance Components",
    "section": "13.2 Coefficient of Variation",
    "text": "13.2 Coefficient of Variation\n\nm2_ave &lt;- fixef(m2_b)[1]\nnames(m2_b) &lt;- NULL\n\n\nm2_cv = sigma(m2_b)/m2_ave*100\nm2_cv\n\n\n13.2.1 Looking at Variance Components\n\nvar_comps &lt;- read.csv(here::here(\"data\", \"potato_tuber_size.csv\"))",
    "crumbs": [
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Variance and Variance Components</span>"
    ]
  },
  {
    "objectID": "chapters/troubleshooting.html",
    "href": "chapters/troubleshooting.html",
    "title": "14  Troubleshooting",
    "section": "",
    "text": "14.1 Common Errors we Encounter",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Troubleshooting</span>"
    ]
  },
  {
    "objectID": "chapters/troubleshooting.html#common-errors-we-encounter",
    "href": "chapters/troubleshooting.html#common-errors-we-encounter",
    "title": "14  Troubleshooting",
    "section": "",
    "text": "14.1.1 Convergence Issues\n[lme4 convergence warnings\nmore\n\n\n14.1.2 Other",
    "crumbs": [
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Troubleshooting</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html#alpha-lattice-design-partially-incomplete-block-design",
    "href": "chapters/incomplete-block-design.html#alpha-lattice-design-partially-incomplete-block-design",
    "title": "9  Incomplete Block Design",
    "section": "9.3 Alpha lattice design (partially incomplete block design)",
    "text": "9.3 Alpha lattice design (partially incomplete block design)\nLattice designs are a well-known type of resolvable incomplete block design. Lattice designs are convenient for when there is a large number of treatments so that the block size is too big to control for spatial variation effectively. These lattice designs were first developed by Yates (1936) and later, alpha lattice designs were developed as an extension (Patterson and Williams 1976). A special feature of lattice designs is that the number of treatments, t, is related to the block size, k, in one of three forms: t = k2, t = k3, or t = k(k + 1).\nEven though the number of possible treatments is limited, a lattice design may be an ideal design for field experiments with a large number of treatments.\nStatistical model for lattice design:\n\\(Y_{ijk} = \\mu + \\alpha_i + \\gamma_j + \\tau_t  + \\beta_k + \\epsilon_ijk\\)\nwhere, \\(\\mu\\) is the experiment mean, 𝛽 is the row effect, 𝛾 is the column effect, and 𝜏 is the treatment effect.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html#example-analysis-1",
    "href": "chapters/incomplete-block-design.html#example-analysis-1",
    "title": "9  Incomplete Block Design",
    "section": "9.4 Example Analysis",
    "text": "9.4 Example Analysis\nLet’s start the analysis firstly by loading the required libraries:\n\n\n\n\nPatterson, H. D., and E. R. Williams. 1976. “A New Class of Resolvable Incomplete Block Designs.” Biometrika 63 (1): 83–92. https://doi.org/10.2307/2335087.\n\n\nYates, F. 1936. “A New Method of Arranging Variety Trials Involving a Large Number of Varieties.” J Agric Sci 26: 424–55.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html#balanced-incomplete-block-design",
    "href": "chapters/incomplete-block-design.html#balanced-incomplete-block-design",
    "title": "9  Incomplete Block Design",
    "section": "9.2 Balanced Incomplete Block Design",
    "text": "9.2 Balanced Incomplete Block Design\n\n9.2.1 Example Analysis\nWe will demonstrate an example data set designed in a balanced incomplete block design. First, load the libraries required for analysis and estimation.\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(broom.mixed); library(performance)\n\n\n\n\nlibrary(nlme); library(broom.mixed); library(emmeans)\nlibrary(dplyr); library(performance)\n\n\n\n\nThe data used for this example analysis was extracted from the agridat package. This example is comprised of soybean balanced incomplete block experiment.\n\ndat &lt;- agridat::weiss.incblock\n\n\nTable of variables in the data set\n\n\nblock\nblocking unit\n\n\ngen\ngenotype (variety) factor\n\n\nrow\nrow position for each plot\n\n\ncol\ncolumn position for each plot\n\n\nyield\ngrain yield in bu/ac\n\n\n\n\n\n\n\n\n\n\n\n\n\n9.2.1.1 Data integrity checks\nWe will start inspecting the data set firstly by looking at the class of variables:\n\nstr(dat)\n\n'data.frame':   186 obs. of  5 variables:\n $ block: Factor w/ 31 levels \"B01\",\"B02\",\"B03\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ gen  : Factor w/ 31 levels \"G01\",\"G02\",\"G03\",..: 24 15 20 18 20 5 22 1 9 14 ...\n $ yield: num  29.8 24.2 30.5 20 35.2 25 23.6 23.6 29.3 25.5 ...\n $ row  : int  42 36 30 24 18 12 6 42 36 30 ...\n $ col  : int  1 1 1 1 1 1 1 2 2 2 ...\n\n\nThe variables we need for the model are block, gen and yield. The block and gen are classified as factor variables and yield is numeric. Therefore, we don’t need to change class of any of the required variables.\nNext, let’s check the independent variables. We can look at this by running a cross tabulations among block and gen factors.\n\ntable(dat$block, dat$gen)\n\n     \n      G01 G02 G03 G04 G05 G06 G07 G08 G09 G10 G11 G12 G13 G14 G15 G16 G17 G18\n  B01   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n  B02   0   0   0   0   0   0   0   0   0   0   1   1   1   1   1   0   0   0\n  B03   0   0   1   0   0   0   1   0   0   0   1   0   0   0   0   0   0   0\n  B04   0   0   0   1   0   0   1   0   0   0   0   0   0   0   1   0   0   1\n  B05   0   0   0   0   1   0   0   0   0   1   0   0   0   0   1   0   0   0\n  B06   0   0   0   0   1   0   0   1   0   0   1   0   0   0   0   0   0   0\n  B07   0   1   0   0   0   0   1   0   0   0   0   1   0   0   0   0   1   0\n  B08   1   1   1   1   1   0   0   0   0   0   0   0   0   0   0   0   0   0\n  B09   0   0   1   0   0   0   0   0   1   0   0   0   0   0   1   1   0   0\n  B10   0   0   1   0   0   1   0   0   0   0   0   0   0   1   0   0   1   0\n  B11   0   0   0   1   0   0   0   0   0   1   1   0   0   0   0   0   1   0\n  B12   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   1   1   1\n  B13   0   0   1   0   0   0   0   1   0   0   0   0   1   0   0   0   0   1\n  B14   0   0   0   0   1   1   0   0   0   0   0   1   0   0   0   0   0   1\n  B15   0   0   0   0   1   0   0   0   1   0   0   0   1   0   0   0   1   0\n  B16   0   1   0   0   0   0   0   0   0   1   0   0   1   0   0   1   0   0\n  B17   1   0   0   0   0   0   0   1   0   0   0   0   0   0   1   0   1   0\n  B18   1   0   0   0   0   0   0   0   0   1   0   0   0   1   0   0   0   1\n  B19   1   0   0   0   0   1   0   0   0   0   1   0   0   0   0   1   0   0\n  B20   0   1   0   0   0   1   0   0   0   0   0   0   0   0   1   0   0   0\n  B21   0   0   0   1   0   0   0   1   0   0   0   1   0   0   0   1   0   0\n  B22   0   0   0   0   0   1   1   1   1   1   0   0   0   0   0   0   0   0\n  B23   0   0   1   0   0   0   0   0   0   1   0   1   0   0   0   0   0   0\n  B24   0   0   0   0   1   0   1   0   0   0   0   0   0   1   0   1   0   0\n  B25   0   0   0   1   0   0   0   0   1   0   0   0   0   1   0   0   0   0\n  B26   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0\n  B27   0   1   0   0   0   0   0   0   1   0   1   0   0   0   0   0   0   1\n  B28   0   1   0   0   0   0   0   1   0   0   0   0   0   1   0   0   0   0\n  B29   1   0   0   0   0   0   1   0   0   0   0   0   1   0   0   0   0   0\n  B30   1   0   0   0   0   0   0   0   1   0   0   1   0   0   0   0   0   0\n  B31   0   0   0   1   0   1   0   0   0   0   0   0   1   0   0   0   0   0\n     \n      G19 G20 G21 G22 G23 G24 G25 G26 G27 G28 G29 G30 G31\n  B01   0   0   1   1   1   1   1   1   0   0   0   0   0\n  B02   0   0   0   0   0   0   0   1   0   0   0   0   0\n  B03   0   1   0   0   0   1   0   0   0   1   0   0   0\n  B04   0   0   1   0   0   0   0   0   0   0   1   0   0\n  B05   0   1   0   0   0   0   1   0   1   0   0   0   0\n  B06   1   0   0   1   0   0   0   0   0   0   1   0   0\n  B07   0   0   0   1   0   0   0   0   1   0   0   0   0\n  B08   0   0   0   0   0   0   0   1   0   0   0   0   0\n  B09   0   0   0   1   0   0   0   0   0   0   0   0   1\n  B10   0   0   0   0   0   0   1   0   0   0   1   0   0\n  B11   0   0   0   0   1   0   0   0   0   0   0   0   1\n  B12   1   1   0   0   0   0   0   1   0   0   0   0   0\n  B13   0   0   0   0   1   0   0   0   1   0   0   0   0\n  B14   0   0   0   0   0   1   0   0   0   0   0   0   1\n  B15   0   0   1   0   0   0   0   0   0   1   0   0   0\n  B16   0   0   0   0   0   1   0   0   0   0   1   0   0\n  B17   0   0   0   0   0   1   0   0   0   0   0   1   0\n  B18   0   0   0   1   0   0   0   0   0   1   0   0   0\n  B19   0   0   1   0   0   0   0   0   1   0   0   0   0\n  B20   1   0   0   0   1   0   0   0   0   1   0   0   0\n  B21   0   0   0   0   0   0   1   0   0   1   0   0   0\n  B22   0   0   0   0   0   0   0   1   0   0   0   0   0\n  B23   1   0   1   0   0   0   0   0   0   0   0   1   0\n  B24   0   0   0   0   1   0   0   0   0   0   0   1   0\n  B25   1   0   0   0   0   1   0   0   1   0   0   0   0\n  B26   0   0   0   0   0   0   0   1   1   1   1   1   1\n  B27   0   0   0   0   0   0   1   0   0   0   0   1   0\n  B28   0   1   1   0   0   0   0   0   0   0   0   0   1\n  B29   1   0   0   0   0   0   1   0   0   0   0   0   1\n  B30   0   1   0   0   1   0   0   0   0   0   1   0   0\n  B31   0   1   0   1   0   0   0   0   0   0   0   1   0\n\n\n\nagg_tbl &lt;- dat %&gt;% group_by(gen) %&gt;% \n  summarise(total_count=n(),\n            .groups = 'drop')\nagg_tbl\n\n# A tibble: 31 × 2\n   gen   total_count\n   &lt;fct&gt;       &lt;int&gt;\n 1 G01             6\n 2 G02             6\n 3 G03             6\n 4 G04             6\n 5 G05             6\n 6 G06             6\n 7 G07             6\n 8 G08             6\n 9 G09             6\n10 G10             6\n# ℹ 21 more rows\n\n\n\nagg_df &lt;- aggregate(dat$gen, by=list(dat$block), FUN=length)\nagg_df\n\n   Group.1 x\n1      B01 6\n2      B02 6\n3      B03 6\n4      B04 6\n5      B05 6\n6      B06 6\n7      B07 6\n8      B08 6\n9      B09 6\n10     B10 6\n11     B11 6\n12     B12 6\n13     B13 6\n14     B14 6\n15     B15 6\n16     B16 6\n17     B17 6\n18     B18 6\n19     B19 6\n20     B20 6\n21     B21 6\n22     B22 6\n23     B23 6\n24     B24 6\n25     B25 6\n26     B26 6\n27     B27 6\n28     B28 6\n29     B29 6\n30     B30 6\n31     B31 6\n\n\nThere are 31 varieties (gen) and it is perfectly balanced, with exactly one observation per treatment per block.\nWe can calculate the sum of missing values in variables in this data set to evaluate the extent of missing values in different variables\n\napply(dat, 2, function(x) sum(is.na(x)))\n\nblock   gen yield   row   col \n    0     0     0     0     0 \n\n\nWe observed no missing data!\nLast, let’s plot a histogram of the dependent variable. This is a quick check before analysis to see if there is any strong deviation in values.\n\n\n\n\n\n\n\n\n\nFigure 9.1: Histogram of the dependent variable.\n\n\n\n\n\nhist(dat$yield, main = \"\", xlab = \"yield\")\n\nResponse variable values fall within expected range, with few extreme values on right tail. This data set is ready for analysis!\n\n\n9.2.1.2 Model Building\nWe will be evaluating the response of yield as affected by gen (fixed effect) and block (random effect).\n\n\nPlease note that incomplete block effect can be analyzed as a fixed (intra-block analysis) or a random (inter-block analysis) effect. When we consider block as a random effect, the mean values of a block also contain information about the treatment effects.\n\nlme4nlme\n\n\n\nmodel_icbd &lt;- lmer(log(yield) ~ gen + (1|block),\n                   data = dat, \n                   na.action = na.exclude)\ntidy(model_icbd)\n\n# A tibble: 33 × 8\n   effect group term        estimate std.error statistic    df   p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)  3.20       0.0335    95.5    153. 3.36e-138\n 2 fixed  &lt;NA&gt;  genG02       0.0908     0.0424     2.14   129. 3.40e-  2\n 3 fixed  &lt;NA&gt;  genG03       0.281      0.0424     6.63   129. 8.29e- 10\n 4 fixed  &lt;NA&gt;  genG04       0.0924     0.0424     2.18   129. 3.12e-  2\n 5 fixed  &lt;NA&gt;  genG05       0.0651     0.0424     1.54   129. 1.27e-  1\n 6 fixed  &lt;NA&gt;  genG06       0.260      0.0424     6.14   129. 9.57e-  9\n 7 fixed  &lt;NA&gt;  genG07      -0.0252     0.0424    -0.593  129. 5.54e-  1\n 8 fixed  &lt;NA&gt;  genG08       0.115      0.0424     2.71   129. 7.60e-  3\n 9 fixed  &lt;NA&gt;  genG09       0.171      0.0424     4.04   129. 9.06e-  5\n10 fixed  &lt;NA&gt;  genG10      -0.00444    0.0424    -0.105  129. 9.17e-  1\n# ℹ 23 more rows\n\n\n\n\n\nmodel_icbd1 &lt;- lme(yield ~ gen,\n                  random = ~ 1|block,\n                  data = dat, \n                  na.action = na.exclude)\ntidy(model_icbd1)\n\n# A tibble: 33 × 8\n   effect group term        estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;          &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  &lt;NA&gt;  (Intercept)  24.6        0.922   125   26.7    2.10e-53\n 2 fixed  &lt;NA&gt;  genG02        2.40       1.17    125    2.06   4.18e- 2\n 3 fixed  &lt;NA&gt;  genG03        8.04       1.17    125    6.88   2.54e-10\n 4 fixed  &lt;NA&gt;  genG04        2.37       1.17    125    2.03   4.43e- 2\n 5 fixed  &lt;NA&gt;  genG05        1.60       1.17    125    1.37   1.73e- 1\n 6 fixed  &lt;NA&gt;  genG06        7.39       1.17    125    6.32   4.11e- 9\n 7 fixed  &lt;NA&gt;  genG07       -0.419      1.17    125   -0.359  7.20e- 1\n 8 fixed  &lt;NA&gt;  genG08        3.04       1.17    125    2.60   1.04e- 2\n 9 fixed  &lt;NA&gt;  genG09        4.84       1.17    125    4.14   6.33e- 5\n10 fixed  &lt;NA&gt;  genG10       -0.0429     1.17    125   -0.0367 9.71e- 1\n# ℹ 23 more rows\n\n\n\n\n\n\n\n9.2.1.3 Check Model Assumptions\nLet’s verify the assumption of linear mixed models including normal distribution and constant variance of residuals.\n\nlme4nlme\n\n\n\ncheck_model(model_icbd, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\ncheck_model(model_icbd1, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n\n\n\nHere we observed a right skewness in residuals, this can be resolved by using data transformation e.g. log transformation of response variable. Please refer to chapter to read more about data transformation.\n\n\n9.2.1.4 Inference\nWe can extract information about ANOVA using anova() from lmer and lme models, respectively. ::: panel-tabset #### lme4\n\nanova(model_icbd, type = \"1\")\n\nType I Analysis of Variance Table with Satterthwaite's method\n    Sum Sq  Mean Sq NumDF  DenDF F value    Pr(&gt;F)    \ngen 2.5488 0.084959    30 129.02  17.995 &lt; 2.2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n9.2.1.5 nlme\n\nanova(model_icbd1, type = \"sequential\")\n\n            numDF denDF  F-value p-value\n(Intercept)     1   125 4042.016  &lt;.0001\ngen            30   125   17.675  &lt;.0001\n\n\n:::\nLet’s look at the estimated marginal means of yield for each variety (gen). ::: panel-tabset #### lme4\n\nemmeans(model_icbd, ~ gen)\n\n gen emmean     SE  df lower.CL upper.CL\n G01   3.20 0.0335 153     3.13     3.27\n G02   3.29 0.0335 153     3.22     3.36\n G03   3.48 0.0335 153     3.41     3.55\n G04   3.29 0.0335 153     3.23     3.36\n G05   3.26 0.0335 153     3.20     3.33\n G06   3.46 0.0335 153     3.39     3.53\n G07   3.17 0.0335 153     3.11     3.24\n G08   3.31 0.0335 153     3.25     3.38\n G09   3.37 0.0335 153     3.30     3.44\n G10   3.20 0.0335 153     3.13     3.26\n G11   3.29 0.0335 153     3.22     3.35\n G12   3.37 0.0335 153     3.30     3.44\n G13   3.39 0.0335 153     3.32     3.46\n G14   3.19 0.0335 153     3.12     3.25\n G15   3.25 0.0335 153     3.19     3.32\n G16   3.24 0.0335 153     3.17     3.31\n G17   2.95 0.0335 153     2.89     3.02\n G18   3.23 0.0335 153     3.17     3.30\n G19   3.37 0.0335 153     3.30     3.43\n G20   3.50 0.0335 153     3.44     3.57\n G21   3.44 0.0335 153     3.37     3.50\n G22   3.22 0.0335 153     3.15     3.29\n G23   3.39 0.0335 153     3.32     3.46\n G24   3.52 0.0335 153     3.45     3.58\n G25   3.29 0.0335 153     3.22     3.36\n G26   3.30 0.0335 153     3.23     3.36\n G27   3.17 0.0335 153     3.10     3.23\n G28   3.27 0.0335 153     3.20     3.33\n G29   3.20 0.0335 153     3.13     3.27\n G30   3.57 0.0335 153     3.51     3.64\n G31   3.29 0.0335 153     3.23     3.36\n\nDegrees-of-freedom method: kenward-roger \nResults are given on the log (not the response) scale. \nConfidence level used: 0.95 \n\n\n\n\n9.2.1.6 nlme\n\nemmeans(model_icbd1, ~ gen)\n\n gen emmean    SE df lower.CL upper.CL\n G01   24.6 0.922 30     22.7     26.5\n G02   27.0 0.922 30     25.1     28.9\n G03   32.6 0.922 30     30.7     34.5\n G04   26.9 0.922 30     25.1     28.8\n G05   26.2 0.922 30     24.3     28.1\n G06   32.0 0.922 30     30.1     33.8\n G07   24.2 0.922 30     22.3     26.0\n G08   27.6 0.922 30     25.7     29.5\n G09   29.4 0.922 30     27.5     31.3\n G10   24.5 0.922 30     22.6     26.4\n G11   27.1 0.922 30     25.2     28.9\n G12   29.3 0.922 30     27.4     31.1\n G13   29.9 0.922 30     28.1     31.8\n G14   24.2 0.922 30     22.4     26.1\n G15   26.1 0.922 30     24.2     28.0\n G16   25.9 0.922 30     24.0     27.8\n G17   19.7 0.922 30     17.8     21.6\n G18   25.7 0.922 30     23.8     27.6\n G19   29.0 0.922 30     27.2     30.9\n G20   33.2 0.922 30     31.3     35.0\n G21   31.1 0.922 30     29.2     33.0\n G22   25.2 0.922 30     23.3     27.1\n G23   29.8 0.922 30     27.9     31.7\n G24   33.6 0.922 30     31.8     35.5\n G25   27.0 0.922 30     25.1     28.9\n G26   27.1 0.922 30     25.3     29.0\n G27   23.8 0.922 30     21.9     25.7\n G28   26.5 0.922 30     24.6     28.4\n G29   24.8 0.922 30     22.9     26.6\n G30   36.2 0.922 30     34.3     38.1\n G31   27.1 0.922 30     25.2     29.0\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n:::\n##data2\nThe data used in this example is extracted from the agridat package. This data is a balanced lattice experiment in cotton containing 16 treatments in a 4x4 layout in each of 5 replicates. The response variable in this data is the percentage of young flower buds attacked by boll weevils.\n\ndat3 &lt;- agridat::cochran.lattice\n#head(dat3)\n\n\nTable of variables in the data set\n\n\nrep\nreplication unit\n\n\ntrt\ntreatment factor\n\n\nrow\nrow position for each plot\n\n\ncol\ncolumn position for each plot\n\n\ny\n% of young flower buds attacked\n\n\n\n\nstr(dat3)\n\n'data.frame':   80 obs. of  5 variables:\n $ y  : num  9 20.3 17.7 26.3 4.7 9 7.3 8.3 9 6.7 ...\n $ rep: Factor w/ 5 levels \"R1\",\"R2\",\"R3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ row: int  1 1 1 1 2 2 2 2 3 3 ...\n $ col: int  1 2 3 4 1 2 3 4 1 2 ...\n $ trt: Factor w/ 16 levels \"T01\",\"T02\",\"T03\",..: 10 12 9 11 2 4 1 3 14 16 ...\n\ntable(dat3$trt, dat3$rep)\n\n     \n      R1 R2 R3 R4 R5\n  T01  1  1  1  1  1\n  T02  1  1  1  1  1\n  T03  1  1  1  1  1\n  T04  1  1  1  1  1\n  T05  1  1  1  1  1\n  T06  1  1  1  1  1\n  T07  1  1  1  1  1\n  T08  1  1  1  1  1\n  T09  1  1  1  1  1\n  T10  1  1  1  1  1\n  T11  1  1  1  1  1\n  T12  1  1  1  1  1\n  T13  1  1  1  1  1\n  T14  1  1  1  1  1\n  T15  1  1  1  1  1\n  T16  1  1  1  1  1\n\n\n\nlibrary(desplot)\ndesplot(dat3, y~row*col|rep,\n        text=trt, # aspect unknown, should be 2 or .5\n         main=\"cochran.lattice\")\n\n\n\n\n\n\n\n\nHere, we can use the desplot() function from the ‘desplot’ package to visualize the plot plan from lattice design.\n\ndesplot::desplot(dat3, y~row*col|rep,\n                 text=trt, shorten='none', cex=.6,\n                 aspect=252/96, # true aspect\n                 main=\"Balanced incomplete block\")\n\n\n\n\n\n\n\n\n\n\n\n9.2.2 Data integrity checks\n\n\n\n\n\n\nHistogram of the dependent variable.\n\n\n\n\n\n9.2.3 Data integrity checks\n\nstr(dat3)\n\n'data.frame':   80 obs. of  5 variables:\n $ y  : num  9 20.3 17.7 26.3 4.7 9 7.3 8.3 9 6.7 ...\n $ rep: Factor w/ 5 levels \"R1\",\"R2\",\"R3\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ row: int  1 1 1 1 2 2 2 2 3 3 ...\n $ col: int  1 2 3 4 1 2 3 4 1 2 ...\n $ trt: Factor w/ 16 levels \"T01\",\"T02\",\"T03\",..: 10 12 9 11 2 4 1 3 14 16 ...\n\n\n\n#dat2$row &lt;- as.factor(dat2$row)\n#dat2$col &lt;- as.factor(dat2$col)\n\ndat3$row &lt;- as.factor(dat3$row)\ndat3$col &lt;- as.factor(dat3$col)\n\n\nhist(dat3$y, main = \"\", xlab = \"yield\")\n\n\n\n\n\n\n\n\n\n\nFigure 9.2: Histogram of the dependent variable.\n\n\n\n\n\nlme4nlme\n\n\n\nm1_a &lt;- lmer(y ~ trt + (1|rep) + (1|rep:row:rep) + (1|rep:col),\n           data = dat3,\n           na.action = na.exclude)\n\nboundary (singular) fit: see help('isSingular')\n\ntidy(m1_a) \n\n# A tibble: 20 × 8\n   effect   group       term         estimate std.error statistic    df  p.value\n   &lt;chr&gt;    &lt;chr&gt;       &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed    &lt;NA&gt;        (Intercept)      6.09      2.57     2.37   61.6  0.0208 \n 2 fixed    &lt;NA&gt;        trtT02           7.64      3.45     2.21   47.8  0.0316 \n 3 fixed    &lt;NA&gt;        trtT03           2.40      3.45     0.696  47.8  0.490  \n 4 fixed    &lt;NA&gt;        trtT04           5.25      3.45     1.52   47.8  0.135  \n 5 fixed    &lt;NA&gt;        trtT05           3.47      3.45     1.01   47.8  0.319  \n 6 fixed    &lt;NA&gt;        trtT06           1.21      3.45     0.350  47.8  0.728  \n 7 fixed    &lt;NA&gt;        trtT07           1.21      3.45     0.350  47.8  0.728  \n 8 fixed    &lt;NA&gt;        trtT08           3.32      3.45     0.963  47.8  0.340  \n 9 fixed    &lt;NA&gt;        trtT09           4.02      3.45     1.17   47.8  0.249  \n10 fixed    &lt;NA&gt;        trtT10           9.09      3.45     2.64   47.8  0.0113 \n11 fixed    &lt;NA&gt;        trtT11          11.8       3.45     3.42   47.8  0.00128\n12 fixed    &lt;NA&gt;        trtT12           6.76      3.45     1.96   47.8  0.0561 \n13 fixed    &lt;NA&gt;        trtT13           4.94      3.45     1.43   47.8  0.159  \n14 fixed    &lt;NA&gt;        trtT14           8.16      3.45     2.36   47.8  0.0222 \n15 fixed    &lt;NA&gt;        trtT15           3.20      3.45     0.929  47.8  0.358  \n16 fixed    &lt;NA&gt;        trtT16           4.54      3.45     1.31   47.8  0.195  \n17 ran_pars rep:col     sd__(Interc…     1.78     NA       NA      NA   NA      \n18 ran_pars rep:row:rep sd__(Interc…     3.30     NA       NA      NA   NA      \n19 ran_pars rep         sd__(Interc…     0        NA       NA      NA   NA      \n20 ran_pars Residual    sd__Observa…     4.88     NA       NA      NA   NA      \n\n\n\n\n\ndat3$dummy &lt;- factor(1)\n\nm1_b &lt;- lme(y ~ trt,\n          random = list(dummy = pdBlocked(list(\n                                  pdIdent(~rep - 1),\n                                  pdIdent(~rep:row - 1),\n                                  pdIdent(~rep:col)))),\n          data = dat3, \n          na.action = na.exclude)\n\nVarCorr(m1_b)\n\ndummy = pdIdent(rep - 1), pdIdent(rep:row - 1), pdIdent(rep:col) \n            Variance     StdDev      \nrepR1       6.046133e-08 0.0002458889\nrepR2       6.046133e-08 0.0002458889\nrepR3       6.046133e-08 0.0002458889\nrepR4       6.046133e-08 0.0002458889\nrepR5       6.046133e-08 0.0002458889\nrepR1:row1  1.091771e+01 3.3041961026\nrepR2:row1  1.091771e+01 3.3041961026\nrepR3:row1  1.091771e+01 3.3041961026\nrepR4:row1  1.091771e+01 3.3041961026\nrepR5:row1  1.091771e+01 3.3041961026\nrepR1:row2  1.091771e+01 3.3041961026\nrepR2:row2  1.091771e+01 3.3041961026\nrepR3:row2  1.091771e+01 3.3041961026\nrepR4:row2  1.091771e+01 3.3041961026\nrepR5:row2  1.091771e+01 3.3041961026\nrepR1:row3  1.091771e+01 3.3041961026\nrepR2:row3  1.091771e+01 3.3041961026\nrepR3:row3  1.091771e+01 3.3041961026\nrepR4:row3  1.091771e+01 3.3041961026\nrepR5:row3  1.091771e+01 3.3041961026\nrepR1:row4  1.091771e+01 3.3041961026\nrepR2:row4  1.091771e+01 3.3041961026\nrepR3:row4  1.091771e+01 3.3041961026\nrepR4:row4  1.091771e+01 3.3041961026\nrepR5:row4  1.091771e+01 3.3041961026\n(Intercept) 3.169947e+00 1.7804345669\nrepR1:col1  3.169947e+00 1.7804345669\nrepR2:col1  3.169947e+00 1.7804345669\nrepR3:col1  3.169947e+00 1.7804345669\nrepR4:col1  3.169947e+00 1.7804345669\nrepR5:col1  3.169947e+00 1.7804345669\nrepR1:col2  3.169947e+00 1.7804345669\nrepR2:col2  3.169947e+00 1.7804345669\nrepR3:col2  3.169947e+00 1.7804345669\nrepR4:col2  3.169947e+00 1.7804345669\nrepR5:col2  3.169947e+00 1.7804345669\nrepR1:col3  3.169947e+00 1.7804345669\nrepR2:col3  3.169947e+00 1.7804345669\nrepR3:col3  3.169947e+00 1.7804345669\nrepR4:col3  3.169947e+00 1.7804345669\nrepR5:col3  3.169947e+00 1.7804345669\nrepR1:col4  3.169947e+00 1.7804345669\nrepR2:col4  3.169947e+00 1.7804345669\nrepR3:col4  3.169947e+00 1.7804345669\nrepR4:col4  3.169947e+00 1.7804345669\nrepR5:col4  3.169947e+00 1.7804345669\nResidual    2.385960e+01 4.8846291738\n\n\n\n\n\n\n\n9.2.4 Check Model Assumptions\nRemember those iid assumptions? Let’s make sure we actually met them.\n\ncheck_model(m1_a, check = c(\"linearity\", \"normality\"))\n\n\n\n\n\n\n\n\n\n\n9.2.5 Inference\nEstimates for each treatment level can be obtained with the ‘emmeans’ package. And we can extract the ANOVA table from model using anova() function.\n\nanova(m1_a)\n\nType III Analysis of Variance Table with Satterthwaite's method\n    Sum Sq Mean Sq NumDF DenDF F value Pr(&gt;F)  \ntrt 612.21  40.814    15 47.81  1.7106 0.0808 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nEstimated marginal means\n\nemmeans(m1_a, ~ trt)\n\n trt emmean   SE df lower.CL upper.CL\n T01   6.09 2.68 50     0.70     11.5\n T02  13.73 2.68 50     8.34     19.1\n T03   8.49 2.68 50     3.10     13.9\n T04  11.34 2.68 50     5.95     16.7\n T05   9.56 2.68 50     4.17     15.0\n T06   7.30 2.68 50     1.91     12.7\n T07   7.30 2.68 50     1.91     12.7\n T08   9.41 2.68 50     4.02     14.8\n T09  10.11 2.68 50     4.72     15.5\n T10  15.18 2.68 50     9.79     20.6\n T11  17.90 2.68 50    12.51     23.3\n T12  12.85 2.68 50     7.46     18.2\n T13  11.03 2.68 50     5.64     16.4\n T14  14.25 2.68 50     8.86     19.6\n T15   9.29 2.68 50     3.91     14.7\n T16  10.63 2.68 50     5.24     16.0\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html#aplha-lattice-design-partially-balanced",
    "href": "chapters/incomplete-block-design.html#aplha-lattice-design-partially-balanced",
    "title": "9  Incomplete Block Design",
    "section": "9.3 Aplha Lattice Design (partially-balanced)",
    "text": "9.3 Aplha Lattice Design (partially-balanced)\n\n9.3.1 Example Analysis\nIn incomplete block alpha-design, the blocks are grouped into complete replicates. These designs are also termed as “resolvable incomplete block designs” or “partially balanced incomplete block designs”[^analysis-tips-1]. This design has been more commonly used instead of balanced IBD because of it’s practicability, flexibility, and versatility. [^analysis-tips-1]:Patterson, H. D., & Williams, E. (1976). A new class of resolvable incomplete block designs. Biometrika, 63(1), 83-92.\nThe data used in this example is published in John and Williams (1995)1. The data in this trial was laid out in an alpha lattice design. This trial data had 24 genotypes (gen), 6 incomplete blocks, and each replicated 3 times.\nLet’s start analyzing this example firstly by loading the required libraries for linear mixed models:\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans)\nlibrary(dplyr); library(broom.mixed); library(performance)\n\n\n\n\nlibrary(nlme); library(broom.mixed); library(emmeans)\nlibrary(dplyr); library(performance)\n\n\n\n\n\n9.3.1.1 Data integrity checks\n\n base::library(readr)\ndataURL &lt;- \"https://raw.githubusercontent.com/SchmidtPaul/DSFAIR/master/data/John%26Williams1995.csv\"\ndat &lt;- read_csv(dataURL)\n\nRows: 72 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): rep, inc.block, gen\ndbl (4): plot, yield, row, col\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndat\n\n# A tibble: 72 × 7\n    plot rep   inc.block gen   yield   row   col\n   &lt;dbl&gt; &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1     1 Rep1  B1        G11    4.12     4     1\n 2     2 Rep1  B1        G04    4.45     3     1\n 3     3 Rep1  B1        G05    5.88     2     1\n 4     4 Rep1  B1        G22    4.58     1     1\n 5     5 Rep1  B2        G21    4.65     4     2\n 6     6 Rep1  B2        G10    4.17     3     2\n 7     7 Rep1  B2        G20    4.01     2     2\n 8     8 Rep1  B2        G02    4.34     1     2\n 9     9 Rep1  B3        G23    4.23     4     3\n10    10 Rep1  B3        G14    4.76     3     3\n# ℹ 62 more rows\n\n\n\ndat &lt;- dat %&gt;% \n  mutate_at(vars(plot:gen), as.factor)\n\n\ndesplot::desplot(data = dat, flip = TRUE,\n        form = gen ~ col + row | rep,          # fill color per genotype, headers per replicate\n        text = gen, cex = 0.7, shorten = \"no\", # show genotype names per plot\n        out1 = rep,                            # lines between complete blocks/replicates\n        out2 = inc.block,                      # lines between incomplete blocks\n        main = \"Field layout\", show.key = F)   # formatting\n\n\n\n\n\n\n\n\nhttps://kwstat.github.io/agridat/reference/john.alpha.html\n\ndat4 &lt;- agridat::john.alpha\n\n\nTable of variables in the data set\n\n\nblock\nblocking unit\n\n\ngen\ngenotype (variety) factor\n\n\nrow\nrow position for each plot\n\n\ncol\ncolumn position for each plot\n\n\nyield\ngrain yield in bu/ac",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/latin-design.html",
    "href": "chapters/latin-design.html",
    "title": "10  Latin Square Design",
    "section": "",
    "text": "10.1 Background\nLatin square design In the Latin Square design, two blocking factors are arranged across the row and the column of the square. This allows blocking of two nuisance factors across rows and columns to reduce even more experimental error. The requirement of Latin square design is that all t treatments appears only once in each row and column and number of replications is equal to number of treatments.\nAdvantages of Latin square design are: 1. The design is particularly appropriate for comparing t treatment means in the presence of two sources of extraneous variation, each measured at t levels. 2. The analysis is quite simple.\nDisadvantage: 1. A Latin square can be constructed for any value of t, however, it is best suited for comparing t treatments when 5≤t≤10.\nStatistical model for a response in Latin square design is:\n\\(Y_{ijk} = \\mu + \\alpha_i + \\beta_j +  \\gamma_k + \\epsilon_{ijk}\\)\nwhere, \\(\\mu\\) is the experiment mean, \\(\\alpha_i's\\) are treatment effects, \\(\\beta\\) and \\(\\gamma\\) are the row- and column specific effects.\nAssumptions of this design includes normality and independent distribution of error (\\(\\epsilon_{ijk}\\)) terms. And there is no interaction between two blocking (rows & columns) factors and treatments.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Latin Square Design</span>"
    ]
  },
  {
    "objectID": "chapters/latin-design.html#example-analysis",
    "href": "chapters/latin-design.html#example-analysis",
    "title": "10  Latin Square Design",
    "section": "10.2 Example Analysis",
    "text": "10.2 Example Analysis\nLet’s start the analysis firstly by loading the required libraries:\n\nlme4nlme\n\n\n\nlibrary(lme4); library(lmerTest); library(emmeans); library(performance)\nlibrary(dplyr); library(broom.mixed); library(agridat); library(desplot)\n\n\n\n\nlibrary(nlme); library(broom.mixed); library(emmeans); library(performance)\nlibrary(dplyr); library(agridat); library(desplot)\n\n\n\n\nThe data used in this example is extracted from the agridat package. In this experiment, 5 treatments (A = Dusted before rains. B = Dusted after rains. C = Dusted once each week. D = Drifting, once each week. E = Not dusted) were tested to control stem rust in wheat.\n\ndat &lt;- agridat::goulden.latin\n\n\nTable of variables in the data set\n\n\ntrt\ntreatment factor, 5 levels\n\n\nrow\nrow position for each plot\n\n\ncol\ncolumn position for each plot\n\n\nyield\nwheat yield\n\n\n\n\n10.2.1 Data integrity checks\nFirstly, let’s verify the class of variables in the dataset using str() function in base R\n\nstr(dat)\n\n'data.frame':   25 obs. of  4 variables:\n $ trt  : Factor w/ 5 levels \"A\",\"B\",\"C\",\"D\",..: 2 3 4 5 1 4 1 3 2 5 ...\n $ yield: num  4.9 9.3 7.6 5.3 9.3 6.4 4 15.4 7.6 6.3 ...\n $ row  : int  5 4 3 2 1 5 4 3 2 1 ...\n $ col  : int  1 1 1 1 1 2 2 2 2 2 ...\n\n\nHere yield and trt are classified as numeric and factor variables, respectively, as needed. But we need to change ‘row’ and ‘col’ from integer t factor/character.\n\ndat1 &lt;- dat |&gt; \n        mutate(row = as.factor(row),\n               col = as.factor(col))\n\nNext, to verify if the data meets the assumption of the Latin square design let’s plot the field layout for this experiment.\n\ndesplot::desplot(data = dat, flip = TRUE,\n        form = yield ~ row + col, \n        out1 = row, out1.gpar=list(col=\"black\", lwd=3),\n        out2 = col, out2.gpar=list(col=\"black\", lwd=3),\n        text = trt, cex = 1, shorten = \"no\",\n        main = \"Field layout\", \n        show.key = FALSE)\n\n\n\n\n\n\n\n\nThis looks great! Here we can see that there are equal number of treatments, rows, and columns. Treatments were randomized in such a way that one treatment doesn’t appear more than once in each row and column.\nNext step is to check if there are any missing values in response variable.\n\napply(dat, 2, function(x) sum(is.na(x)))\n\n  trt yield   row   col \n    0     0     0     0 \n\n\nAnd we do not have any missing values in the data.\nBefore fitting the model, let’s create a histogram of response variable to see if there are extreme values.\n\n\n\n\n\n\nHistogram of the dependent variable.\n\n\n\n\nhist(dat$yield, main = \"\", xlab = \"yield\")\n\n\n\n10.2.2 Model fitting\nHere we will fit a model to evaluate the impact of fungicide treatments on wheat yield with trt as a fixed effect and row & col as a random effect.\n\nlme4nlme\n\n\n\nm1_a &lt;- lmer(yield ~ trt + (1|row) + (1|col),\n           data = dat1,\n           na.action = na.exclude)\ntidy(m1_a) \n\n# A tibble: 8 × 8\n  effect   group    term            estimate std.error statistic    df   p.value\n  &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;              &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;\n1 fixed    &lt;NA&gt;     (Intercept)        6.84      0.942     7.26   11.9   1.03e-5\n2 fixed    &lt;NA&gt;     trtB              -0.380     0.967    -0.393  12.0   7.01e-1\n3 fixed    &lt;NA&gt;     trtC               6.28      0.967     6.50   12.0   2.96e-5\n4 fixed    &lt;NA&gt;     trtD               1.12      0.967     1.16   12.0   2.69e-1\n5 fixed    &lt;NA&gt;     trtE              -1.92      0.967    -1.99   12.0   7.04e-2\n6 ran_pars row      sd__(Intercept)    1.37     NA        NA      NA    NA      \n7 ran_pars col      sd__(Intercept)    0.483    NA        NA      NA    NA      \n8 ran_pars Residual sd__Observation    1.53     NA        NA      NA    NA      \n\n\n\n\n\ndat$dummy &lt;- factor(1)\nm1_b &lt;- lme(yield ~ trt,\n          random =list(~1|row, ~1|col),\n                  #list(dummy = pdBlocked(list(\n                   #               pdIdent(~row - 1),\n                    #              pdIdent(~col - 1)))),\n          data = dat, \n          na.action = na.exclude)\n\nsummary(m1_b)\n\nLinear mixed-effects model fit by REML\n  Data: dat \n       AIC      BIC    logLik\n  106.0974 114.0633 -45.04872\n\nRandom effects:\n Formula: ~1 | row\n        (Intercept)\nStdDev:    1.344469\n\n Formula: ~1 | col %in% row\n        (Intercept) Residual\nStdDev:    1.494696 0.628399\n\nFixed effects:  yield ~ trt \n            Value Std.Error DF   t-value p-value\n(Intercept)  6.84 0.9419764 16  7.261328  0.0000\ntrtB        -0.38 1.0254756 16 -0.370560  0.7158\ntrtC         6.28 1.0254756 16  6.123987  0.0000\ntrtD         1.12 1.0254756 16  1.092176  0.2909\ntrtE        -1.92 1.0254756 16 -1.872302  0.0796\n Correlation: \n     (Intr) trtB   trtC   trtD  \ntrtB -0.544                     \ntrtC -0.544  0.500              \ntrtD -0.544  0.500  0.500       \ntrtE -0.544  0.500  0.500  0.500\n\nStandardized Within-Group Residuals:\n       Min         Q1        Med         Q3        Max \n-0.5686726 -0.2469684 -0.1061146  0.2349101  0.7617205 \n\nNumber of Observations: 25\nNumber of Groups: \n         row col %in% row \n           5           25 \n\n#VarCorr(m1_b)\n\n\n\n\n\n\n10.2.3 Check Model Assumptions\n\nlme4nlme\n\n\n\ncheck_model(m1_a, check = c(\"linearity\", \"normality\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ncheck_model(m1_b, check = c(\"linearity\", \"normality\"))\n\n\n\n\n\n\n\n\n\n\n\n\n\n10.2.4 Inference\nWe can look look at the analysis of variance for treatment effect on yield using anova() function.\n\nlme4nlme\n\n\n\nanova(m1_a, type = \"1\")\n\nType I Analysis of Variance Table with Satterthwaite's method\n    Sum Sq Mean Sq NumDF DenDF F value    Pr(&gt;F)    \ntrt 196.61  49.152     4    12  21.032 2.366e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\nanova(m1_b, type = \"sequential\")\n\n            numDF denDF   F-value p-value\n(Intercept)     1    16 132.38123  &lt;.0001\ntrt             4    16  18.69608  &lt;.0001\n\n\n\n\n\nHere we observed a significant impact on fungicide treatment on crop yield. Let’s have a look at the estimated marginal means of wheat yield with each treatment using emmeans() function.\n\nlme4nlme\n\n\n\nemmeans(m1_a, ~ trt)\n\n trt emmean    SE   df lower.CL upper.CL\n A     6.84 0.942 11.9     4.79     8.89\n B     6.46 0.942 11.9     4.41     8.51\n C    13.12 0.942 11.9    11.07    15.17\n D     7.96 0.942 11.9     5.91    10.01\n E     4.92 0.942 11.9     2.87     6.97\n\nDegrees-of-freedom method: kenward-roger \nConfidence level used: 0.95 \n\n\n\n\n\nemmeans(m1_b, ~ trt)\n\n trt emmean    SE df lower.CL upper.CL\n A     6.84 0.942  4     4.22     9.46\n B     6.46 0.942  4     3.84     9.08\n C    13.12 0.942  4    10.50    15.74\n D     7.96 0.942  4     5.34    10.58\n E     4.92 0.942  4     2.30     7.54\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Latin Square Design</span>"
    ]
  },
  {
    "objectID": "chapters/latin-design.html#background",
    "href": "chapters/latin-design.html#background",
    "title": "10  Latin Square Design",
    "section": "",
    "text": "Any additional extraneous sources of variability tend to inflate the error term, making it more difficult to detect differences among the treatment means.\nThe effect of each treatment on the response must be approximately the same across rows and columns.",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Latin Square Design</span>"
    ]
  },
  {
    "objectID": "chapters/incomplete-block-design.html#footnotes",
    "href": "chapters/incomplete-block-design.html#footnotes",
    "title": "9  Incomplete Block Design",
    "section": "",
    "text": "Hering, F. (1996). John, JA, Williams, ER: Cyclic and Computer Generated Designs. Chapmann and Hall, London, New York 1995, 255 S., $ L 32,‐.↩︎",
    "crumbs": [
      "Experiment designs",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Incomplete Block Design</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#model-fitting",
    "href": "chapters/means-and-contrasts.html#model-fitting",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.3 Model fitting",
    "text": "12.3 Model fitting\n\nmodel1 &lt;- lme(Y ~  V + N + V:N ,\n                  random = ~1|B/V,\n                  data = data1, \n                  na.action = na.exclude)\ntidy(model1)",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#import-data",
    "href": "chapters/means-and-contrasts.html#import-data",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.2 Import data",
    "text": "12.2 Import data\n\ndata1 &lt;- MASS::oats\n\n\n12.2.1 Model fitting\n\nmodel1 &lt;- lme(Y ~  V + N + V:N ,\n                  random = ~1|B/V,\n                  data = data1, \n                  na.action = na.exclude)\ntidy(model1)\n\n\n\n12.2.2 Check Model Assumptions\n\ncheck_model(model1, check = c('normality', 'linearity'))\n\n:::\n\n\n12.2.3 Model Inference\n\n\n12.2.4 Estimated Marginal Means\nEstimated marginal means are defined as marginal means of a variable across all levels of other variables in a model, essentially giving a “population-level” average. model predictions over the grid comprising all factor combinations – called the reference grid\nIn this chapter, we will demonstrate the extended use of the emmeans package to calculate estimated marginal means and contrasts.\n\nOne-way estimated marginal means and plot\n\nlibrary(multcomp)\nlibrary(emmeans)\n\nmarginal = emmeans(model,\n                   ~ Location)\n\nCLD = cld(marginal,\n          alpha=0.05,\n          Letters=letters,\n          adjust=\"tukey\")\n\nCLD\n\n\nLocation        emmean        SE df  lower.CL upper.CL .group\n Olympia      8.333333 0.6718548 16  6.449596 10.21707  a   \n Northampton 11.833333 0.6718548 16  9.949596 13.71707   b  \n Ventura     13.333333 0.6718548 16 11.449596 15.21707   b  \n Burlington  21.833333 0.6718548 16 19.949596 23.71707    c \n\n\n\n### Order the levels for printing\n\nCLD$Location = factor(CLD$Location,\n                       levels=c(\"Olympia\", \"Ventura\", \"Northampton\", \"Burlington\"))\n\n###  Remove spaces in .group \n\nCLD$.group=gsub(\" \", \"\", CLD$.group)\n\n\n### Plot\n\nlibrary(ggplot2)\n\nggplot(CLD,\n       aes(x     = Location,\n           y     = emmean,\n           label = .group)) +\n\n    geom_point(shape  = 15,\n               size   = 4) +\n\n    geom_errorbar(aes(ymin  =  lower.CL,\n                      ymax  =  upper.CL),\n                      width =  0.2,\n                      size  =  0.7) +\n\n    theme_bw() +\n    theme(axis.title   = element_text(face = \"bold\"),\n          axis.text    = element_text(face = \"bold\"),\n          plot.caption = element_text(hjust = 0)) +\n\n    ylab(\"Estimated marginal mean\\nmidichlorian count\") +\n    ggtitle (\"Midichlorian counts\",\n\n             subtitle = \"In four U.S. cities\") +\n\n            labs(caption  = paste0(\"\\nMidichlorian counts for four locations. \",\n                                   \"Boxes indicate the EM mean. \\n\",\n                                   \"Error bars indicate the 95% \",\n                                   \"confidence interval of the EM mean. \\n\",\n                                   \"Means sharing a letter are not \",\n                                   \"significantly different (Tukey-adjusted \\n\",\n                                   \"comparisons).\"),\n                            hjust=0.5) +\n\n  geom_text(nudge_x = c(0, 0, 0, 0),\n            nudge_y = c(4, 4, 4, 4),\n            color   = \"black\")\n\n\n\n12.2.5 Interactions using Emmeans\n\nInteraction plot of estimated marginal means\n\nlibrary(multcomp)\nlibrary(emmeans)\n\nmarginal = emmeans(model,\n                   ~ Tribe:Location)\n\nCLD = cld(marginal,\n          alpha=0.05,\n          Letters=letters,\n          adjust=\"tukey\")\n\nCLD\n\n\nTribe  Location       emmean        SE df  lower.CL upper.CL .group\n Sith  Olympia      4.333333 0.9501462 16  1.354477  7.31219  a   \n Jedi  Northampton  8.666667 0.9501462 16  5.687810 11.64552  ab  \n Sith  Ventura     10.666667 0.9501462 16  7.687810 13.64552   bc \n Jedi  Olympia     12.333333 0.9501462 16  9.354477 15.31219   bcd\n Sith  Northampton 15.000000 0.9501462 16 12.021143 17.97886    cd\n Jedi  Ventura     16.000000 0.9501462 16 13.021143 18.97886     d\n Jedi  Burlington  20.666667 0.9501462 16 17.687810 23.64552      e\n Sith  Burlington  23.000000 0.9501462 16 20.021143 25.97886      e\n\n\n\n### Order the levels for printing\n\nCLD$Location = factor(CLD$Location,\n                       levels=c(\"Olympia\", \"Ventura\", \"Northampton\", \"Burlington\"))\n\nCLD$Tribe = factor(CLD$Tribe,\n                       levels=c(\"Jedi\", \"Sith\"))\n\n###  Remove spaces in .group \n\nCLD$.group=gsub(\" \", \"\", CLD$.group)\n\n\nCLD\n\n\n### Plot\n\nlibrary(ggplot2)\n\npd = position_dodge(0.4)    ### How much to jitter the points on the plot\n\nggplot(CLD,\n       aes(x     = Location,\n           y     = emmean,\n           color = Tribe,\n           label = .group)) +\n\n    geom_point(shape  = 15,\n               size   = 4,\n             position = pd) +\n\n    geom_errorbar(aes(ymin  =  lower.CL,\n                      ymax  =  upper.CL),\n                      width =  0.2,\n                      size  =  0.7,\n                      position = pd) +\n\n    theme_bw() +\n    theme(axis.title   = element_text(face = \"bold\"),\n          axis.text    = element_text(face = \"bold\"),\n          plot.caption = element_text(hjust = 0)) +\n\n    ylab(\"Estimated marginal mean\\nmidichlorian count\") +\n     ggtitle (\"Midichlorian counts for Jedi and Sith\",\n            subtitle = \"In four U.S. cities\") +\n \n            labs(caption  = paste0(\"\\nMidichlorian counts for two tribes across \",\n                                   \"four locations. Boxes indicate \\n\",\n                                   \"the EM mean. \",\n                                   \"Error bars indicate the 95% confidence \",\n                                   \"interval \",\n                                    \"of the EM \\n\",\n                                   \"mean. Means sharing a letter are \",\n                                   \"not significantly different \\n\",\n                                   \"(Tukey-adjusted comparisons).\"),\n                            hjust=0.5) +\n \n  geom_text(nudge_x = c(0.1, -0.1, 0.1, -0.1, 0.1, -0.1, -0.1, 0.1),\n            nudge_y = c(4.5,  4.5, 4.5,  4.5, 4.5 , 4.5,  4.5, 4.5),\n            color   = \"black\") +\n \n  scale_color_manual(values = c(\"blue\", \"red\"))\n\n\n\n12.2.6 Contrasts using Emmeans\n\n(warp.emm &lt;- emmeans(warp.lm, ~ tension | wool))\n\ncontrast(warp.emm, \"poly\")\n\nCompact letter display\n\n#library(multcomp); library(multcompView)\n\n\n#cld(m1, Letters= letters)\n\nThe letters indicating significant differences can be generated using cld() function from the ‘multcomp’ package”. In the output below, groups sharing a letter in the .group are not statistically different from each other.\n\n\n\n\n\n\nCautionary Note about CLD\n\n\n\nIt’s important to note that we cannot conclude that treatment levels with the same letter are the same. We can only conclude that they are not different.\nThere is a separate branch of statistics, “equivalence testing” that is for ascertaining if things are sufficiently similar to conclude they are equivalent.\nSee ?sec-cld_warning for additional warnings about problems with using compact letter display.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#check-model-assumptions",
    "href": "chapters/means-and-contrasts.html#check-model-assumptions",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.4 Check Model Assumptions",
    "text": "12.4 Check Model Assumptions\n\ncheck_model(model1, check = c('normality', 'linearity'))\n\n::: ## Estimated Marginal Means\nEstimated marginal means are defined as marginal means of a variable across all levels of other variables in a model, essentially giving a “population-level” average. model predictions over the grid comprising all factor combinations – called the reference grid\nIn this chapter, we will demonstrate the extended use of the emmeans package to calculate estimated marginal means and contrasts.\n\nOne-way estimated marginal means and plot\n\nlibrary(multcomp)\nlibrary(emmeans)\n\nmarginal = emmeans(model,\n                   ~ Location)\n\nCLD = cld(marginal,\n          alpha=0.05,\n          Letters=letters,\n          adjust=\"tukey\")\n\nCLD\n\n\nLocation        emmean        SE df  lower.CL upper.CL .group\n Olympia      8.333333 0.6718548 16  6.449596 10.21707  a   \n Northampton 11.833333 0.6718548 16  9.949596 13.71707   b  \n Ventura     13.333333 0.6718548 16 11.449596 15.21707   b  \n Burlington  21.833333 0.6718548 16 19.949596 23.71707    c \n\n\n\n### Order the levels for printing\n\nCLD$Location = factor(CLD$Location,\n                       levels=c(\"Olympia\", \"Ventura\", \"Northampton\", \"Burlington\"))\n\n###  Remove spaces in .group \n\nCLD$.group=gsub(\" \", \"\", CLD$.group)\n\n\n### Plot\n\nlibrary(ggplot2)\n\nggplot(CLD,\n       aes(x     = Location,\n           y     = emmean,\n           label = .group)) +\n\n    geom_point(shape  = 15,\n               size   = 4) +\n\n    geom_errorbar(aes(ymin  =  lower.CL,\n                      ymax  =  upper.CL),\n                      width =  0.2,\n                      size  =  0.7) +\n\n    theme_bw() +\n    theme(axis.title   = element_text(face = \"bold\"),\n          axis.text    = element_text(face = \"bold\"),\n          plot.caption = element_text(hjust = 0)) +\n\n    ylab(\"Estimated marginal mean\\nmidichlorian count\") +\n    ggtitle (\"Midichlorian counts\",\n\n             subtitle = \"In four U.S. cities\") +\n\n            labs(caption  = paste0(\"\\nMidichlorian counts for four locations. \",\n                                   \"Boxes indicate the EM mean. \\n\",\n                                   \"Error bars indicate the 95% \",\n                                   \"confidence interval of the EM mean. \\n\",\n                                   \"Means sharing a letter are not \",\n                                   \"significantly different (Tukey-adjusted \\n\",\n                                   \"comparisons).\"),\n                            hjust=0.5) +\n\n  geom_text(nudge_x = c(0, 0, 0, 0),\n            nudge_y = c(4, 4, 4, 4),\n            color   = \"black\")\n\n\n12.4.1 Interactions using Emmeans\n\nInteraction plot of estimated marginal means\n\nlibrary(multcomp)\nlibrary(emmeans)\n\nmarginal = emmeans(model,\n                   ~ Tribe:Location)\n\nCLD = cld(marginal,\n          alpha=0.05,\n          Letters=letters,\n          adjust=\"tukey\")\n\nCLD\n\n\nTribe  Location       emmean        SE df  lower.CL upper.CL .group\n Sith  Olympia      4.333333 0.9501462 16  1.354477  7.31219  a   \n Jedi  Northampton  8.666667 0.9501462 16  5.687810 11.64552  ab  \n Sith  Ventura     10.666667 0.9501462 16  7.687810 13.64552   bc \n Jedi  Olympia     12.333333 0.9501462 16  9.354477 15.31219   bcd\n Sith  Northampton 15.000000 0.9501462 16 12.021143 17.97886    cd\n Jedi  Ventura     16.000000 0.9501462 16 13.021143 18.97886     d\n Jedi  Burlington  20.666667 0.9501462 16 17.687810 23.64552      e\n Sith  Burlington  23.000000 0.9501462 16 20.021143 25.97886      e\n\n\n\n### Order the levels for printing\n\nCLD$Location = factor(CLD$Location,\n                       levels=c(\"Olympia\", \"Ventura\", \"Northampton\", \"Burlington\"))\n\nCLD$Tribe = factor(CLD$Tribe,\n                       levels=c(\"Jedi\", \"Sith\"))\n\n###  Remove spaces in .group \n\nCLD$.group=gsub(\" \", \"\", CLD$.group)\n\n\nCLD\n\n\n### Plot\n\nlibrary(ggplot2)\n\npd = position_dodge(0.4)    ### How much to jitter the points on the plot\n\nggplot(CLD,\n       aes(x     = Location,\n           y     = emmean,\n           color = Tribe,\n           label = .group)) +\n\n    geom_point(shape  = 15,\n               size   = 4,\n             position = pd) +\n\n    geom_errorbar(aes(ymin  =  lower.CL,\n                      ymax  =  upper.CL),\n                      width =  0.2,\n                      size  =  0.7,\n                      position = pd) +\n\n    theme_bw() +\n    theme(axis.title   = element_text(face = \"bold\"),\n          axis.text    = element_text(face = \"bold\"),\n          plot.caption = element_text(hjust = 0)) +\n\n    ylab(\"Estimated marginal mean\\nmidichlorian count\") +\n     ggtitle (\"Midichlorian counts for Jedi and Sith\",\n            subtitle = \"In four U.S. cities\") +\n \n            labs(caption  = paste0(\"\\nMidichlorian counts for two tribes across \",\n                                   \"four locations. Boxes indicate \\n\",\n                                   \"the EM mean. \",\n                                   \"Error bars indicate the 95% confidence \",\n                                   \"interval \",\n                                    \"of the EM \\n\",\n                                   \"mean. Means sharing a letter are \",\n                                   \"not significantly different \\n\",\n                                   \"(Tukey-adjusted comparisons).\"),\n                            hjust=0.5) +\n \n  geom_text(nudge_x = c(0.1, -0.1, 0.1, -0.1, 0.1, -0.1, -0.1, 0.1),\n            nudge_y = c(4.5,  4.5, 4.5,  4.5, 4.5 , 4.5,  4.5, 4.5),\n            color   = \"black\") +\n \n  scale_color_manual(values = c(\"blue\", \"red\"))\n\n\n\n12.4.2 Contrasts using Emmeans\n\n(warp.emm &lt;- emmeans(warp.lm, ~ tension | wool))\n\ncontrast(warp.emm, \"poly\")\n\nCompact letter display\n\n#library(multcomp); library(multcompView)\n\n\n#cld(m1, Letters= letters)\n\nThe letters indicating significant differences can be generated using cld() function from the ‘multcomp’ package”. In the output below, groups sharing a letter in the .group are not statistically different from each other.\n\n\n\n\n\n\nCautionary Note about CLD\n\n\n\nIt’s important to note that we cannot conclude that treatment levels with the same letter are the same. We can only conclude that they are not different.\nThere is a separate branch of statistics, “equivalence testing” that is for ascertaining if things are sufficiently similar to conclude they are equivalent.\nSee ?sec-cld_warning for additional warnings about problems with using compact letter display.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#analysis-examples",
    "href": "chapters/means-and-contrasts.html#analysis-examples",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.2 Analysis Examples",
    "text": "12.2 Analysis Examples\n\nlibrary(nlme); library(performance); library(emmeans)\nlibrary(dplyr); library(broom.mixed); library(multcompView)\nlibrary(multcomp); library(ggplot2)\n\n\n12.2.1 Import data\nLet’s import oats data from the MASS package.\n\n\nTo read more about data and model fitting explanation please refer to Chapter 6.\n\ndata1 &lt;- MASS::oats\n\n\n\n12.2.2 Model fitting\n\nmodel1 &lt;- lme(Y ~  V + N + V:N ,\n                  random = ~1|B/V,\n                  data = data1, \n                  na.action = na.exclude)\ntidy(model1)\n\nWarning in tidy.lme(model1): ran_pars not yet implemented for multiple levels\nof nesting\n\n\n# A tibble: 12 × 7\n   effect term                estimate std.error    df statistic  p.value\n   &lt;chr&gt;  &lt;chr&gt;                  &lt;dbl&gt;     &lt;dbl&gt; &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n 1 fixed  (Intercept)           80          9.11    45    8.78   2.56e-11\n 2 fixed  VMarvellous            6.67       9.72    10    0.686  5.08e- 1\n 3 fixed  VVictory              -8.50       9.72    10   -0.875  4.02e- 1\n 4 fixed  N0.2cwt               18.5        7.68    45    2.41   2.02e- 2\n 5 fixed  N0.4cwt               34.7        7.68    45    4.51   4.58e- 5\n 6 fixed  N0.6cwt               44.8        7.68    45    5.84   5.48e- 7\n 7 fixed  VMarvellous:N0.2cwt    3.33      10.9     45    0.307  7.60e- 1\n 8 fixed  VVictory:N0.2cwt      -0.333     10.9     45   -0.0307 9.76e- 1\n 9 fixed  VMarvellous:N0.4cwt   -4.17      10.9     45   -0.383  7.03e- 1\n10 fixed  VVictory:N0.4cwt       4.67      10.9     45    0.430  6.70e- 1\n11 fixed  VMarvellous:N0.6cwt   -4.67      10.9     45   -0.430  6.70e- 1\n12 fixed  VVictory:N0.6cwt       2.17      10.9     45    0.199  8.43e- 1\n\n\n\n\n12.2.3 Check Model Assumptions\n\ncheck_model(model1, check = c('normality', 'linearity'))\n\n\n\n\n\n\n\n\n\n\n12.2.4 Model Inference\n\nanova(model1, type = \"marginal\")\n\n            numDF denDF  F-value p-value\n(Intercept)     1    45 77.16729  &lt;.0001\nV               2    10  1.22454  0.3344\nN               3    45 13.02273  &lt;.0001\nV:N             6    45  0.30282  0.9322\n\n\n\n\n12.2.5 Estimated Marginal Means\nNow that we have fitted a linear mixed model (model1) and it meets the model assumption. Let’s use the emmeans() function to obtain estimated marginal means for main (variety and nitrogen) and interaction (variety x nitrogen) effects.\n\n12.2.5.1 Main effects\n\nm1 &lt;- emmeans(model1, ~V, level = 0.95)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nm1\n\n V           emmean  SE df lower.CL upper.CL\n Golden.rain  104.5 7.8  5     84.5      125\n Marvellous   109.8 7.8  5     89.7      130\n Victory       97.6 7.8  5     77.6      118\n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\nm2 &lt;- emmeans(model1, ~N)\n\nNOTE: Results may be misleading due to involvement in interactions\n\nm2\n\n N      emmean   SE df lower.CL upper.CL\n 0.0cwt   79.4 7.17  5     60.9     97.8\n 0.2cwt   98.9 7.17  5     80.4    117.3\n 0.4cwt  114.2 7.17  5     95.8    132.7\n 0.6cwt  123.4 7.17  5    104.9    141.8\n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\nMake sure to read and interpret EMMs carefully. Here, when we calculated EMMs for main effects of V and N, these were averaged over the levels of other factor in experiment. For example, estimated means for each variety were averaged over it’s N treatments, respectively.\n\n\n12.2.5.2 Interaction effects\nNow let’s evaluate the interaction effect EMMs for V and N. These can be calculated either using V*N or V|N.\n\nm3 &lt;- emmeans(model1, ~V*N)\nm3\n\n V           N      emmean   SE df lower.CL upper.CL\n Golden.rain 0.0cwt   80.0 9.11  5     56.6    103.4\n Marvellous  0.0cwt   86.7 9.11  5     63.3    110.1\n Victory     0.0cwt   71.5 9.11  5     48.1     94.9\n Golden.rain 0.2cwt   98.5 9.11  5     75.1    121.9\n Marvellous  0.2cwt  108.5 9.11  5     85.1    131.9\n Victory     0.2cwt   89.7 9.11  5     66.3    113.1\n Golden.rain 0.4cwt  114.7 9.11  5     91.3    138.1\n Marvellous  0.4cwt  117.2 9.11  5     93.8    140.6\n Victory     0.4cwt  110.8 9.11  5     87.4    134.2\n Golden.rain 0.6cwt  124.8 9.11  5    101.4    148.2\n Marvellous  0.6cwt  126.8 9.11  5    103.4    150.2\n Victory     0.6cwt  118.5 9.11  5     95.1    141.9\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\nm4 &lt;- emmeans(model1, ~V|N)\nm4\n\nN = 0.0cwt:\n V           emmean   SE df lower.CL upper.CL\n Golden.rain   80.0 9.11  5     56.6    103.4\n Marvellous    86.7 9.11  5     63.3    110.1\n Victory       71.5 9.11  5     48.1     94.9\n\nN = 0.2cwt:\n V           emmean   SE df lower.CL upper.CL\n Golden.rain   98.5 9.11  5     75.1    121.9\n Marvellous   108.5 9.11  5     85.1    131.9\n Victory       89.7 9.11  5     66.3    113.1\n\nN = 0.4cwt:\n V           emmean   SE df lower.CL upper.CL\n Golden.rain  114.7 9.11  5     91.3    138.1\n Marvellous   117.2 9.11  5     93.8    140.6\n Victory      110.8 9.11  5     87.4    134.2\n\nN = 0.6cwt:\n V           emmean   SE df lower.CL upper.CL\n Golden.rain  124.8 9.11  5    101.4    148.2\n Marvellous   126.8 9.11  5    103.4    150.2\n Victory      118.5 9.11  5     95.1    141.9\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#background",
    "href": "chapters/means-and-contrasts.html#background",
    "title": "12  Marginal Means & Contrasts",
    "section": "",
    "text": "Marginal means using lmer and nlme\n\n\n\nFor demonstration of the emmeans package, we are fitting model with nlme package. Please note that code below calculating marginal means works for both lmer and nlme models.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#using-adjusted-p-values",
    "href": "chapters/means-and-contrasts.html#using-adjusted-p-values",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.8 using adjusted P-values",
    "text": "12.8 using adjusted P-values\nP values, “significance”, and recommendations : https://cran.r-project.org/web/packages/emmeans/vignettes/basics.html#emms\nReference grids and emmeans() results may be plotted via plot() (for parallel confidence intervals) or emmip() (for an interaction-style plot). Be cautious with the terms “significant” and “nonsignificant”, and don’t ever interpret a “nonsignificant” result as saying that there is no effect. Follow good statistical practices such as getting the model right first, and using adjusted P values for appropriately chosen families of comparisons or contrasts.\n\n\n\n\n\n\nP values, “significance”, and recommendations\n\n\n\nP values are often misinterpreted, and the term “statistical significance” can be misleading. Please refer to this link to read more about basic principles outlined by the American Statistical Association when considering p-values.\nIf you want to read more about emmeans, please refer to vignettes on this CRAN page.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#compact-letter-displays",
    "href": "chapters/means-and-contrasts.html#compact-letter-displays",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.4 Compact letter displays",
    "text": "12.4 Compact letter displays\nCompact letter displays (CLDs) are a popular way to display multiple comparisons when there are more than few group means to compare. However, they are problematic as they are more prone to misinterpretation. The R package multcompView (Graves et al., 2019) provides an implementation of CLDs creating a display where any two means associated with same symbol are not statistically different.\nThe cld() function from the multcomp package is used to implement CLDs in the form of symbols or letters. The emmeans package provides a emmGrid objects for cld() method.\nLet’s start evaluating CLDs for main effects. We will use emmean objects m1 and m2 for this. In the output below, groups sharing a letter in the .group are not statistically different from each other.\n\ncld(m1, alpha=0.05, Letters=letters)\n\n V           emmean  SE df lower.CL upper.CL .group\n Victory       97.6 7.8  5     77.6      118  a    \n Golden.rain  104.5 7.8  5     84.5      125  a    \n Marvellous   109.8 7.8  5     89.7      130  a    \n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 3 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\n\ncld(m2, alpha=0.05, Letters=letters)\n\n N      emmean   SE df lower.CL upper.CL .group\n 0.0cwt   79.4 7.17  5     60.9     97.8  a    \n 0.2cwt   98.9 7.17  5     80.4    117.3   b   \n 0.4cwt  114.2 7.17  5     95.8    132.7    c  \n 0.6cwt  123.4 7.17  5    104.9    141.8    c  \n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 4 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\nLet’s have a look at the CLDs for the interaction effect:\n\ncld3 &lt;- cld(m3, alpha=0.05, Letters=letters)\ncld3\n\n V           N      emmean   SE df lower.CL upper.CL .group    \n Victory     0.0cwt   71.5 9.11  5     48.1     94.9  a        \n Golden.rain 0.0cwt   80.0 9.11  5     56.6    103.4  abcde    \n Marvellous  0.0cwt   86.7 9.11  5     63.3    110.1  abc  fg  \n Victory     0.2cwt   89.7 9.11  5     66.3    113.1  ab d f h \n Golden.rain 0.2cwt   98.5 9.11  5     75.1    121.9  abcdefghi\n Marvellous  0.2cwt  108.5 9.11  5     85.1    131.9  abcdefghi\n Victory     0.4cwt  110.8 9.11  5     87.4    134.2   bcdefghi\n Golden.rain 0.4cwt  114.7 9.11  5     91.3    138.1       fghi\n Marvellous  0.4cwt  117.2 9.11  5     93.8    140.6     de  hi\n Victory     0.6cwt  118.5 9.11  5     95.1    141.9    c e g i\n Golden.rain 0.6cwt  124.8 9.11  5    101.4    148.2       fghi\n Marvellous  0.6cwt  126.8 9.11  5    103.4    150.2         hi\n\nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 12 estimates \nsignificance level used: alpha = 0.05 \nNOTE: If two or more means share the same grouping symbol,\n      then we cannot show them to be different.\n      But we also did not show them to be the same. \n\n\nInterpretation of these letters is: Here we have a significant difference in grain yield with varieties “victory”, with N treatments of 0.0cwt, 0.2cwt, 0.4cwt, and 0.6wt. Grain yield for Golden.rain variety was significantly lower with 0.0cwt N treatment compared to the 0.2cwt, 0.4cwt, and 0.6wt treatments.\nIn the data set we used for demonstration here, we had equal number of observations in each group. However, this might not be a case every time as it is common to have missing values in the data set. In such cases, readers usually struggle to interpret significant differences among groups. For example, estimated means of two groups are substantially different but they are no statistically different. This normally happens when SE of one group is large due to its small sample size, so it’s hard for it to be statistically different from other groups. In such cases, we can use alternatives to CLDs as shown below.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#alternatives-to-cld",
    "href": "chapters/means-and-contrasts.html#alternatives-to-cld",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.5 Alternatives to CLD",
    "text": "12.5 Alternatives to CLD\n\nEquivalence test\n\nLet’s assume based on subject matter considerations, if mean yield of two groups differ by less than 30 can be considered equivalent. Let’s try equivalence test on clds of nitrogen treatment emmeans (m2)\n\ncld(m2, delta = 30, adjust = \"none\")\n\n N      emmean   SE df lower.CL upper.CL .equiv.set\n 0.0cwt   79.4 7.17  5     60.9     97.8  1        \n 0.2cwt   98.9 7.17  5     80.4    117.3  12       \n 0.4cwt  114.2 7.17  5     95.8    132.7   23      \n 0.6cwt  123.4 7.17  5    104.9    141.8    3      \n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \nStatistics are tests of equivalence with a threshold of 30 \nP values are left-tailed \nsignificance level used: alpha = 0.05 \nEstimates sharing the same symbol test as equivalent \n\n\nHere, two treatment groups ‘0.0cwt’ and ‘0.2cwt’, ‘0.4cwt’ and ‘0.6cwt’ can be considered equivalent.\n\nSignificance Sets\n\nAnother alternative is to simply reverse all the boolean flags we used in constructing CLDs for m3 first time.\n\ncld(m2, signif = TRUE)\n\n N      emmean   SE df lower.CL upper.CL .signif.set\n 0.0cwt   79.4 7.17  5     60.9     97.8  12        \n 0.2cwt   98.9 7.17  5     80.4    117.3  12        \n 0.4cwt  114.2 7.17  5     95.8    132.7  1         \n 0.6cwt  123.4 7.17  5    104.9    141.8   2        \n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \nP value adjustment: tukey method for comparing a family of 4 estimates \nsignificance level used: alpha = 0.05 \nEstimates sharing the same symbol are significantly different \n\n\n\n\n\n\n\n\nCautionary Note about CLD\n\n\n\nIt’s important to note that we cannot conclude that treatment levels with the same letter are the same. We can only conclude that they are not different.\nThere is a separate branch of statistics, “equivalence testing” that is for ascertaining if things are sufficiently similar to conclude they are equivalent.\nSee ?sec-cld_warning for additional warnings about problems with using compact letter display.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#pairwise-comparison-using-emmeans",
    "href": "chapters/means-and-contrasts.html#pairwise-comparison-using-emmeans",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.3 Pairwise comparison using emmeans",
    "text": "12.3 Pairwise comparison using emmeans\nFirstly, the pairs() function from emmeans package can be used to evaluate the pairwise comparison among treatment objects. The emmean object (m1, m2) will be passed through pairs() function which will provide a p-value adjustment equivalent to the Tukey test.\n\npairs(m1, adjust = \"tukey\")\n\n contrast                 estimate   SE df t.ratio p.value\n Golden.rain - Marvellous    -5.29 7.08 10  -0.748  0.7419\n Golden.rain - Victory        6.88 7.08 10   0.971  0.6104\n Marvellous - Victory        12.17 7.08 10   1.719  0.2458\n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nP value adjustment: tukey method for comparing a family of 3 estimates \n\n\n\n12.3.1 Custom contrasts\n\nTreatment\n\nFirstly, let’s run emmean object ‘m1’ for variety compariosn.\n\nm1\n\n V           emmean  SE df lower.CL upper.CL\n Golden.rain  104.5 7.8  5     84.5      125\n Marvellous   109.8 7.8  5     89.7      130\n Victory       97.6 7.8  5     77.6      118\n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\n\ncoef(pairs(m1))\n\n                      V c.1 c.2 c.3\nGolden.rain Golden.rain   1   1   0\nMarvellous   Marvellous  -1   0   1\nVictory         Victory   0  -1  -1\n\n\n\nA1 = c(1, 0, 0)\nA2 = c(0, 1, 0)\nA3 = c(0, 0, 1)\n\nThese vectors (A1, A2, A3) represent each variety in an order as presented in m1 emmean object. A1, A2, and A3 vectors represent Golden.rain, Marvellous, and Victor varieties, respectively.\n\nm1\n\n V           emmean  SE df lower.CL upper.CL\n Golden.rain  104.5 7.8  5     84.5      125\n Marvellous   109.8 7.8  5     89.7      130\n Victory       97.6 7.8  5     77.6      118\n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\nemmeans(m1, specs = pairwise ~ V, \n         at = list(sub.rate = c(\"Golden.rain\", \"Victory\") ) )\n\nNOTE: Results may be misleading due to involvement in interactions\n\n\n$emmeans\n V           emmean  SE df lower.CL upper.CL\n Golden.rain  104.5 7.8  5     84.5      125\n Marvellous   109.8 7.8  5     89.7      130\n Victory       97.6 7.8  5     77.6      118\n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n$contrasts\n contrast                 estimate   SE df t.ratio p.value\n Golden.rain - Marvellous    -5.29 7.08 10  -0.748  0.7419\n Golden.rain - Victory        6.88 7.08 10   0.971  0.6104\n Marvellous - Victory        12.17 7.08 10   1.719  0.2458\n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nP value adjustment: tukey method for comparing a family of 3 estimates \n\n\n\n\n\n\n\n\npairs()\n\n\n\nRemember!! The pairs() function can be used to calculate pairwise comparison when treatment groups are less than equal to 3.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#contrasts-using-emmeans",
    "href": "chapters/means-and-contrasts.html#contrasts-using-emmeans",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.3 Contrasts using emmeans",
    "text": "12.3 Contrasts using emmeans\nFirstly, the pairs() function from emmeans package can be used to evaluate the pairwise comparison among treatment objects. The emmean object (m1, m2) will be passed through pairs() function which will provide a p-value adjustment equivalent to the Tukey test.\n\npairs(m1, adjust = \"tukey\")\n\n contrast                 estimate   SE df t.ratio p.value\n Golden.rain - Marvellous    -5.29 7.08 10  -0.748  0.7419\n Golden.rain - Victory        6.88 7.08 10   0.971  0.6104\n Marvellous - Victory        12.17 7.08 10   1.719  0.2458\n\nResults are averaged over the levels of: N \nDegrees-of-freedom method: containment \nP value adjustment: tukey method for comparing a family of 3 estimates \n\n\n\npairs(m2)\n\n contrast        estimate   SE df t.ratio p.value\n 0.0cwt - 0.2cwt   -19.50 4.44 45  -4.396  0.0004\n 0.0cwt - 0.4cwt   -34.83 4.44 45  -7.853  &lt;.0001\n 0.0cwt - 0.6cwt   -44.00 4.44 45  -9.919  &lt;.0001\n 0.2cwt - 0.4cwt   -15.33 4.44 45  -3.457  0.0064\n 0.2cwt - 0.6cwt   -24.50 4.44 45  -5.523  &lt;.0001\n 0.4cwt - 0.6cwt    -9.17 4.44 45  -2.067  0.1797\n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \nP value adjustment: tukey method for comparing a family of 4 estimates \n\n\nHere if we look at the results from code chunk above, it’s easy to interpret results from pairs() function in case of varietey comparison becuase there were only 3 groups. It’s bit confusing in case of Nitrogen treatments where we had 4 groups. We can further simplify it by using custom contrasts.\n\n\n\n\n\n\npairs()\n\n\n\nRemember!! The pairs() function can be used to calculate pairwise comparison when treatment groups are less than equal to 3.\n\n\n\n12.3.1 Custom contrasts\nFirstly, let’s run emmean object ‘m2’ for nitrogen treatment comparison.\n\nm2\n\n N      emmean   SE df lower.CL upper.CL\n 0.0cwt   79.4 7.17  5     60.9     97.8\n 0.2cwt   98.9 7.17  5     80.4    117.3\n 0.4cwt  114.2 7.17  5     95.8    132.7\n 0.6cwt  123.4 7.17  5    104.9    141.8\n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \nConfidence level used: 0.95 \n\n\nNow, lets a create a vector for each nitrogen treatment in the same order as presented in output from m2.\n\nA1 = c(1, 0, 0, 0)\nA2 = c(0, 1, 0, 0)\nA3 = c(0, 0, 1, 0)\nA4 = c(0, 0, 0, 1)\n\nThese vectors (A1, A2, A3, A4) represent each Nitrogen treatment in an order as presented in m2 emmeans object. A1, A2, and A3, A4 vectors represents 0.0cwt, 0.2cwt, 0.4cwt, and 0.6cwt treatments, respectively.\nLet’s create custom contrasts for comparing ‘0.0cwt’ (A1) treatment to ‘0.2cwt’ (A2), ‘0.4cwt’ (A3), and ‘0.6cwt’ (A4) treatments. This can be evaluated as shown below: Here the output shows the difference in mean yield between these two varieties\n\ncontrast(m2, method = list(A1 - A2) )\n\n contrast       estimate   SE df t.ratio p.value\n c(1, -1, 0, 0)    -19.5 4.44 45  -4.396  0.0001\n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \n\ncontrast(m2, method = list(A1 - A3) )\n\n contrast       estimate   SE df t.ratio p.value\n c(1, 0, -1, 0)    -34.8 4.44 45  -7.853  &lt;.0001\n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \n\ncontrast(m2, method = list(A1 - A4) )\n\n contrast       estimate   SE df t.ratio p.value\n c(1, 0, 0, -1)      -44 4.44 45  -9.919  &lt;.0001\n\nResults are averaged over the levels of: V \nDegrees-of-freedom method: containment \n\n\n\n\nUsing custom contrasts is strongly recommended instead of pairs() when you are comparing multiple treatment groups (&gt;5).",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#creating-plots-with-emmeans",
    "href": "chapters/means-and-contrasts.html#creating-plots-with-emmeans",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.8 creating plots with emmeans",
    "text": "12.8 creating plots with emmeans\n\n12.8.1 Interactions using Emmeans\n\n\n12.8.2 Contrasts using Emmeans\n\n(warp.emm &lt;- emmeans(warp.lm, ~ tension | wool))\n\ncontrast(warp.emm, \"poly\")\n\nCompact letter display\n\n#library(multcomp); library(multcompView)\n\n\n#cld(m1, Letters= letters)\n\nThe letters indicating significant differences can be generated using cld() function from the ‘multcomp’ package”. In the output below, groups sharing a letter in the .group are not statistically different from each other.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#export-emmeans-to-excel-sheet",
    "href": "chapters/means-and-contrasts.html#export-emmeans-to-excel-sheet",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.6 Export emmeans to excel sheet",
    "text": "12.6 Export emmeans to excel sheet\nThe outputs from emmeans() or cld() objects can exported by firstly converting outputs to a data frame and then using writexlsx() function from the ‘writexl’ package to export the outputs.\n\nresult_n &lt;- as.data.frame(summary(m1))\n\n\nwritexl::write_xlsx(result_n)",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#graphical-display-of-emmeans",
    "href": "chapters/means-and-contrasts.html#graphical-display-of-emmeans",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.7 Graphical display of emmeans",
    "text": "12.7 Graphical display of emmeans\nThe results of emmeans() object can be plotted in two different ways. Firstly, we can use base plot() function in R.\n\nplot(m1)\n\n\n\n\n\n\n\nplot(m4)\n\n\n\n\n\n\n\n\nOr we can use ‘ggplot2’ library. We can plot cld3 object in ggplot, with Variety on x-axis and estimated means of yield on y-axis. Different N treatments are presented in groups of different colors.\n\nggplot(cld3) +\n  aes(x = V, y = emmean, color = N) +\n  geom_point(position = position_dodge(width = 0.9)) +\n  geom_errorbar(mapping = aes(ymin = lower.CL, ymax = upper.CL), \n                              position = position_dodge(width = 1),\n                width = 0.1) +\n  geom_text(mapping = aes(label = .group, y = upper.CL * 1.05), \n            position = position_dodge(width = 0.8), \n            show.legend = F)+\n  theme_bw()+\n  theme(axis.text= element_text(color = \"black\",\n                                size =12))\n\n\n\n\n\n\n\n\nRecall: groups that do not differ significantly from each other share the same letter.\nwe can also use emmip() built in emmeans package to look at the trend in interaction of variety and nitrogen factors.\n\nemmip(model1, N ~ V)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMore details on emmeans\n\n\n\nIf you want to read more about emmeans, please refer to vignettes on this CRAN page.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  },
  {
    "objectID": "chapters/means-and-contrasts.html#conclusion",
    "href": "chapters/means-and-contrasts.html#conclusion",
    "title": "12  Marginal Means & Contrasts",
    "section": "12.8 Conclusion",
    "text": "12.8 Conclusion\nBe cautious with the terms “significant” and “nonsignificant”, and don’t ever interpret a “nonsignificant” result as saying that there is no effect. Follow good statistical practices such as getting the model right first, and using adjusted P values for appropriately chosen families of comparisons or contrasts.\n\n\n\n\n\n\nP values, “significance”, and recommendations\n\n\n\nP values are often misinterpreted, and the term “statistical significance” can be misleading. Please refer to this link to read more about basic principles outlined by the American Statistical Association when considering p-values.\nIf you want to read more about emmeans, please refer to vignettes on this CRAN page.",
    "crumbs": [
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>Marginal Means and Contrasts</span>"
    ]
  }
]